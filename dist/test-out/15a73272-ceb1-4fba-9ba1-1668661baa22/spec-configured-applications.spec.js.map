{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\features\\application\\configured-applications\\configured-applications.html", "angular:jit:style:src\\app\\features\\application\\configured-applications\\configured-applications.css", "src/app/features/application/configured-applications/configured-applications.ts", "src/app/features/application/configured-applications/configured-applications.spec.ts"],
  "sourcesContent": ["<app-nav-bar></app-nav-bar>\r\n\r\n<div class=\"page-container\">\r\n    <h1>Configured Applications/Services</h1>\r\n\r\n    <div style=\" padding: 100px;\">\r\n        <mat-card class=\"actions-card\">\r\n            <mat-card-header>\r\n                <mat-card-subtitle class=\"sub-tittle\">All Applications Table</mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-actions>\r\n                <button matButton class=\"dist-button\" routerLink=\"/onboard-application\">\r\n                    <mat-icon>cloud_upload</mat-icon>\r\n                    Onboard Application/Service\r\n                </button>\r\n            </mat-card-actions>\r\n        </mat-card>\r\n        <table id=\"customers\">\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Description</th>\r\n            </tr>\r\n\r\n            @for (application of configuredApps; track application) {\r\n            <tr>\r\n                <td>{{application.name}}</td>\r\n                <td>{{application.description}}</td>\r\n            </tr>\r\n            }\r\n        </table>\r\n    </div>\r\n</div>", "/* src/app/features/application/configured-applications/configured-applications.css */\n#customers {\n  font-family:\n    Arial,\n    Helvetica,\n    sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n  background-color: white;\n  margin-top: 10px;\n}\n#customers td,\n#customers th {\n  border: 1px solid #ddd;\n  padding: 8px;\n}\n#customers tr:nth-child(even) {\n  background-color: #f2f2f2;\n}\n#customers tr:hover {\n  background-color: #ddd;\n}\n#customers th {\n  padding-top: 12px;\n  padding-bottom: 12px;\n  text-align: left;\n  background-color: #006192;\n  color: white;\n}\n.actions-card {\n  border: none;\n  border-radius: 2px;\n  background-color: white;\n  box-shadow: none;\n}\n.dist-button {\n  display: flex;\n  justify-content: start;\n  margin-left: auto;\n}\n/*# sourceMappingURL=configured-applications.css.map */\n", "import { Component } from '@angular/core';\r\nimport { NavBar } from \"../../../components/nav-bar/nav-bar\";\r\nimport { MatCard, MatCardActions, MatCardHeader, MatCardSubtitle } from \"@angular/material/card\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { RouterLink } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-configured-applications',\r\n  standalone: true,\r\n  imports: [\r\n    NavBar, \r\n    MatCard, \r\n    MatCardHeader, \r\n    MatCardSubtitle, \r\n    MatCardActions, \r\n    MatIconModule,\r\n    MatButtonModule,\r\n    RouterLink\r\n  ],\r\n  templateUrl: './configured-applications.html',\r\n  styleUrl: './configured-applications.css'\r\n})\r\nexport class ConfiguredApplications {\r\n\r\n  configuredApps = [\r\n    { name: 'App One', description: 'Description for App One' },\r\n    { name: 'App Two', description: 'Description for App Two' },\r\n    { name: 'App Three', description: 'Description for App Three' }\r\n  ];\r\n\r\n}\r\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\nimport { ConfiguredApplications } from './configured-applications';\r\n\r\ndescribe('ConfiguredApplications', () => {\r\n  let component: ConfiguredApplications;\r\n  let fixture: ComponentFixture<ConfiguredApplications>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [ConfiguredApplications]\r\n    })\r\n    .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(ConfiguredApplications);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,gCAAA;AAAA;AAAA,IAAAD,mCAAA;AAAA;AAAA;;;ICuBa;;;;;;;AAvBb;AACA;AACA;AACA;AACA;AACA;AAkBO,IAAM,yBAAN,MAAME,wBAAsB;MAEjC,iBAAiB;QACf,EAAE,MAAM,WAAW,aAAa,0BAAyB;QACzD,EAAE,MAAM,WAAW,aAAa,0BAAyB;QACzD,EAAE,MAAM,aAAa,aAAa,4BAA2B;;;AALpD,6BAAsB,WAAA;MAhBlC,UAAU;QACT,UAAU;QACV,YAAY;QACZ,SAAS;UACP;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;QAEF,UAAA;;OAED;OACY,sBAAsB;;;;;ACvBnC;;;AAEA,IAAAC;AAEA,aAAS,0BAA0B,MAAK;AACtC,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,sBAAsB;SACjC,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,sBAAsB;AACxD,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["configured_applications_default", "init_configured_applications", "ConfiguredApplications", "init_configured_applications"]
}
