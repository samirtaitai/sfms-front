{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\features\\application\\create-application\\create-application.html", "angular:jit:style:src\\app\\features\\application\\create-application\\create-application.css", "src/app/features/application/create-application/create-application.ts", "src/app/features/application/create-application/create-application.spec.ts"],
  "sourcesContent": ["<app-nav-bar></app-nav-bar>\r\n<button [disabled]=\"workflowForm.invalid\" matIconButton aria-label=\"Back History button\" (click)=\"backHistory()\">\r\n    <mat-icon>keyboard_backspace</mat-icon>\r\n</button>\r\n<button matButton style=\"display: flex; margin-left: auto; border-radius: 5px; height: 35px;\"\r\n    (click)=\"createApplication()\">\r\n    <mat-icon>save</mat-icon>\r\n    Create Application\r\n</button>\r\n<div class=\"page-container\">\r\n    <mat-card class=\"application-card\" appearance=\"outlined\">\r\n        <mat-card-header>\r\n            <mat-icon mat-card-avatar>web</mat-icon>\r\n            <mat-card-title>Create Application</mat-card-title>\r\n            <mat-card-subtitle>Create a new application to the platform</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content style=\"padding: 20px; display:flex; flex-direction: column;\">\r\n            <p>To create a new application, please provide the following details:</p>\r\n            <form [formGroup]=\"applicationForm\" style=\"padding: 20px; display:flex; flex-direction: column;\">\r\n                <mat-form-field  appearance=\"fill\" class=\"full-width\">\r\n                    <mat-label>Application Name</mat-label>\r\n                    <input formControlName=\"name\" matInput placeholder=\"Enter the application name\">\r\n                </mat-form-field>\r\n                <mat-form-field  appearance=\"fill\" class=\"full-width\">\r\n                    <mat-label>Application Description</mat-label>\r\n                    <input formControlName=\"description\" matInput placeholder=\"Enter the application descripton\">\r\n                </mat-form-field>\r\n            </form>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"application-card\" appearance=\"outlined\">\r\n        <mat-card-header>\r\n            <mat-icon mat-card-avatar>web</mat-icon>\r\n            <mat-card-title>Flows</mat-card-title>\r\n            <mat-card-subtitle>Added flows</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content style=\"padding: 20px; display:flex; flex-direction: column;\">\r\n            <form [formGroup]=\"workflowForm\">\r\n                <div style=\"display: flex; align-items: center; \">\r\n                    <mat-form-field style=\" height: 70px;\">\r\n                        <mat-label>Code</mat-label>\r\n                        <input matInput placeholder=\"Flow Code\" formControlName=\"name\" required>\r\n                    </mat-form-field>\r\n                    <mat-form-field style=\"margin-left: 10px; height: 70px\">\r\n                        <mat-label>Description</mat-label>\r\n                        <input matInput placeholder=\"Flow Description\" formControlName=\"description\" required>\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n                <button matButton=\"filled\" style=\"display: flex; margin-left: auto; border-radius: 5px; height: 25px;\"\r\n                    (click)=\"addAcction()\">\r\n                    <mat-icon>post_add</mat-icon>\r\n                    Add Flow\r\n                </button>\r\n            </form>\r\n            <div class=\"container2\">\r\n                @for (flow of applicationFlows; track flow) {\r\n                <div\r\n                    style=\"padding: 5px; display: flex; justify-content: space-between; align-items: center; height: 20px; margin-top: 5px; background-color: rgba(103, 117, 143, 0.08); min-width: 100%;\">\r\n                    <div style=\"display: flex; align-items: centery;width: 50%;\">\r\n                        <h5 style=\"margin-right: auto;\">{{flow.name}}</h5>\r\n                        <h5 style=\"margin-left: auto;\">{{flow.description}}</h5>\r\n                    </div>\r\n                    <button style=\"color: rgb(148, 49, 49);\" matButton matMiniFab (click)=\"deleteAction(flow)\">\r\n                        <mat-icon color=\"danger\">delete</mat-icon>\r\n                    </button>\r\n                </div>\r\n                }\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n\r\n</div>", "/* src/app/features/application/create-application/create-application.css */\n.page-container {\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n}\n.application-card {\n  width: 420px;\n  color: #006192;\n  background-color: white;\n}\n/*# sourceMappingURL=create-application.css.map */\n", "import { Component } from '@angular/core';\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatButtonToggleModule } from \"@angular/material/button-toggle\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { NavBar } from \"../../../components/nav-bar/nav-bar\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatCard, MatCardModule } from \"@angular/material/card\";\r\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { Application } from '../service/application'; // Adjust the path as needed\r\n\r\n@Component({\r\n  selector: 'app-create-application',\r\n  imports: [\r\n    MatListModule,\r\n    MatButtonToggleModule,\r\n    MatInputModule,\r\n    NavBar,\r\n    MatIconModule,\r\n    MatCard,\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    MatButton\r\n  ],\r\n  templateUrl: './create-application.html',\r\n  styleUrl: './create-application.css'\r\n})\r\nexport class CreateApplication {\r\n  applicationForm: any\r\n  workflowForm: any;\r\n  applicationFlows: any = [];\r\n\r\n  constructor(private _formBuilder: FormBuilder, private application: Application) {\r\n    this.workflowForm = this._formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n    });\r\n    this.applicationForm = this._formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n\r\n  backHistory(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  addAcction() {\r\n    if (this.workflowForm.valid) {\r\n      this.applicationFlows.push(this.workflowForm.value);\r\n      this.workflowForm.reset();\r\n    } else {\r\n      console.error('Form is invalid');\r\n    }\r\n  }\r\n\r\n  deleteAction(file: any) {\r\n    const index = this.applicationFlows.indexOf(file);\r\n    if (index > -1) {\r\n      this.applicationFlows.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  createApplication() {\r\n    const application = {\r\n      name: this.applicationForm.value.name,\r\n      description: this.applicationForm.value.description,\r\n      flows: this.applicationFlows\r\n    };\r\n    console.log('Creating application:', application);\r\n    if (application.flows.length > 0 && this.applicationForm.valid) {\r\n      this.application.createApplication(application.name, application.description, this.applicationFlows);\r\n      this.workflowForm.reset();\r\n      this.applicationForm.reset();\r\n      this.applicationFlows = [];\r\n      alert('Application created successfully!');\r\n    } else {\r\n      alert('Please add at least one flow before creating the application.');\r\n    }\r\n  }\r\n}\r\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\nimport { CreateApplication } from './create-application';\r\n\r\ndescribe('CreateApplication', () => {\r\n  let component: CreateApplication;\r\n  let fixture: ComponentFixture<CreateApplication>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [CreateApplication]\r\n    })\r\n    .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(CreateApplication);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,2BAAA;AAAA;AAAA,IAAAD,8BAAA;AAAA;AAAA;;;IC2Ba;;;;;;;AA3Bb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBO,IAAM,oBAAN,MAAME,mBAAiB;MAKR;MAAmC;MAJvD;MACA;MACA,mBAAwB,CAAA;MAExB,YAAoB,cAAmC,aAAwB;AAA3D,aAAA,eAAA;AAAmC,aAAA,cAAA;AACrD,aAAK,eAAe,KAAK,aAAa,MAAM;UAC1C,MAAM,CAAC,IAAI,WAAW,QAAQ;UAC9B,aAAa,CAAC,IAAI,WAAW,QAAQ;SACtC;AACD,aAAK,kBAAkB,KAAK,aAAa,MAAM;UAC7C,MAAM,CAAC,IAAI,WAAW,QAAQ;UAC9B,aAAa,CAAC,IAAI,WAAW,QAAQ;SACtC;MACH;MAGA,cAAW;AACT,eAAO,QAAQ,KAAI;MACrB;MAEA,aAAU;AACR,YAAI,KAAK,aAAa,OAAO;AAC3B,eAAK,iBAAiB,KAAK,KAAK,aAAa,KAAK;AAClD,eAAK,aAAa,MAAK;QACzB,OAAO;AACL,kBAAQ,MAAM,iBAAiB;QACjC;MACF;MAEA,aAAa,MAAS;AACpB,cAAM,QAAQ,KAAK,iBAAiB,QAAQ,IAAI;AAChD,YAAI,QAAQ,IAAI;AACd,eAAK,iBAAiB,OAAO,OAAO,CAAC;QACvC;MACF;MAEA,oBAAiB;AACf,cAAM,cAAc;UAClB,MAAM,KAAK,gBAAgB,MAAM;UACjC,aAAa,KAAK,gBAAgB,MAAM;UACxC,OAAO,KAAK;;AAEd,gBAAQ,IAAI,yBAAyB,WAAW;AAChD,YAAI,YAAY,MAAM,SAAS,KAAK,KAAK,gBAAgB,OAAO;AAC9D,eAAK,YAAY,kBAAkB,YAAY,MAAM,YAAY,aAAa,KAAK,gBAAgB;AACnG,eAAK,aAAa,MAAK;AACvB,eAAK,gBAAgB,MAAK;AAC1B,eAAK,mBAAmB,CAAA;AACxB,gBAAM,mCAAmC;QAC3C,OAAO;AACL,gBAAM,+DAA+D;QACvE;MACF;;;;;;AArDW,wBAAiB,WAAA;MAhB7B,UAAU;QACT,UAAU;QACV,SAAS;UACP;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;QAEF,UAAA;;OAED;OACY,iBAAiB;;;;;AC3B9B;;;AAEA,IAAAC;AAEA,aAAS,qBAAqB,MAAK;AACjC,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,iBAAiB;SAC5B,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,iBAAiB;AACnD,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["create_application_default", "init_create_application", "CreateApplication", "init_create_application"]
}
