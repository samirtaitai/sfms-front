{"version":3,"sources":["angular:jit:template:src\\app\\components\\stepper\\stepper.html","angular:jit:style:src\\app\\components\\stepper\\stepper.css","node_modules/@angular/cdk/fesm2022/stepper.mjs","node_modules/@angular/material/fesm2022/stepper.mjs","node_modules/@angular/material/fesm2022/internal-form-field-D5iFxU6d.mjs","node_modules/@angular/material/fesm2022/checkbox.mjs","node_modules/@angular/cdk/fesm2022/accordion.mjs","node_modules/@angular/material/fesm2022/expansion.mjs","node_modules/@angular/material/fesm2022/module-CWxMD37a.mjs","node_modules/@angular/material/fesm2022/tooltip.mjs","node_modules/@angular/cdk/fesm2022/tree.mjs","node_modules/@angular/material/fesm2022/tree.mjs","node_modules/@angular/material/fesm2022/chips.mjs","node_modules/@angular/material/fesm2022/slide-toggle.mjs","src/app/components/stepper/stepper.ts"],"sourcesContent":["<mat-stepper class=\"stepper\" [linear]=\"isLinear\" #stepper>\r\n    <mat-step [stepControl]=\"applicationConfigFormGroup\" label=\"Select Customer\">\r\n        <section>\r\n            <form [formGroup]=\"applicationConfigFormGroup\" style=\"display: flex; flex-direction: column;\">\r\n                <div>\r\n                    <mat-form-field style=\"margin-left: 20px; height: 70px\">\r\n                        <mat-select formControlName=\"customer\" placeholder=\"Select Customer\">\r\n                            @for (customer of customers; track customer) {\r\n                            <mat-option [value]=\"customer\">{{customer.name}}</mat-option>\r\n                            }\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field style=\"margin-left: 20px; height: 70px\">\r\n                        <mat-select formControlName=\"OrgEntity\" placeholder=\"Select OrgEntity\">\r\n                            @for (oe of orgEntities; track oe) {\r\n                            <mat-option [value]=\"oe\">{{oe.name}}</mat-option>\r\n                            }\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field style=\"margin-left: 20px; height: 70px\">\r\n                        <mat-select formControlName=\"application\" placeholder=\"Select application\">\r\n                            @for (application of applications; track application) {\r\n                            <mat-option [value]=\"application\">{{application.name}}</mat-option>\r\n                            }\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div style=\"display:flex;\">\r\n                    <mat-form-field style=\"margin-left: 20px; height: 70px\">\r\n                        <mat-select formControlName=\"oidcProviders\" placeholder=\"Select oidcProvider\">\r\n                            @for (oidcProvider of oidcProviders; track oidcProvider) {\r\n                            <mat-option [value]=\"oidcProvider\">{{oidcProvider}}</mat-option>\r\n                            }\r\n                        </mat-select>\r\n                    </mat-form-field>\r\n                    <mat-form-field style=\"margin-left: 20px; height: 70px\">\r\n                        <mat-label>Introspection endpoint</mat-label>\r\n                        <input [value]=\"instros\" matInput placeholder=\"Introspection enpoints\"\r\n                            formControlName=\"instrospecionEndpoint\" required>\r\n                    </mat-form-field>\r\n                    <mat-form-field style=\"margin-left: 20px; height: 70px\">\r\n                        <mat-label>Storege region</mat-label>\r\n                        <input matInput placeholder=\"storage region\" formControlName=\"storageRegion\" required>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div style=\"display:flex; gap: 20px; margin-left: 20px; align-items: center;\">\r\n                    <p>Active <mat-slide-toggle [checked]=\"true\" formControlName=\"status\" labelPosition=\"before\"></mat-slide-toggle></p>\r\n                    <p>Enabled<mat-slide-toggle formControlName=\"enabled\" labelPosition=\"before\"></mat-slide-toggle></p>\r\n                </div>\r\n            </form>\r\n\r\n        </section>\r\n        <div class=\"stepper-footer\">\r\n            <button matButton matStepperNext class=\"no-radius\">Next</button>\r\n        </div>\r\n    </mat-step>\r\n\r\n    <mat-step label=\"Role Configuration\" style=\"display: flex;\">\r\n        <div style=\"display: flex; flex-direction: column; width: 500px; margin-left: auto; margin-right: auto;\">\r\n            @for (flow of selectedApplication?.flows; track flow) {\r\n            <mat-form-field>\r\n                <mat-label>Roles config {{flow.name}}</mat-label>\r\n                <mat-select>\r\n                    @for (food of roles; track food) {\r\n                    <mat-option [value]=\"food.value\">{{food.viewValue}}</mat-option>\r\n                    }\r\n                </mat-select>\r\n            </mat-form-field>\r\n            }\r\n        </div>\r\n        <div class=\"stepper-footer\">\r\n            <button matButton matStepperPrevious>Back</button>\r\n            <button matButton matStepperNext class=\"no-radius\">Next</button>\r\n        </div>\r\n    </mat-step>\r\n\r\n    <mat-step label=\"Configure flows\" style=\"display: flex;\">\r\n        @for (flow of selectedApplication.flows; track flow) {\r\n\r\n        <div style=\"display: flex; justify-content: space-evenly; align-items: center;\">\r\n            <mat-card class=\"application-card\" appearance=\"filled\">\r\n                <mat-card-header style=\"display: flex; align-items: center;justify-content: center;padding: 5px;\">\r\n                    <mat-card-subtitle>{{flow.code}} Configuration</mat-card-subtitle>\r\n                </mat-card-header>\r\n                <mat-card-content style=\"padding: 20px; display:flex;flex-direction: column; height: 400px;\">\r\n                    <div>\r\n                        <form [formGroup]=\"fileTypesForm\" style=\"display:flex; gap: 10px;\">\r\n                            <mat-form-field style=\" height: 70px\">\r\n                                <mat-label>Action</mat-label>\r\n                                <mat-select formControlName=\"action\" required>\r\n                                    @for (food of action; track food) {\r\n                                    <mat-option [value]=\"food.value\">{{food.viewValue}}</mat-option>\r\n                                    }\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field style=\"height: 70px\">\r\n                                <mat-label>Type</mat-label>\r\n                                <mat-select formControlName=\"type\" required>\r\n                                    @for (food of foods; track food) {\r\n                                    <mat-option [value]=\"food.value\">{{food.viewValue}}</mat-option>\r\n                                    }\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <mat-form-field style=\" height: 70px\">\r\n                                <mat-label>File size</mat-label>\r\n                                <input matInput placeholder=\"Application description\" formControlName=\"size\" required>\r\n                            </mat-form-field>\r\n                        </form>\r\n                        <div style=\"display: flex; gap: 10px; justify-content: flex-end;\">\r\n                            <button [disabled]=\"!selectedConfiguration\" (click)=\"copyConfiguration(flow.code)\"\r\n                                matButton=\"outlined\" style=\"display: flex;; border-radius: 5px; height: 25px;\">\r\n                                <mat-icon>content_copy</mat-icon>\r\n                                Clone\r\n                            </button>\r\n                            <button (click)=\"addConfiguration(flow.code)\" matButton=\"filled\"\r\n                                style=\"display: flex; border-radius: 5px; height: 25px;\">\r\n                                <mat-icon>playlist_add</mat-icon>\r\n                                Add\r\n                            </button>\r\n                        </div>\r\n                        <div\r\n                            style=\"margin-top: 10px; height: 200px; overflow-y: auto; display: flex; flex-direction: column;\">\r\n                            @for (config of configurations; track config) {\r\n                            @if (config.flowName === flow.code) {\r\n                            <mat-chip-listbox class=\"mat-mdc-chip-set-stacked\" aria-label=\"Cutest dog breeds\">\r\n                                <mat-chip-option color=\"primary\" [selected]=\"consfigurationSelected(config.id)\"\r\n                                    (click)=\"selectConfiguration(config)\">\r\n                                    Type: {{config.type}} | Action: {{config.action}} | Size: {{config.size}}MB\r\n                                    <button matChipRemove (click)=\"deleteConfiguration(configurations.indexOf(config))\">\r\n                                        <mat-icon>cancel</mat-icon>\r\n                                    </button>\r\n                                </mat-chip-option>\r\n                            </mat-chip-listbox>\r\n                            }}\r\n                        </div>\r\n\r\n                        <div *ngIf=\"!hasConfiguration(flow.code)\"\r\n                            style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100%;\">\r\n                            No configuration added yet. Please add configuration.\r\n\r\n                            <mat-icon style=\"color: rgba(161, 211, 255, 0.61);\">settings_b_roll</mat-icon>\r\n                        </div>\r\n                    </div>\r\n                </mat-card-content>\r\n            </mat-card>\r\n\r\n        </div>\r\n        <hr>\r\n        }\r\n        <div class=\"stepper-footer\">\r\n            <button matButton matStepperPrevious>Back</button>\r\n            <button matButton matStepperNext class=\"no-radius\">Next</button>\r\n        </div>\r\n    </mat-step>\r\n\r\n    <mat-step label=\"Onboard Application\">\r\n\r\n        <h3 style=\"text-align: center; margin-bottom: 20px;\">Review Application Configuration</h3>\r\n        <mat-card class=\"application-card\" appearance=\"outlined\"\r\n            style=\"width: 600px; margin-left: auto; margin-right: auto; height: auto;\">\r\n            <mat-card-header\r\n                style=\"background-color: aliceblue; border-radius: 10px 10px 0 0; display: flex; align-items: center;justify-content: center;padding: 5px;\">\r\n                <mat-card-subtitle>Application Summary</mat-card-subtitle>\r\n            </mat-card-header>\r\n            <mat-card-content style=\"padding: 20px;\">\r\n                <div style=\"display: flex; flex-direction: column; gap: 10px;\">\r\n                    <div style=\"display: flex; justify-content: space-between;\">\r\n                        <span><strong>Customer:</strong></span>\r\n                        <span>{{applicationConfigFormGroup.get('customer')?.value?.name}}</span>\r\n                    </div>\r\n                    <div style=\"display: flex; justify-content: space-between;\">\r\n                        <span><strong>OrgEntity:</strong></span>\r\n                        <span>{{applicationConfigFormGroup.get('OrgEntity')?.value?.name}}</span>\r\n                    </div>\r\n                    <div style=\"display: flex; justify-content: space-between;\">\r\n                        <span><strong>Application:</strong></span>\r\n                        <span>{{applicationConfigFormGroup.get('application')?.value?.name}}</span>\r\n                    </div>\r\n                    <div style=\"display: flex; justify-content: space-between;\">\r\n                        <span><strong>OIDC Provider:</strong></span>\r\n                        <span>{{applicationConfigFormGroup.get('oidcProviders')?.value}}</span>\r\n                    </div>\r\n                    <div style=\"display: flex; justify-content: space-between;\">\r\n                        <span><strong>Introspection Endpoint:</strong></span>\r\n                        <span>{{applicationConfigFormGroup.get('instrospecionEndpoint')?.value}}</span>\r\n                    </div>\r\n                    <div style=\"display: flex; justify-content: space-between;\">\r\n                        <span><strong>Storage Region:</strong></span>\r\n                        <span>{{applicationConfigFormGroup.get('storageRegion')?.value}}</span>\r\n                    </div>\r\n                    <div style=\"display: flex; justify-content: space-between;\">\r\n                        <span><strong>Status:</strong></span>\r\n                        <span>{{applicationConfigFormGroup.get('status')?.value}}</span>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    style=\"display: flex; flex-direction: column; justify-content: space-between; align-items: center;\">\r\n                    <span><strong>Configurations:</strong></span>\r\n                    <div\r\n                        style=\"display: flex; flex-direction: column; width:500px; max-height: 200px; overflow-y: auto;\">\r\n                        @for (config of configurations; track config) {\r\n                        <mat-chip-listbox class=\"mat-mdc-chip-set-stacked\" aria-label=\"Cutest dog breeds\">\r\n                            <mat-chip-option color=\"primary\">\r\n                                Type: {{config.type}} | Action: {{config.action}} | Size: {{config.size}}MB\r\n                                <button matChipRemove (click)=\"deleteConfiguration(configurations.indexOf(config))\">\r\n                                    <mat-icon>cancel</mat-icon>\r\n                                </button>\r\n                            </mat-chip-option>\r\n                        </mat-chip-listbox>\r\n                        }\r\n                        @if (configurations.length === 0) {\r\n                        <span style=\"font-size: 14px; color: gray;\">No configurations added.</span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </mat-card-content>\r\n            <button matButton=\"filled\" style=\"display: flex; margin-left: auto; border-radius: 5px; height: 25px;\">\r\n                <mat-icon>cloud_upload</mat-icon>\r\n                Confirm Onbording\r\n            </button>\r\n        </mat-card>\r\n        <div class=\"stepper-footer\">\r\n            <button matButton matStepperPrevious>Back</button>\r\n        </div>\r\n    </mat-step>\r\n</mat-stepper>","/* src/app/components/stepper/stepper.css */\n.form {\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n}\n.form-body {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: start;\n}\n.container {\n  display: flex;\n}\n.resume-cards {\n  display: flex;\n  flex-direction: column;\n}\n.stepper {\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 50px;\n  max-width: 90%;\n  background: white;\n}\n.stepper-footer {\n  display: flex;\n  justify-content: end;\n  align-items: center;\n  background-color: rgba(186, 205, 244, 0.116);\n  border-radius: 5px;\n}\n.no-radius {\n  border-radius: 0px;\n}\n.fomr-tittle-section {\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: 500;\n  color: #006192;\n}\n.form-tittle {\n  font-weight: 500;\n  color: #006192;\n}\n.application-card {\n  color: #006192;\n  background-color: rgba(246, 246, 246, 0.429);\n  height: 400px;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n/*# sourceMappingURL=stepper.css.map */\n","import * as i0 from '@angular/core';\nimport { inject, ElementRef, Directive, TemplateRef, InjectionToken, signal, EventEmitter, computed, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChild, ContentChildren, ViewChild, Input, Output, ChangeDetectorRef, QueryList, numberAttribute, NgModule } from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\nimport { D as Directionality } from './directionality-CChdj3az.mjs';\nimport { _ as _IdGenerator } from './id-generator-LuoRZSid.mjs';\nimport { F as FocusKeyManager } from './focus-key-manager-CPmlyB_c.mjs';\nimport { hasModifierKey } from './keycodes.mjs';\nimport { S as SPACE, c as ENTER } from './keycodes-CpHkExLC.mjs';\nimport { c as _getFocusedElementPierceShadowDom } from './shadow-dom-B0oHn41l.mjs';\nimport { BidiModule } from './bidi.mjs';\nimport './list-key-manager-C7tp3RbG.mjs';\nimport './typeahead-9ZW4Dtsf.mjs';\n\nclass CdkStepHeader {\n    _elementRef = inject(ElementRef);\n    constructor() { }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepHeader, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkStepHeader, isStandalone: true, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\nclass CdkStepLabel {\n    template = inject(TemplateRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkStepLabel, isStandalone: true, selector: \"[cdkStepLabel]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                }]\n        }], ctorParameters: () => [] });\n\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n    /** Index of the step now selected. */\n    selectedIndex;\n    /** Index of the step previously selected. */\n    previouslySelectedIndex;\n    /** The step instance now selected. */\n    selectedStep;\n    /** The step instance previously selected. */\n    previouslySelectedStep;\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    _stepperOptions;\n    _stepper = inject(CdkStepper);\n    _displayDefaultIndicatorType;\n    /** Template for step label if it exists. */\n    stepLabel;\n    /** Forms that have been projected into the step. */\n    _childForms;\n    /** Template for step content. */\n    content;\n    /** The top level abstract control of the step. */\n    stepControl;\n    /** Whether user has attempted to move away from the step. */\n    get interacted() {\n        return this._interacted();\n    }\n    set interacted(value) {\n        this._interacted.set(value);\n    }\n    _interacted = signal(false);\n    /** Emits when the user has attempted to move away from the step. */\n    interactedStream = new EventEmitter();\n    /** Plain text label of the step. */\n    label;\n    /** Error message to display when there's an error. */\n    errorMessage;\n    /** Aria label for the tab. */\n    ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    ariaLabelledby;\n    /** State of the step. */\n    get state() {\n        return this._state();\n    }\n    set state(value) {\n        this._state.set(value);\n    }\n    _state = signal(undefined);\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable();\n    }\n    set editable(value) {\n        this._editable.set(value);\n    }\n    _editable = signal(true);\n    /** Whether the completion of step is optional. */\n    optional = false;\n    /** Whether step is marked as completed. */\n    get completed() {\n        const override = this._completedOverride();\n        const interacted = this._interacted();\n        if (override != null) {\n            return override;\n        }\n        return interacted && (!this.stepControl || this.stepControl.valid);\n    }\n    set completed(value) {\n        this._completedOverride.set(value);\n    }\n    _completedOverride = signal(null);\n    /** Current index of the step within the stepper. */\n    index = signal(-1);\n    /** Whether the step is selected. */\n    isSelected = computed(() => this._stepper.selectedIndex === this.index());\n    /** Type of indicator that should be shown for the step. */\n    indicatorType = computed(() => {\n        const selected = this.isSelected();\n        const completed = this.completed;\n        const defaultState = this._state() ?? STEP_STATE.NUMBER;\n        const editable = this._editable();\n        if (this._showError() && this.hasError && !selected) {\n            return STEP_STATE.ERROR;\n        }\n        if (this._displayDefaultIndicatorType) {\n            if (!completed || selected) {\n                return STEP_STATE.NUMBER;\n            }\n            return editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n        else {\n            if (completed && !selected) {\n                return STEP_STATE.DONE;\n            }\n            else if (completed && selected) {\n                return defaultState;\n            }\n            return editable && selected ? STEP_STATE.EDIT : defaultState;\n        }\n    });\n    /** Whether the user can navigate to the step. */\n    isNavigable = computed(() => {\n        const isSelected = this.isSelected();\n        const isCompleted = this.completed;\n        return isCompleted || isSelected || !this._stepper.linear;\n    });\n    /** Whether step has an error. */\n    get hasError() {\n        const customError = this._customError();\n        return customError == null ? this._getDefaultError() : customError;\n    }\n    set hasError(value) {\n        this._customError.set(value);\n    }\n    _customError = signal(null);\n    _getDefaultError() {\n        return this.interacted && !!this.stepControl?.invalid;\n    }\n    constructor() {\n        const stepperOptions = inject(STEPPER_GLOBAL_OPTIONS, { optional: true });\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this._interacted.set(false);\n        if (this._completedOverride() != null) {\n            this._completedOverride.set(false);\n        }\n        if (this._customError() != null) {\n            this._customError.set(false);\n        }\n        if (this.stepControl) {\n            // Reset the forms since the default error state matchers will show errors on submit and we\n            // want the form to be back to its initial state (see #29781). Submitted state is on the\n            // individual directives, rather than the control, so we need to reset them ourselves.\n            this._childForms?.forEach(form => form.resetForm?.());\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this._interacted()) {\n            this._interacted.set(true);\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return this._stepperOptions.showError ?? this._customError() != null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStep, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkStep, isStandalone: true, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: [\"editable\", \"editable\", booleanAttribute], optional: [\"optional\", \"optional\", booleanAttribute], completed: [\"completed\", \"completed\", booleanAttribute], hasError: [\"hasError\", \"hasError\", booleanAttribute] }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }, { propertyName: \"_childForms\", predicate: \n                // Note: we look for `ControlContainer` here, because both `NgForm` and `FormGroupDirective`\n                // provides themselves as such, but we don't want to have a concrete reference to both of\n                // the directives. The type is marked as `Partial` in case we run into a class that provides\n                // itself as `ControlContainer` but doesn't have the same interface as the directives.\n                ControlContainer, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content/></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content/></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: () => [], propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], _childForms: [{\n                type: ContentChildren,\n                args: [\n                    // Note: we look for `ControlContainer` here, because both `NgForm` and `FormGroupDirective`\n                    // provides themselves as such, but we don't want to have a concrete reference to both of\n                    // the directives. The type is marked as `Partial` in case we run into a class that provides\n                    // itself as `ControlContainer` but doesn't have the same interface as the directives.\n                    ControlContainer,\n                    {\n                        descendants: true,\n                    }]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], optional: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], completed: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hasError: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\nclass CdkStepper {\n    _dir = inject(Directionality, { optional: true });\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Used for managing keyboard focus. */\n    _keyManager;\n    /** Full list of steps inside the stepper, including inside nested steppers. */\n    _steps;\n    /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n    steps = new QueryList();\n    /** The list of step headers of the steps in the stepper. */\n    _stepHeader;\n    /** List of step headers sorted based on their DOM order. */\n    _sortedHeaders = new QueryList();\n    /** Whether the validity of previous steps should be checked or not. */\n    linear = false;\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex();\n    }\n    set selectedIndex(index) {\n        if (this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(index) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this.selectedIndex !== index) {\n                this.selected?._markAsInteracted();\n                if (!this._anyControlsInvalidOrPending(index) &&\n                    (index >= this.selectedIndex || this.steps.toArray()[index].editable)) {\n                    this._updateSelectedItemIndex(index);\n                }\n            }\n        }\n        else {\n            this._selectedIndex.set(index);\n        }\n    }\n    _selectedIndex = signal(0);\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Event emitted when the selected step has changed. */\n    selectionChange = new EventEmitter();\n    /** Output to support two-way binding on `[(selectedIndex)]` */\n    selectedIndexChange = new EventEmitter();\n    /** Used to track unique ID for each stepper component. */\n    _groupId = inject(_IdGenerator).getId('cdk-stepper-');\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatStepper` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    _orientation = 'horizontal';\n    constructor() { }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.forEach((step, index) => step.index.set(index));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplication. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        // The selected index may have changed between when the component was created and when the\n        // key manager was initialized. Use `updateActiveItem` so it's correct, but it doesn't steal\n        // away focus from the user.\n        this._keyManager.updateActiveItem(this.selectedIndex);\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager?.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this.selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex.set(Math.max(this.selectedIndex - 1, 0));\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this.selectedIndex)) {\n            this._selectedIndex.set(0);\n        }\n        // For linear step and selected index is greater than zero,\n        // set all the previous steps to interacted so that we can navigate to previous steps.\n        if (this.linear && this.selectedIndex > 0) {\n            const visitedSteps = this.steps.toArray().slice(0, this._selectedIndex());\n            for (const step of visitedSteps) {\n                step._markAsInteracted();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex() + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex() - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `${this._groupId}-label-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `${this._groupId}-content-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex();\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex();\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        const selectedIndex = this._selectedIndex();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        if (this._keyManager) {\n            this._containsFocus()\n                ? this._keyManager.setActiveItem(newIndex)\n                : this._keyManager.updateActiveItem(newIndex);\n        }\n        this._selectedIndex.set(newIndex);\n        this.selectedIndexChange.emit(newIndex);\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager?.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager?.setFocusOrigin('keyboard').onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this.linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride();\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepper, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkStepper, isStandalone: true, selector: \"[cdkStepper]\", inputs: { linear: [\"linear\", \"linear\", booleanAttribute], selectedIndex: [\"selectedIndex\", \"selectedIndex\", numberAttribute], selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\", selectedIndexChange: \"selectedIndexChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                }]\n        }], ctorParameters: () => [], propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectedIndex: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], selectedIndexChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    _stepper = inject(CdkStepper);\n    /** Type of the next button. Defaults to \"submit\" if not specified. */\n    type = 'submit';\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperNext, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkStepperNext, isStandalone: true, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    _stepper = inject(CdkStepper);\n    /** Type of the previous button. Defaults to \"button\" if not specified. */\n    type = 'button';\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperPrevious, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkStepperPrevious, isStandalone: true, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { type: [{\n                type: Input\n            }] } });\n\nclass CdkStepperModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule,\n            CdkStep,\n            CdkStepper,\n            CdkStepHeader,\n            CdkStepLabel,\n            CdkStepperNext,\n            CdkStepperPrevious], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperModule, imports: [BidiModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        BidiModule,\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                }]\n        }] });\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n","import { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, inject, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, TemplateRef, ViewContainerRef, ContentChild, NgZone, Renderer2, signal, QueryList, EventEmitter, ElementRef, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport { NgTemplateOutlet } from '@angular/common';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport { MatIcon, MatIconModule } from './icon.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { M as MatRipple } from './ripple-BYgV4oZC.mjs';\nimport { Platform } from '@angular/cdk/platform';\nimport { switchMap, map, startWith, takeUntil } from 'rxjs/operators';\nimport { E as ErrorStateMatcher } from './error-options-DCNQlTOA.mjs';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatRippleModule } from './index-BFRo2fUq.mjs';\nimport './icon-registry-CwOTJ7YM.mjs';\nimport '@angular/common/http';\nimport '@angular/platform-browser';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/bidi';\n\nclass MatStepLabel extends CdkStepLabel {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepLabel, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStepLabel, isStandalone: true, selector: \"[matStepLabel]\", usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matStepLabel]',\n                }]\n        }] });\n\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    changes = new Subject();\n    /** Label that is rendered below optional steps. */\n    optionalLabel = 'Optional';\n    /** Label that is used to indicate step as completed to screen readers. */\n    completedLabel = 'Completed';\n    /** Label that is used to indicate step as editable to screen readers. */\n    editableLabel = 'Editable';\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperIntl, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY,\n};\n\nclass MatStepHeader extends CdkStepHeader {\n    _intl = inject(MatStepperIntl);\n    _focusMonitor = inject(FocusMonitor);\n    _intlSubscription;\n    /** State of the given step. */\n    state;\n    /** Label of the given step. */\n    label;\n    /** Error message to display when there's an error. */\n    errorMessage;\n    /** Overrides for the header icons, passed in via the stepper. */\n    iconOverrides;\n    /** Index of the given step. */\n    index;\n    /** Whether the given step is selected. */\n    selected;\n    /** Whether the given step label is active. */\n    active;\n    /** Whether the given step is optional. */\n    optional;\n    /** Whether the ripple should be disabled. */\n    disableRipple;\n    /**\n     * Theme color of the step header. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/stepper/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    constructor() {\n        super();\n        const styleLoader = inject(_CdkPrivateStyleLoader);\n        styleLoader.load(_StructuralStylesLoader);\n        styleLoader.load(_VisuallyHiddenLoader);\n        const changeDetectorRef = inject(ChangeDetectorRef);\n        this._intlSubscription = this._intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepHeader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatStepHeader, isStandalone: true, selector: \"mat-step-header\", inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\", color: \"color\" }, host: { attributes: { \"role\": \"tab\" }, properties: { \"class\": \"\\\"mat-\\\" + (color || \\\"primary\\\")\" }, classAttribute: \"mat-step-header\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"{index, active, optional}\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-hover-state-layer-shape, var(--mat-sys-corner-medium))}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-focus-state-layer-shape, var(--mat-sys-corner-medium))}@media(hover: none){.mat-step-header:hover{background:none}}@media(forced-colors: active){.mat-step-header{outline:solid 1px}.mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-header[aria-disabled=true]{outline-color:GrayText}.mat-step-header[aria-disabled=true] .mat-step-label,.mat-step-header[aria-disabled=true] .mat-step-icon,.mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color, var(--mat-sys-surface));background-color:var(--mat-stepper-header-icon-background-color, var(--mat-sys-on-surface-variant))}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color, transparent);color:var(--mat-stepper-header-error-state-icon-foreground-color, var(--mat-sys-error))}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-stepper-header-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-label-text-weight, var(--mat-sys-title-small-weight));color:var(--mat-stepper-header-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color, var(--mat-sys-error));font-size:var(--mat-stepper-header-error-state-label-text-size, var(--mat-sys-title-small-size))}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-selected-state-label-text-weight, var(--mat-sys-title-small-weight))}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-selected-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-done-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-edit-state-icon-foreground-color, var(--mat-sys-on-primary))}\\n\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step-header', host: {\n                        'class': 'mat-step-header',\n                        '[class]': '\"mat-\" + (color || \"primary\")',\n                        'role': 'tab',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatRipple, NgTemplateOutlet, MatIcon], template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\">\\n    @if (iconOverrides && iconOverrides[state]) {\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n        [ngTemplateOutletContext]=\\\"{index, active, optional}\\\"></ng-container>\\n    } @else {\\n      @switch (state) {\\n        @case ('number') {\\n          <span aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</span>\\n        }\\n\\n        @default {\\n          @if (state === 'done') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.completedLabel}}</span>\\n          } @else if (state === 'edit') {\\n            <span class=\\\"cdk-visually-hidden\\\">{{_intl.editableLabel}}</span>\\n          }\\n\\n          <mat-icon aria-hidden=\\\"true\\\">{{_getDefaultTextForState(state)}}</mat-icon>\\n        }\\n      }\\n    }\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  @if (_templateLabel(); as templateLabel) {\\n    <!-- If there is a label template, use it. -->\\n    <div class=\\\"mat-step-text-label\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"templateLabel.template\\\"></ng-container>\\n    </div>\\n  } @else if (_stringLabel()) {\\n    <!-- If there is no label template, fall back to the text label. -->\\n    <div class=\\\"mat-step-text-label\\\">{{label}}</div>\\n  }\\n\\n  @if (optional && state != 'error') {\\n    <div class=\\\"mat-step-optional\\\">{{_intl.optionalLabel}}</div>\\n  }\\n\\n  @if (state === 'error') {\\n    <div class=\\\"mat-step-sub-label-error\\\">{{errorMessage}}</div>\\n  }\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-step-header:focus .mat-focus-indicator::before{content:\\\"\\\"}.mat-step-header:hover[aria-disabled=true]{cursor:default}.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:var(--mat-stepper-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-hover-state-layer-shape, var(--mat-sys-corner-medium))}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused{background-color:var(--mat-stepper-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent));border-radius:var(--mat-stepper-header-focus-state-layer-shape, var(--mat-sys-corner-medium))}@media(hover: none){.mat-step-header:hover{background:none}}@media(forced-colors: active){.mat-step-header{outline:solid 1px}.mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-header[aria-disabled=true]{outline-color:GrayText}.mat-step-header[aria-disabled=true] .mat-step-label,.mat-step-header[aria-disabled=true] .mat-step-icon,.mat-step-header[aria-disabled=true] .mat-step-optional{color:GrayText}}.mat-step-optional{font-size:12px;color:var(--mat-stepper-header-optional-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-sub-label-error{font-size:12px;font-weight:normal}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative;color:var(--mat-stepper-header-icon-foreground-color, var(--mat-sys-surface));background-color:var(--mat-stepper-header-icon-background-color, var(--mat-sys-on-surface-variant))}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error{background-color:var(--mat-stepper-header-error-state-icon-background-color, transparent);color:var(--mat-stepper-header-error-state-icon-foreground-color, var(--mat-sys-error))}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle;font-family:var(--mat-stepper-header-label-text-font, var(--mat-sys-title-small-font));font-size:var(--mat-stepper-header-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-label-text-weight, var(--mat-sys-title-small-weight));color:var(--mat-stepper-header-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-active{color:var(--mat-stepper-header-selected-state-label-text-color, var(--mat-sys-on-surface-variant))}.mat-step-label.mat-step-label-error{color:var(--mat-stepper-header-error-state-label-text-color, var(--mat-sys-error));font-size:var(--mat-stepper-header-error-state-label-text-size, var(--mat-sys-title-small-size))}.mat-step-label.mat-step-label-selected{font-size:var(--mat-stepper-header-selected-state-label-text-size, var(--mat-sys-title-small-size));font-weight:var(--mat-stepper-header-selected-state-label-text-weight, var(--mat-sys-title-small-weight))}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-step-icon-selected{background-color:var(--mat-stepper-header-selected-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-selected-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-done{background-color:var(--mat-stepper-header-done-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-done-state-icon-foreground-color, var(--mat-sys-on-primary))}.mat-step-icon-state-edit{background-color:var(--mat-stepper-header-edit-state-icon-background-color, var(--mat-sys-primary));color:var(--mat-stepper-header-edit-state-icon-foreground-color, var(--mat-sys-on-primary))}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { state: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], iconOverrides: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }] } });\n\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    templateRef = inject(TemplateRef);\n    /** Name of the icon to be overridden. */\n    name;\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperIcon, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStepperIcon, isStandalone: true, selector: \"ng-template[matStepperIcon]\", inputs: { name: [\"matStepperIcon\", \"name\"] }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepperIcon]',\n                }]\n        }], ctorParameters: () => [], propDecorators: { name: [{\n                type: Input,\n                args: ['matStepperIcon']\n            }] } });\n\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    _template = inject(TemplateRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStepContent, isStandalone: true, selector: \"ng-template[matStepContent]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepContent]',\n                }]\n        }], ctorParameters: () => [] });\n\nclass MatStep extends CdkStep {\n    _errorStateMatcher = inject(ErrorStateMatcher, { skipSelf: true });\n    _viewContainerRef = inject(ViewContainerRef);\n    _isSelected = Subscription.EMPTY;\n    /** Content for step label given by `<ng-template matStepLabel>`. */\n    // We need an initializer here to avoid a TS error.\n    stepLabel = undefined;\n    /**\n     * Theme color for the particular step. This API is supported in M2 themes\n     * only, it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/stepper/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Content that will be rendered lazily. */\n    _lazyContent;\n    /** Currently-attached portal containing the lazy content. */\n    _portal;\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes\n            .pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        }))\n            .subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStep, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStep, isStandalone: true, selector: \"mat-step\", inputs: { color: \"color\" }, host: { attributes: { \"hidden\": \"\" } }, providers: [\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ], queries: [{ propertyName: \"stepLabel\", first: true, predicate: MatStepLabel, descendants: true }, { propertyName: \"_lazyContent\", first: true, predicate: MatStepContent, descendants: true }], exportAs: [\"matStep\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStep, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step', providers: [\n                        { provide: ErrorStateMatcher, useExisting: MatStep },\n                        { provide: CdkStep, useExisting: MatStep },\n                    ], encapsulation: ViewEncapsulation.None, exportAs: 'matStep', changeDetection: ChangeDetectionStrategy.OnPush, imports: [CdkPortalOutlet], host: {\n                        'hidden': '', // Hide the steps so they don't affect the layout.\n                    }, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\" }]\n        }], propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [MatStepLabel]\n            }], color: [{\n                type: Input\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatStepContent, { static: false }]\n            }] } });\nclass MatStepper extends CdkStepper {\n    _ngZone = inject(NgZone);\n    _renderer = inject(Renderer2);\n    _animationsDisabled = _animationsDisabled();\n    _cleanupTransition;\n    _isAnimating = signal(false);\n    /** The list of step headers of the steps in the stepper. */\n    _stepHeader = undefined;\n    /** Elements hosting the step animations. */\n    _animatedContainers;\n    /** Full list of steps inside the stepper, including inside nested steppers. */\n    _steps = undefined;\n    /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n    steps = new QueryList();\n    /** Custom icon overrides passed in by the consumer. */\n    _icons;\n    /** Event emitted when the current step is done transitioning in. */\n    animationDone = new EventEmitter();\n    /** Whether ripples should be disabled for the step headers. */\n    disableRipple;\n    /**\n     * Theme color for all of the steps in stepper. This API is supported in M2\n     * themes only, it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/stepper/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /**\n     * Whether the label should display in bottom or end position.\n     * Only applies in the `horizontal` orientation.\n     */\n    labelPosition = 'end';\n    /**\n     * Position of the stepper's header.\n     * Only applies in the `horizontal` orientation.\n     */\n    headerPosition = 'top';\n    /** Consumer-specified template-refs to be used to override the header icons. */\n    _iconOverrides = {};\n    /** Duration for the animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    _animationDuration = '';\n    /** Whether the stepper is rendering on the server. */\n    _isServer = !inject(Platform).isBrowser;\n    constructor() {\n        super();\n        const elementRef = inject(ElementRef);\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\n        // Transition events won't fire if animations are disabled so we simulate them.\n        this.selectedIndexChange.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            const duration = this._getAnimationDuration();\n            if (duration === '0ms' || duration === '0s') {\n                this._onAnimationDone();\n            }\n            else {\n                this._isAnimating.set(true);\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._animationsDisabled) {\n                setTimeout(() => {\n                    // Delay enabling the animations so we don't animate the initial state.\n                    this._elementRef.nativeElement.classList.add('mat-stepper-animations-enabled');\n                    // Bind this outside the zone since it fires for all transitions inside the stepper.\n                    this._cleanupTransition = this._renderer.listen(this._elementRef.nativeElement, 'transitionend', this._handleTransitionend);\n                }, 200);\n            }\n        });\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        // Prior to #30314 the stepper had animation `done` events bound to each animated container.\n        // The animations module was firing them on initialization and for each subsequent animation.\n        // Since the events were bound in the template, it had the unintended side-effect of triggering\n        // change detection as well. It appears that this side-effect ended up being load-bearing,\n        // because it was ensuring that the content elements (e.g. `matStepLabel`) that are defined\n        // in sub-components actually get picked up in a timely fashion. This subscription simulates\n        // the same change detection by using `queueMicrotask` similarly to the animations module.\n        if (typeof queueMicrotask === 'function') {\n            let hasEmittedInitial = false;\n            this._animatedContainers.changes\n                .pipe(startWith(null), takeUntil(this._destroyed))\n                .subscribe(() => queueMicrotask(() => {\n                // Simulate the initial `animationDone` event\n                // that gets emitted by the animations module.\n                if (!hasEmittedInitial) {\n                    hasEmittedInitial = true;\n                    this.animationDone.emit();\n                }\n                this._stateChanged();\n            }));\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._cleanupTransition?.();\n    }\n    _getAnimationDuration() {\n        if (this._animationsDisabled) {\n            return '0ms';\n        }\n        if (this.animationDuration) {\n            return this.animationDuration;\n        }\n        return this.orientation === 'horizontal' ? '500ms' : '225ms';\n    }\n    _handleTransitionend = (event) => {\n        const target = event.target;\n        if (!target) {\n            return;\n        }\n        // Because we bind a single `transitionend` handler on the host node and because transition\n        // events bubble, we have to filter down to only the active step so don't emit events too\n        // often. We check the orientation and `property` name first to reduce the amount of times\n        // we need to check the DOM.\n        const isHorizontalActiveElement = this.orientation === 'horizontal' &&\n            event.propertyName === 'transform' &&\n            target.classList.contains('mat-horizontal-stepper-content-current');\n        const isVerticalActiveElement = this.orientation === 'vertical' &&\n            event.propertyName === 'grid-template-rows' &&\n            target.classList.contains('mat-vertical-content-container-active');\n        // Finally we need to ensure that the animated element is a direct descendant,\n        // rather than one coming from a nested stepper.\n        const shouldEmit = (isHorizontalActiveElement || isVerticalActiveElement) &&\n            this._animatedContainers.find(ref => ref.nativeElement === target);\n        if (shouldEmit) {\n            this._onAnimationDone();\n        }\n    };\n    _onAnimationDone() {\n        this._isAnimating.set(false);\n        this.animationDone.emit();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepper, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatStepper, isStandalone: true, selector: \"mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]\", inputs: { disableRipple: \"disableRipple\", color: \"color\", labelPosition: \"labelPosition\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\" }, outputs: { animationDone: \"animationDone\" }, host: { attributes: { \"role\": \"tablist\" }, properties: { \"class.mat-stepper-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.mat-stepper-vertical\": \"orientation === \\\"vertical\\\"\", \"class.mat-stepper-label-position-end\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"end\\\"\", \"class.mat-stepper-label-position-bottom\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"bottom\\\"\", \"class.mat-stepper-header-position-bottom\": \"headerPosition === \\\"bottom\\\"\", \"class.mat-stepper-animating\": \"_isAnimating()\", \"style.--mat-stepper-animation-duration\": \"_getAnimationDuration()\", \"attr.aria-orientation\": \"orientation\" } }, providers: [{ provide: CdkStepper, useExisting: MatStepper }], queries: [{ propertyName: \"_steps\", predicate: MatStep, descendants: true }, { propertyName: \"_icons\", predicate: MatStepperIcon, descendants: true }], viewQueries: [{ propertyName: \"_stepHeader\", predicate: MatStepHeader, descendants: true }, { propertyName: \"_animatedContainers\", predicate: [\"animatedContainer\"], descendants: true }], exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step}\\\"/>\\n          @if (!$last) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step) {\\n          <div\\n            #animatedContainer\\n            class=\\\"mat-horizontal-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\"\\n            [class]=\\\"'mat-horizontal-stepper-content-' + _getAnimationDirection($index)\\\"\\n            [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step}\\\"/>\\n        <div\\n          #animatedContainer\\n          class=\\\"mat-vertical-content-container\\\"\\n          [class.mat-stepper-vertical-line]=\\\"!$last\\\"\\n          [class.mat-vertical-content-container-active]=\\\"selectedIndex === $index\\\"\\n          [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === step.index() ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(step.index())\\\"\\n    [attr.aria-posinset]=\\\"step.index() + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(step.index())\\\"\\n    [attr.aria-selected]=\\\"step.isSelected()\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"step.isNavigable() ? null : true\\\"\\n    [index]=\\\"step.index()\\\"\\n    [state]=\\\"step.indicatorType()\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"step.isSelected()\\\"\\n    [active]=\\\"step.isNavigable()\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !step.isNavigable()\\\"\\n    [color]=\\\"step.color || color\\\"/>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font, var(--mat-sys-body-medium-font));background:var(--mat-stepper-container-color, var(--mat-sys-surface))}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height, 72px)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{visibility:hidden;overflow:hidden;outline:0;height:0}.mat-stepper-animations-enabled .mat-horizontal-stepper-content{transition:transform var(--mat-stepper-animation-duration, 0) cubic-bezier(0.35, 0, 0.25, 1)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-previous{transform:translate3d(-100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-next{transform:translate3d(100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{visibility:visible;transform:none;height:auto}.mat-stepper-horizontal:not(.mat-stepper-animating) .mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{overflow:visible}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}@media(forced-colors: active){.mat-horizontal-content-container{outline:solid 1px}}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{display:grid;grid-template-rows:0fr;grid-template-columns:100%;margin-left:36px;border:0;position:relative}.mat-stepper-animations-enabled .mat-vertical-content-container{transition:grid-template-rows var(--mat-stepper-animation-duration, 0) cubic-bezier(0.4, 0, 0.2, 1)}.mat-vertical-content-container.mat-vertical-content-container-active{grid-template-rows:1fr}.mat-step:last-child .mat-vertical-content-container{border:none}@media(forced-colors: active){.mat-vertical-content-container{outline:solid 1px}}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}@supports not (grid-template-rows: 0fr){.mat-vertical-content-container{height:0}.mat-vertical-content-container.mat-vertical-content-container-active{height:auto}}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color, var(--mat-sys-outline));top:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0;visibility:hidden}.mat-stepper-animations-enabled .mat-vertical-stepper-content{transition:visibility var(--mat-stepper-animation-duration, 0) linear}.mat-vertical-content-container-active>.mat-vertical-stepper-content{visibility:visible}.mat-vertical-content{padding:0 24px 24px 24px}\\n\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: MatStepHeader, selector: \"mat-step-header\", inputs: [\"state\", \"label\", \"errorMessage\", \"iconOverrides\", \"index\", \"selected\", \"active\", \"optional\", \"disableRipple\", \"color\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepper, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]', exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper', host: {\n                        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                        '[class.mat-stepper-header-position-bottom]': 'headerPosition === \"bottom\"',\n                        '[class.mat-stepper-animating]': '_isAnimating()',\n                        '[style.--mat-stepper-animation-duration]': '_getAnimationDuration()',\n                        '[attr.aria-orientation]': 'orientation',\n                        'role': 'tablist',\n                    }, providers: [{ provide: CdkStepper, useExisting: MatStepper }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [NgTemplateOutlet, MatStepHeader], template: \"<!--\\n  We need to project the content somewhere to avoid hydration errors. Some observations:\\n  1. This is only necessary on the server.\\n  2. We get a hydration error if there aren't any nodes after the `ng-content`.\\n  3. We get a hydration error if `ng-content` is wrapped in another element.\\n-->\\n@if (_isServer) {\\n  <ng-content/>\\n}\\n\\n@switch (orientation) {\\n  @case ('horizontal') {\\n    <div class=\\\"mat-horizontal-stepper-wrapper\\\">\\n      <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n        @for (step of steps; track step) {\\n          <ng-container\\n            [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n            [ngTemplateOutletContext]=\\\"{step}\\\"/>\\n          @if (!$last) {\\n            <div class=\\\"mat-stepper-horizontal-line\\\"></div>\\n          }\\n        }\\n      </div>\\n\\n      <div class=\\\"mat-horizontal-content-container\\\">\\n        @for (step of steps; track step) {\\n          <div\\n            #animatedContainer\\n            class=\\\"mat-horizontal-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\"\\n            [class]=\\\"'mat-horizontal-stepper-content-' + _getAnimationDirection($index)\\\"\\n            [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n          </div>\\n        }\\n      </div>\\n    </div>\\n  }\\n\\n  @case ('vertical') {\\n    @for (step of steps; track step) {\\n      <div class=\\\"mat-step\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step}\\\"/>\\n        <div\\n          #animatedContainer\\n          class=\\\"mat-vertical-content-container\\\"\\n          [class.mat-stepper-vertical-line]=\\\"!$last\\\"\\n          [class.mat-vertical-content-container-active]=\\\"selectedIndex === $index\\\"\\n          [attr.inert]=\\\"selectedIndex === $index ? null : ''\\\">\\n          <div class=\\\"mat-vertical-stepper-content\\\"\\n            role=\\\"tabpanel\\\"\\n            [id]=\\\"_getStepContentId($index)\\\"\\n            [attr.aria-labelledby]=\\\"_getStepLabelId($index)\\\">\\n            <div class=\\\"mat-vertical-content\\\">\\n              <ng-container [ngTemplateOutlet]=\\\"step.content\\\"/>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    }\\n  }\\n}\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === step.index() ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(step.index())\\\"\\n    [attr.aria-posinset]=\\\"step.index() + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(step.index())\\\"\\n    [attr.aria-selected]=\\\"step.isSelected()\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"step.isNavigable() ? null : true\\\"\\n    [index]=\\\"step.index()\\\"\\n    [state]=\\\"step.indicatorType()\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"step.isSelected()\\\"\\n    [active]=\\\"step.isNavigable()\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !step.isNavigable()\\\"\\n    [color]=\\\"step.color || color\\\"/>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block;font-family:var(--mat-stepper-container-text-font, var(--mat-sys-body-medium-font));background:var(--mat-stepper-container-color, var(--mat-sys-surface))}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-header-position-bottom .mat-horizontal-stepper-header-container{order:1}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px;border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;overflow:hidden;align-items:center;padding:0 24px;height:var(--mat-stepper-header-height, 72px)}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after{border-top-color:var(--mat-stepper-line-color, var(--mat-sys-outline))}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after{top:calc(calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) + 12px)}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px;padding:calc((var(--mat-stepper-header-height, 72px) - 24px) / 2) 24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-wrapper{display:flex;flex-direction:column}.mat-horizontal-stepper-content{visibility:hidden;overflow:hidden;outline:0;height:0}.mat-stepper-animations-enabled .mat-horizontal-stepper-content{transition:transform var(--mat-stepper-animation-duration, 0) cubic-bezier(0.35, 0, 0.25, 1)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-previous{transform:translate3d(-100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-next{transform:translate3d(100%, 0, 0)}.mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{visibility:visible;transform:none;height:auto}.mat-stepper-horizontal:not(.mat-stepper-animating) .mat-horizontal-stepper-content.mat-horizontal-stepper-content-current{overflow:visible}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}@media(forced-colors: active){.mat-horizontal-content-container{outline:solid 1px}}.mat-stepper-header-position-bottom .mat-horizontal-content-container{padding:24px 24px 0 24px}.mat-vertical-content-container{display:grid;grid-template-rows:0fr;grid-template-columns:100%;margin-left:36px;border:0;position:relative}.mat-stepper-animations-enabled .mat-vertical-content-container{transition:grid-template-rows var(--mat-stepper-animation-duration, 0) cubic-bezier(0.4, 0, 0.2, 1)}.mat-vertical-content-container.mat-vertical-content-container-active{grid-template-rows:1fr}.mat-step:last-child .mat-vertical-content-container{border:none}@media(forced-colors: active){.mat-vertical-content-container{outline:solid 1px}}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}@supports not (grid-template-rows: 0fr){.mat-vertical-content-container{height:0}.mat-vertical-content-container.mat-vertical-content-container-active{height:auto}}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid;border-left-color:var(--mat-stepper-line-color, var(--mat-sys-outline));top:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2));bottom:calc(8px - calc((var(--mat-stepper-header-height, 72px) - 24px) / 2))}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0;visibility:hidden}.mat-stepper-animations-enabled .mat-vertical-stepper-content{transition:visibility var(--mat-stepper-animation-duration, 0) linear}.mat-vertical-content-container-active>.mat-vertical-stepper-content{visibility:visible}.mat-vertical-content{padding:0 24px 24px 24px}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _stepHeader: [{\n                type: ViewChildren,\n                args: [MatStepHeader]\n            }], _animatedContainers: [{\n                type: ViewChildren,\n                args: ['animatedContainer']\n            }], _steps: [{\n                type: ContentChildren,\n                args: [MatStep, { descendants: true }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatStepperIcon, { descendants: true }]\n            }], animationDone: [{\n                type: Output\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }] } });\n\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperNext, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStepperNext, isStandalone: true, selector: \"button[matStepperNext]\", host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-next\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperNext]',\n                    host: {\n                        'class': 'mat-stepper-next',\n                        '[type]': 'type',\n                    },\n                }]\n        }] });\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperPrevious, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatStepperPrevious, isStandalone: true, selector: \"button[matStepperPrevious]\", host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-previous\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperPrevious]',\n                    host: {\n                        'class': 'mat-stepper-previous',\n                        '[type]': 'type',\n                    },\n                }]\n        }] });\n\nclass MatStepperModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperModule, imports: [MatCommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n            MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent], exports: [MatCommonModule,\n            MatStep,\n            MatStepLabel,\n            MatStepper,\n            MatStepperNext,\n            MatStepperPrevious,\n            MatStepHeader,\n            MatStepperIcon,\n            MatStepContent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperModule, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [MatCommonModule,\n            PortalModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n            MatStepper,\n            MatStepHeader, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        PortalModule,\n                        CdkStepperModule,\n                        MatIconModule,\n                        MatRippleModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    exports: [\n                        MatCommonModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * Animations used by the Material steppers.\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst matStepperAnimations = {\n    // Represents:\n    // trigger('horizontalStepTransition', [\n    //   state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    //   // Transition to `inherit`, rather than `visible`,\n    //   // because visibility on a child element the one from the parent,\n    //   // making this element focusable inside of a `hidden` element.\n    //   state('current', style({transform: 'none', visibility: 'inherit'})),\n    //   state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    //   transition(\n    //     '* => *',\n    //     group([\n    //       animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n    //       query('@*', animateChild(), {optional: true}),\n    //     ]),\n    //     {\n    //       params: {animationDuration: '500ms'},\n    //     },\n    //   ),\n    // ])\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: {\n        type: 7,\n        name: 'horizontalStepTransition',\n        definitions: [\n            {\n                type: 0,\n                name: 'previous',\n                styles: {\n                    type: 6,\n                    styles: { transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' },\n                    offset: null,\n                },\n            },\n            {\n                type: 0,\n                name: 'current',\n                styles: {\n                    type: 6,\n                    styles: { transform: 'none', visibility: 'inherit' },\n                    offset: null,\n                },\n            },\n            {\n                type: 0,\n                name: 'next',\n                styles: {\n                    type: 6,\n                    styles: { transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' },\n                    offset: null,\n                },\n            },\n            {\n                type: 1,\n                expr: '* => *',\n                animation: {\n                    type: 3,\n                    steps: [\n                        {\n                            type: 4,\n                            styles: null,\n                            timings: '{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)',\n                        },\n                        {\n                            type: 11,\n                            selector: '@*',\n                            animation: { type: 9, options: null },\n                            options: { optional: true },\n                        },\n                    ],\n                    options: null,\n                },\n                options: { params: { animationDuration: '500ms' } },\n            },\n        ],\n        options: {},\n    },\n    // Represents:\n    // trigger('verticalStepTransition', [\n    //   state('previous', style({height: '0px', visibility: 'hidden'})),\n    //   state('next', style({height: '0px', visibility: 'hidden'})),\n    //   // Transition to `inherit`, rather than `visible`,\n    //   // because visibility on a child element the one from the parent,\n    //   // making this element focusable inside of a `hidden` element.\n    //   state('current', style({height: '*', visibility: 'inherit'})),\n    //   transition(\n    //     '* <=> current',\n    //     group([\n    //       animate('{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)'),\n    //       query('@*', animateChild(), {optional: true}),\n    //     ]),\n    //     {\n    //       params: {animationDuration: '225ms'},\n    //     },\n    //   ),\n    // ])\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: {\n        type: 7,\n        name: 'verticalStepTransition',\n        definitions: [\n            {\n                type: 0,\n                name: 'previous',\n                styles: { type: 6, styles: { 'height': '0px', visibility: 'hidden' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'next',\n                styles: { type: 6, styles: { 'height': '0px', visibility: 'hidden' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'current',\n                styles: { type: 6, styles: { 'height': '*', visibility: 'inherit' }, offset: null },\n            },\n            {\n                type: 1,\n                expr: '* <=> current',\n                animation: {\n                    type: 3,\n                    steps: [\n                        {\n                            type: 4,\n                            styles: null,\n                            timings: '{{animationDuration}} cubic-bezier(0.4, 0.0, 0.2, 1)',\n                        },\n                        {\n                            type: 11,\n                            selector: '@*',\n                            animation: { type: 9, options: null },\n                            options: { optional: true },\n                        },\n                    ],\n                    options: null,\n                },\n                options: { params: { animationDuration: '225ms' } },\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, matStepperAnimations };\n\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nclass _MatInternalFormField {\n    /** Position of the label relative to the content. */\n    labelPosition;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatInternalFormField, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: _MatInternalFormField, isStandalone: true, selector: \"div[mat-internal-form-field]\", inputs: { labelPosition: \"labelPosition\" }, host: { properties: { \"class.mdc-form-field--align-end\": \"labelPosition === \\\"before\\\"\" }, classAttribute: \"mdc-form-field mat-internal-form-field\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: _MatInternalFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'div[mat-internal-form-field]', template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mdc-form-field mat-internal-form-field',\n                        '[class.mdc-form-field--align-end]': 'labelPosition === \"before\"',\n                    }, styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"] }]\n        }], propDecorators: { labelPosition: [{\n                type: Input,\n                args: [{ required: true }]\n            }] } });\n\nexport { _MatInternalFormField as _ };\n\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, ChangeDetectorRef, NgZone, EventEmitter, HostAttributeToken, signal, booleanAttribute, numberAttribute, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _MatInternalFormField } from './internal-form-field-D5iFxU6d.mjs';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { M as MatRipple } from './ripple-BYgV4oZC.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n        disabledInteractive: false,\n    };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState;\n(function (TransitionCheckState) {\n    /** The initial state of the component before any user interaction. */\n    TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n    /** The state representing the component when it's becoming checked. */\n    TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n    /** The state representing the component when it's becoming unchecked. */\n    TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n    /** The state representing the component when it's becoming indeterminate. */\n    TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(TransitionCheckState || (TransitionCheckState = {}));\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n    /** The source checkbox of the event. */\n    source;\n    /** The new `checked` value of the checkbox. */\n    checked;\n}\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _ngZone = inject(NgZone);\n    _animationsDisabled = _animationsDisabled();\n    _options = inject(MAT_CHECKBOX_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    /** Focuses the checkbox. */\n    focus() {\n        this._inputElement.nativeElement.focus();\n    }\n    /** Creates the change event that will be emitted by the checkbox. */\n    _createChangeEvent(isChecked) {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = isChecked;\n        return event;\n    }\n    /** Gets the element on which to add the animation CSS classes. */\n    _getAnimationTargetElement() {\n        return this._inputElement?.nativeElement;\n    }\n    /** CSS classes to add when transitioning between the different checkbox states. */\n    _animationClasses = {\n        uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n        uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n        checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n        checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n        indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n        indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked',\n    };\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     */\n    ariaLabel = '';\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    ariaLabelledby = null;\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    ariaDescribedby;\n    /**\n     * Users can specify the `aria-expanded` attribute which will be forwarded to the input element\n     */\n    ariaExpanded;\n    /**\n     * Users can specify the `aria-controls` attribute which will be forwarded to the input element\n     */\n    ariaControls;\n    /** Users can specify the `aria-owns` attribute which will be forwarded to the input element */\n    ariaOwns;\n    _uniqueId;\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    id;\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    /** Whether the checkbox is required. */\n    required;\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    labelPosition = 'after';\n    /** Name value will be applied to the input element if present */\n    name = null;\n    /** Event emitted when the checkbox's `checked` value changes. */\n    change = new EventEmitter();\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    indeterminateChange = new EventEmitter();\n    /** The value attribute of the native input element */\n    value;\n    /** Whether the checkbox has a ripple. */\n    disableRipple;\n    /** The native `<input type=\"checkbox\">` element */\n    _inputElement;\n    /** The native `<label>` element */\n    _labelElement;\n    /** Tabindex for the checkbox. */\n    tabIndex;\n    // TODO(crisbeto): this should be a ThemePalette, but some internal apps were abusing\n    // the lack of type checking previously and assigning random strings.\n    /**\n     * Theme color of the checkbox. This API is supported in M2 themes only, it\n     * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/checkbox/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Whether the checkbox should remain interactive when it is disabled. */\n    disabledInteractive;\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched = () => { };\n    _currentAnimationClass = '';\n    _currentCheckState = TransitionCheckState.Init;\n    _controlValueAccessorChangeFn = () => { };\n    _validatorChangeFn = () => { };\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        const tabIndex = inject(new HostAttributeToken('tabindex'), { optional: true });\n        this._options = this._options || defaults;\n        this.color = this._options.color || defaults.color;\n        this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n        this.id = this._uniqueId = inject(_IdGenerator).getId('mat-mdc-checkbox-');\n        this.disabledInteractive = this._options?.disabledInteractive ?? false;\n    }\n    ngOnChanges(changes) {\n        if (changes['required']) {\n            this._validatorChangeFn();\n        }\n    }\n    ngAfterViewInit() {\n        this._syncIndeterminate(this.indeterminate);\n    }\n    /** Whether the checkbox is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _checked = false;\n    /** Whether the checkbox is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value !== this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _disabled = false;\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n        return this._indeterminate();\n    }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate();\n        this._indeterminate.set(value);\n        if (changed) {\n            if (value) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            }\n            else {\n                this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(value);\n        }\n        this._syncIndeterminate(value);\n    }\n    _indeterminate = signal(false);\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    // Implemented as a part of Validator.\n    validate(control) {\n        return this.required && control.value !== true ? { 'required': true } : null;\n    }\n    // Implemented as a part of Validator.\n    registerOnValidatorChange(fn) {\n        this._validatorChangeFn = fn;\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._getAnimationTargetElement();\n        if (oldState === newState || !element) {\n            return;\n        }\n        if (this._currentAnimationClass) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n    }\n    _handleInputClick() {\n        const clickAction = this._options?.clickAction;\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate.set(false);\n                    this.indeterminateChange.emit(false);\n                });\n            }\n            this._checked = !this._checked;\n            this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if ((this.disabled && this.disabledInteractive) ||\n            (!this.disabled && clickAction === 'noop')) {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _onBlur() {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationsDisabled) {\n            return '';\n        }\n        switch (oldState) {\n            case TransitionCheckState.Init:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === TransitionCheckState.Checked) {\n                    return this._animationClasses.uncheckedToChecked;\n                }\n                else if (newState == TransitionCheckState.Indeterminate) {\n                    return this._checked\n                        ? this._animationClasses.checkedToIndeterminate\n                        : this._animationClasses.uncheckedToIndeterminate;\n                }\n                break;\n            case TransitionCheckState.Unchecked:\n                return newState === TransitionCheckState.Checked\n                    ? this._animationClasses.uncheckedToChecked\n                    : this._animationClasses.uncheckedToIndeterminate;\n            case TransitionCheckState.Checked:\n                return newState === TransitionCheckState.Unchecked\n                    ? this._animationClasses.checkedToUnchecked\n                    : this._animationClasses.checkedToIndeterminate;\n            case TransitionCheckState.Indeterminate:\n                return newState === TransitionCheckState.Checked\n                    ? this._animationClasses.indeterminateToChecked\n                    : this._animationClasses.indeterminateToUnchecked;\n        }\n        return '';\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n    _onInputClick() {\n        this._handleInputClick();\n    }\n    _onTouchTargetClick() {\n        this._handleInputClick();\n        if (!this.disabled) {\n            // Normally the input should be focused already, but if the click\n            // comes from the touch target, then we might have to focus it ourselves.\n            this._inputElement.nativeElement.focus();\n        }\n    }\n    /**\n     *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n     *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n     *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n     *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n     *  bubbles when the label is clicked.\n     */\n    _preventBubblingFromLabel(event) {\n        if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n            event.stopPropagation();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCheckbox, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatCheckbox, isStandalone: true, selector: \"mat-checkbox\", inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], ariaExpanded: [\"aria-expanded\", \"ariaExpanded\", booleanAttribute], ariaControls: [\"aria-controls\", \"ariaControls\"], ariaOwns: [\"aria-owns\", \"ariaOwns\"], id: \"id\", required: [\"required\", \"required\", booleanAttribute], labelPosition: \"labelPosition\", name: \"name\", value: \"value\", disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? undefined : numberAttribute(value))], color: \"color\", disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute], checked: [\"checked\", \"checked\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute], indeterminate: [\"indeterminate\", \"indeterminate\", booleanAttribute] }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, host: { properties: { \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"class.mdc-checkbox--disabled\": \"disabled\", \"id\": \"id\", \"class.mat-mdc-checkbox-disabled\": \"disabled\", \"class.mat-mdc-checkbox-checked\": \"checked\", \"class.mat-mdc-checkbox-disabled-interactive\": \"disabledInteractive\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"mat-accent\\\"\" }, classAttribute: \"mat-mdc-checkbox\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => MatCheckbox),\n                multi: true,\n            },\n            {\n                provide: NG_VALIDATORS,\n                useExisting: MatCheckbox,\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"_labelElement\", first: true, predicate: [\"label\"], descendants: true }], exportAs: [\"matCheckbox\"], usesOnChanges: true, ngImport: i0, template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-controls]=\\\"ariaControls\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n           [attr.aria-owns]=\\\"ariaOwns\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mat-checkbox-state-layer-size, 40px);height:var(--mat-checkbox-state-layer-size, 40px);top:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);right:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mat-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\\n\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: _MatInternalFormField, selector: \"div[mat-internal-form-field]\", inputs: [\"labelPosition\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', host: {\n                        'class': 'mat-mdc-checkbox',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[class.mdc-checkbox--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Add classes that users can use to more easily target disabled or checked checkboxes.\n                        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n                        '[class.mat-mdc-checkbox-checked]': 'checked',\n                        '[class.mat-mdc-checkbox-disabled-interactive]': 'disabledInteractive',\n                        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"',\n                    }, providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => MatCheckbox),\n                            multi: true,\n                        },\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: MatCheckbox,\n                            multi: true,\n                        },\n                    ], exportAs: 'matCheckbox', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatRipple, _MatInternalFormField], template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-controls]=\\\"ariaControls\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n           [attr.aria-owns]=\\\"ariaOwns\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mat-checkbox-state-layer-size, 40px);height:var(--mat-checkbox-state-layer-size, 40px);top:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);right:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mat-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:48px;width:48px;transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], ariaExpanded: [{\n                type: Input,\n                args: [{ alias: 'aria-expanded', transform: booleanAttribute }]\n            }], ariaControls: [{\n                type: Input,\n                args: ['aria-controls']\n            }], ariaOwns: [{\n                type: Input,\n                args: ['aria-owns']\n            }], id: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], labelPosition: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], indeterminateChange: [{\n                type: Output\n            }], value: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], _labelElement: [{\n                type: ViewChild,\n                args: ['label']\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? undefined : numberAttribute(value)) }]\n            }], color: [{\n                type: Input\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], indeterminate: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nclass MatCheckboxModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCheckboxModule, imports: [MatCheckbox, MatCommonModule], exports: [MatCheckbox, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCheckboxModule, imports: [MatCheckbox, MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCheckbox, MatCommonModule],\n                    exports: [MatCheckbox, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MatCheckbox, MatCheckboxChange, MatCheckboxModule, TransitionCheckState };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, booleanAttribute, Directive, Input, ChangeDetectorRef, EventEmitter, signal, Output, NgModule } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { _ as _IdGenerator } from './id-generator-LuoRZSid.mjs';\nimport { U as UniqueSelectionDispatcher } from './unique-selection-dispatcher-Cewa_Eg3.mjs';\n\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    /** Emits when the state of the accordion changes */\n    _stateChanges = new Subject();\n    /** Stream that emits true/false when openAll/closeAll is triggered. */\n    _openCloseAllActions = new Subject();\n    /** A readonly id value to use for unique selection coordination. */\n    id = inject(_IdGenerator).getId('cdk-accordion-');\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    multi = false;\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this.multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordion, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkAccordion, isStandalone: true, selector: \"cdk-accordion, [cdkAccordion]\", inputs: { multi: [\"multi\", \"multi\", booleanAttribute] }, providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }], exportAs: [\"cdkAccordion\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion, [cdkAccordion]',\n                    exportAs: 'cdkAccordion',\n                    providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }],\n                }]\n        }], propDecorators: { multi: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/**\n * A basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    accordion = inject(CDK_ACCORDION, { optional: true, skipSelf: true });\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _expansionDispatcher = inject(UniqueSelectionDispatcher);\n    /** Subscription to openAll/closeAll events. */\n    _openCloseAllSubscription = Subscription.EMPTY;\n    /** Event emitted every time the AccordionItem is closed. */\n    closed = new EventEmitter();\n    /** Event emitted every time the AccordionItem is opened. */\n    opened = new EventEmitter();\n    /** Event emitted when the AccordionItem is destroyed. */\n    destroyed = new EventEmitter();\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * @docs-private\n     */\n    expandedChange = new EventEmitter();\n    /** The unique AccordionItem id. */\n    id = inject(_IdGenerator).getId('cdk-accordion-child-');\n    /** Whether the AccordionItem is expanded. */\n    get expanded() {\n        return this._expanded;\n    }\n    set expanded(expanded) {\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    _expanded = false;\n    /** Whether the AccordionItem is disabled. */\n    get disabled() {\n        return this._disabled();\n    }\n    set disabled(value) {\n        this._disabled.set(value);\n    }\n    _disabled = signal(false);\n    /** Unregister function for _expansionDispatcher. */\n    _removeUniqueSelectionListener = () => { };\n    constructor() { }\n    ngOnInit() {\n        this._removeUniqueSelectionListener = this._expansionDispatcher.listen((id, accordionId) => {\n            if (this.accordion &&\n                !this.accordion.multi &&\n                this.accordion.id === accordionId &&\n                this.id !== id) {\n                this.expanded = false;\n            }\n        });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionItem, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkAccordionItem, isStandalone: true, selector: \"cdk-accordion-item, [cdkAccordionItem]\", inputs: { expanded: [\"expanded\", \"expanded\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, providers: [\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: undefined },\n        ], exportAs: [\"cdkAccordionItem\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                    exportAs: 'cdkAccordionItem',\n                    providers: [\n                        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                        // registering to the same accordion.\n                        { provide: CDK_ACCORDION, useValue: undefined },\n                    ],\n                }]\n        }], ctorParameters: () => [], propDecorators: { closed: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }], expanded: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nclass CdkAccordionModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionModule, imports: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkAccordion, CdkAccordionItem],\n                    exports: [CdkAccordion, CdkAccordionItem],\n                }]\n        }] });\n\nexport { CDK_ACCORDION, CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, TemplateRef, Directive, ViewContainerRef, DOCUMENT, NgZone, ElementRef, Renderer2, EventEmitter, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ContentChild, ViewChild, ChangeDetectorRef, HostAttributeToken, numberAttribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport { _IdGenerator, FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/bidi';\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * Token used to provide a `MatExpansionPanel` to `MatExpansionPanelContent`.\n * Used to avoid circular imports between `MatExpansionPanel` and `MatExpansionPanelContent`.\n */\nconst MAT_EXPANSION_PANEL = new InjectionToken('MAT_EXPANSION_PANEL');\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    _template = inject(TemplateRef);\n    _expansionPanel = inject(MAT_EXPANSION_PANEL, { optional: true });\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelContent, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatExpansionPanelContent, isStandalone: true, selector: \"ng-template[matExpansionPanelContent]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matExpansionPanelContent]',\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    _viewContainerRef = inject(ViewContainerRef);\n    _animationsDisabled = _animationsDisabled();\n    _document = inject(DOCUMENT);\n    _ngZone = inject(NgZone);\n    _elementRef = inject(ElementRef);\n    _renderer = inject(Renderer2);\n    _cleanupTransitionEnd;\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = value;\n    }\n    _hideToggle = false;\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    _togglePosition;\n    /** An event emitted after the body's expansion animation happens. */\n    afterExpand = new EventEmitter();\n    /** An event emitted after the body's collapse animation happens. */\n    afterCollapse = new EventEmitter();\n    /** Stream that emits for changes in `@Input` properties. */\n    _inputChanges = new Subject();\n    /** Optionally defined accordion the expansion panel belongs to. */\n    accordion = inject(MAT_ACCORDION, { optional: true, skipSelf: true });\n    /** Content that will be rendered lazily. */\n    _lazyContent;\n    /** Element containing the panel's user-provided content. */\n    _body;\n    /** Element wrapping the panel body. */\n    _bodyWrapper;\n    /** Portal holding the user's content. */\n    _portal;\n    /** ID for the associated header element. Used for a11y labelling. */\n    _headerId = inject(_IdGenerator).getId('mat-expansion-panel-header-');\n    constructor() {\n        super();\n        const defaultOptions = inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, { optional: true });\n        this._expansionDispatcher = inject(UniqueSelectionDispatcher);\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent && this._lazyContent._expansionPanel === this) {\n            // Render the content as soon as the panel becomes open.\n            this.opened\n                .pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1))\n                .subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n        this._setupAnimationEvents();\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._cleanupTransitionEnd?.();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n    _transitionEndListener = ({ target, propertyName }) => {\n        if (target === this._bodyWrapper?.nativeElement && propertyName === 'grid-template-rows') {\n            this._ngZone.run(() => {\n                if (this.expanded) {\n                    this.afterExpand.emit();\n                }\n                else {\n                    this.afterCollapse.emit();\n                }\n            });\n        }\n    };\n    _setupAnimationEvents() {\n        // This method is defined separately, because we need to\n        // disable this logic in some internal components.\n        this._ngZone.runOutsideAngular(() => {\n            if (this._animationsDisabled) {\n                this.opened.subscribe(() => this._ngZone.run(() => this.afterExpand.emit()));\n                this.closed.subscribe(() => this._ngZone.run(() => this.afterCollapse.emit()));\n            }\n            else {\n                setTimeout(() => {\n                    const element = this._elementRef.nativeElement;\n                    this._cleanupTransitionEnd = this._renderer.listen(element, 'transitionend', this._transitionEndListener);\n                    element.classList.add('mat-expansion-panel-animations-enabled');\n                }, 200);\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanel, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatExpansionPanel, isStandalone: true, selector: \"mat-expansion-panel\", inputs: { hideToggle: [\"hideToggle\", \"hideToggle\", booleanAttribute], togglePosition: \"togglePosition\" }, outputs: { afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, host: { properties: { \"class.mat-expanded\": \"expanded\", \"class.mat-expansion-panel-spacing\": \"_hasSpacing()\" }, classAttribute: \"mat-expansion-panel\" }, providers: [\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: undefined },\n            { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n        ], queries: [{ propertyName: \"_lazyContent\", first: true, predicate: MatExpansionPanelContent, descendants: true }], viewQueries: [{ propertyName: \"_body\", first: true, predicate: [\"body\"], descendants: true }, { propertyName: \"_bodyWrapper\", first: true, predicate: [\"bodyWrapper\"], descendants: true }], exportAs: [\"matExpansionPanel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content-wrapper\\\" [attr.inert]=\\\"expanded ? null : ''\\\" #bodyWrapper>\\n  <div class=\\\"mat-expansion-panel-content\\\"\\n       role=\\\"region\\\"\\n       [attr.aria-labelledby]=\\\"_headerId\\\"\\n       [id]=\\\"id\\\"\\n       #body>\\n    <div class=\\\"mat-expansion-panel-body\\\">\\n      <ng-content></ng-content>\\n      <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n    </div>\\n    <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n  </div>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;position:relative;background:var(--mat-expansion-container-background-color, var(--mat-sys-surface));color:var(--mat-expansion-container-text-color, var(--mat-sys-on-surface));border-radius:var(--mat-expansion-container-shape, 12px)}.mat-expansion-panel.mat-expansion-panel-animations-enabled{transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:var(--mat-expansion-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape, 12px);border-top-left-radius:var(--mat-expansion-container-shape, 12px)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape, 12px);border-bottom-left-radius:var(--mat-expansion-container-shape, 12px)}@media(forced-colors: active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel-content-wrapper{display:grid;grid-template-rows:0fr;grid-template-columns:100%}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content-wrapper{transition:grid-template-rows 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{grid-template-rows:1fr}@supports not (grid-template-rows: 0fr){.mat-expansion-panel-content-wrapper{height:0}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{height:auto}}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;min-height:0;visibility:hidden;font-family:var(--mat-expansion-container-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-expansion-container-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-expansion-container-text-weight, var(--mat-sys-body-large-weight));line-height:var(--mat-expansion-container-text-line-height, var(--mat-sys-body-large-line-height));letter-spacing:var(--mat-expansion-container-text-tracking, var(--mat-sys-body-large-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content{transition:visibility 190ms linear}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper>.mat-expansion-panel-content{visibility:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color, var(--mat-sys-outline))}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanel, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                        // to the same accordion.\n                        { provide: MAT_ACCORDION, useValue: undefined },\n                        { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n                    ], host: {\n                        'class': 'mat-expansion-panel',\n                        '[class.mat-expanded]': 'expanded',\n                        '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                    }, imports: [CdkPortalOutlet], template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content-wrapper\\\" [attr.inert]=\\\"expanded ? null : ''\\\" #bodyWrapper>\\n  <div class=\\\"mat-expansion-panel-content\\\"\\n       role=\\\"region\\\"\\n       [attr.aria-labelledby]=\\\"_headerId\\\"\\n       [id]=\\\"id\\\"\\n       #body>\\n    <div class=\\\"mat-expansion-panel-body\\\">\\n      <ng-content></ng-content>\\n      <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n    </div>\\n    <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n  </div>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;position:relative;background:var(--mat-expansion-container-background-color, var(--mat-sys-surface));color:var(--mat-expansion-container-text-color, var(--mat-sys-on-surface));border-radius:var(--mat-expansion-container-shape, 12px)}.mat-expansion-panel.mat-expansion-panel-animations-enabled{transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:var(--mat-expansion-container-elevation-shadow, 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12))}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape, 12px);border-top-left-radius:var(--mat-expansion-container-shape, 12px)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape, 12px);border-bottom-left-radius:var(--mat-expansion-container-shape, 12px)}@media(forced-colors: active){.mat-expansion-panel{outline:solid 1px}}.mat-expansion-panel-content-wrapper{display:grid;grid-template-rows:0fr;grid-template-columns:100%}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content-wrapper{transition:grid-template-rows 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{grid-template-rows:1fr}@supports not (grid-template-rows: 0fr){.mat-expansion-panel-content-wrapper{height:0}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper{height:auto}}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;min-height:0;visibility:hidden;font-family:var(--mat-expansion-container-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-expansion-container-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-expansion-container-text-weight, var(--mat-sys-body-large-weight));line-height:var(--mat-expansion-container-text-line-height, var(--mat-sys-body-large-line-height));letter-spacing:var(--mat-expansion-container-text-tracking, var(--mat-sys-body-large-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-content{transition:visibility 190ms linear}.mat-expansion-panel.mat-expanded>.mat-expansion-panel-content-wrapper>.mat-expansion-panel-content{visibility:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color, var(--mat-sys-outline))}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { hideToggle: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], togglePosition: [{\n                type: Input\n            }], afterExpand: [{\n                type: Output\n            }], afterCollapse: [{\n                type: Output\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatExpansionPanelContent]\n            }], _body: [{\n                type: ViewChild,\n                args: ['body']\n            }], _bodyWrapper: [{\n                type: ViewChild,\n                args: ['bodyWrapper']\n            }] } });\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelActionRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatExpansionPanelActionRow, isStandalone: true, selector: \"mat-action-row\", host: { classAttribute: \"mat-action-row\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelActionRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-action-row',\n                    host: {\n                        class: 'mat-action-row',\n                    },\n                }]\n        }] });\n\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    panel = inject(MatExpansionPanel, { host: true });\n    _element = inject(ElementRef);\n    _focusMonitor = inject(FocusMonitor);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _parentChangeSubscription = Subscription.EMPTY;\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        const panel = this.panel;\n        const defaultOptions = inject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, { optional: true });\n        const tabIndex = inject(new HostAttributeToken('tabindex'), { optional: true });\n        const accordionHideToggleChange = panel.accordion\n            ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition'])))\n            : EMPTY;\n        this.tabIndex = parseInt(tabIndex || '') || 0;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n            return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n        }))).subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => this._focusMonitor.focusVia(this._element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /** Height of the header while the panel is expanded. */\n    expandedHeight;\n    /** Height of the header while the panel is collapsed. */\n    collapsedHeight;\n    /** Tab index of the header. */\n    tabIndex = 0;\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelHeader, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatExpansionPanelHeader, isStandalone: true, selector: \"mat-expansion-panel-header\", inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, host: { attributes: { \"role\": \"button\" }, listeners: { \"click\": \"_toggle()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.id\": \"panel._headerId\", \"attr.tabindex\": \"disabled ? -1 : tabIndex\", \"attr.aria-controls\": \"_getPanelId()\", \"attr.aria-expanded\": \"_isExpanded()\", \"attr.aria-disabled\": \"panel.disabled\", \"class.mat-expanded\": \"_isExpanded()\", \"class.mat-expansion-toggle-indicator-after\": \"_getTogglePosition() === 'after'\", \"class.mat-expansion-toggle-indicator-before\": \"_getTogglePosition() === 'before'\", \"style.height\": \"_getHeaderHeight()\" }, classAttribute: \"mat-expansion-panel-header mat-focus-indicator\" }, ngImport: i0, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;height:var(--mat-expansion-header-collapsed-state-height, 48px);font-family:var(--mat-expansion-header-text-font, var(--mat-sys-title-medium-font));font-size:var(--mat-expansion-header-text-size, var(--mat-sys-title-medium-size));font-weight:var(--mat-expansion-header-text-weight, var(--mat-sys-title-medium-weight));line-height:var(--mat-expansion-header-text-line-height, var(--mat-sys-title-medium-line-height));letter-spacing:var(--mat-expansion-header-text-tracking, var(--mat-sys-title-medium-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-header{transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header::before{border-radius:inherit}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height, 64px)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color, var(--mat-sys-surface))}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color, var(--mat-sys-on-surface))}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color, var(--mat-sys-on-surface-variant))}.mat-expansion-panel-animations-enabled .mat-expansion-indicator{transition:transform 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header.mat-expanded .mat-expansion-indicator{transform:rotate(180deg)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-legacy-header-indicator-display, none)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-header-indicator-display, inline-block)}@media(forced-colors: active){.mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-expansion-panel-header mat-focus-indicator',\n                        'role': 'button',\n                        '[attr.id]': 'panel._headerId',\n                        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n                        '[attr.aria-controls]': '_getPanelId()',\n                        '[attr.aria-expanded]': '_isExpanded()',\n                        '[attr.aria-disabled]': 'panel.disabled',\n                        '[class.mat-expanded]': '_isExpanded()',\n                        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                        '[style.height]': '_getHeaderHeight()',\n                        '(click)': '_toggle()',\n                        '(keydown)': '_keydown($event)',\n                    }, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;height:var(--mat-expansion-header-collapsed-state-height, 48px);font-family:var(--mat-expansion-header-text-font, var(--mat-sys-title-medium-font));font-size:var(--mat-expansion-header-text-size, var(--mat-sys-title-medium-size));font-weight:var(--mat-expansion-header-text-weight, var(--mat-sys-title-medium-weight));line-height:var(--mat-expansion-header-text-line-height, var(--mat-sys-title-medium-line-height));letter-spacing:var(--mat-expansion-header-text-tracking, var(--mat-sys-title-medium-tracking))}.mat-expansion-panel-animations-enabled .mat-expansion-panel-header{transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header::before{border-radius:inherit}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height, 64px)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-hover-state-layer-opacity) * 100%), transparent))}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color, var(--mat-sys-surface))}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color, color-mix(in srgb, var(--mat-sys-on-surface) calc(var(--mat-sys-focus-state-layer-opacity) * 100%), transparent))}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color, var(--mat-sys-on-surface))}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color, var(--mat-sys-on-surface-variant))}.mat-expansion-panel-animations-enabled .mat-expansion-indicator{transition:transform 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header.mat-expanded .mat-expansion-indicator{transform:rotate(180deg)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-legacy-header-indicator-display, none)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color, var(--mat-sys-on-surface-variant));display:var(--mat-expansion-header-indicator-display, inline-block)}@media(forced-colors: active){.mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { expandedHeight: [{\n                type: Input\n            }], collapsedHeight: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }] } });\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelDescription, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatExpansionPanelDescription, isStandalone: true, selector: \"mat-panel-description\", host: { classAttribute: \"mat-expansion-panel-header-description\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelDescription, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-description',\n                    host: {\n                        class: 'mat-expansion-panel-header-description',\n                    },\n                }]\n        }] });\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatExpansionPanelTitle, isStandalone: true, selector: \"mat-panel-title\", host: { classAttribute: \"mat-expansion-panel-header-title\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionPanelTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-title',\n                    host: {\n                        class: 'mat-expansion-panel-header-title',\n                    },\n                }]\n        }] });\n\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    _keyManager;\n    /** Headers belonging to this accordion. */\n    _ownHeaders = new QueryList();\n    /** All headers inside the accordion. Includes headers inside nested accordions. */\n    _headers;\n    /** Whether the expansion indicator should be hidden. */\n    hideToggle = false;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     */\n    displayMode = 'default';\n    /** The position of the expansion indicator. */\n    togglePosition = 'after';\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._keyManager?.destroy();\n        this._ownHeaders.destroy();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatAccordion, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatAccordion, isStandalone: true, selector: \"mat-accordion\", inputs: { hideToggle: [\"hideToggle\", \"hideToggle\", booleanAttribute], displayMode: \"displayMode\", togglePosition: \"togglePosition\" }, host: { properties: { \"class.mat-accordion-multi\": \"this.multi\" }, classAttribute: \"mat-accordion\" }, providers: [\n            {\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion,\n            },\n        ], queries: [{ propertyName: \"_headers\", predicate: MatExpansionPanelHeader, descendants: true }], exportAs: [\"matAccordion\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-accordion',\n                    exportAs: 'matAccordion',\n                    providers: [\n                        {\n                            provide: MAT_ACCORDION,\n                            useExisting: MatAccordion,\n                        },\n                    ],\n                    host: {\n                        class: 'mat-accordion',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if multiple panel support is enabled.\n                        '[class.mat-accordion-multi]': 'this.multi',\n                    },\n                }]\n        }], propDecorators: { _headers: [{\n                type: ContentChildren,\n                args: [MatExpansionPanelHeader, { descendants: true }]\n            }], hideToggle: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], displayMode: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }] } });\n\nclass MatExpansionModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionModule, imports: [MatCommonModule,\n            CdkAccordionModule,\n            PortalModule,\n            MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent], exports: [MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionModule, imports: [MatCommonModule,\n            CdkAccordionModule,\n            PortalModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatExpansionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CdkAccordionModule,\n                        PortalModule,\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                    exports: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                }]\n        }] });\n\n/**\n * Time and timing curve for expansion panel animations.\n * @deprecated No longer used. Will be removed.\n * @breaking-change 21.0.0\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM. This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n * @deprecated No longer being used, to be removed.\n * @breaking-change 21.0.0\n */\nconst matExpansionAnimations = {\n    // Represents:\n    // trigger('indicatorRotate', [\n    //   state('collapsed, void', style({transform: 'rotate(0deg)'})),\n    //   state('expanded', style({transform: 'rotate(180deg)'})),\n    //   transition(\n    //     'expanded <=> collapsed, void => collapsed',\n    //     animate(EXPANSION_PANEL_ANIMATION_TIMING),\n    //   ),\n    // ])\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: {\n        type: 7,\n        name: 'indicatorRotate',\n        definitions: [\n            {\n                type: 0,\n                name: 'collapsed, void',\n                styles: { type: 6, styles: { transform: 'rotate(0deg)' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'expanded',\n                styles: { type: 6, styles: { transform: 'rotate(180deg)' }, offset: null },\n            },\n            {\n                type: 1,\n                expr: 'expanded <=> collapsed, void => collapsed',\n                animation: { type: 4, styles: null, timings: '225ms cubic-bezier(0.4,0.0,0.2,1)' },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n    // Represents:\n    // trigger('bodyExpansion', [\n    //   state('collapsed, void', style({height: '0px', visibility: 'hidden'})),\n    //   // Clear the `visibility` while open, otherwise the content will be visible when placed in\n    //   // a parent that's `visibility: hidden`, because `visibility` doesn't apply to descendants\n    //   // that have a `visibility` of their own (see #27436).\n    //   state('expanded', style({height: '*', visibility: ''})),\n    //   transition(\n    //     'expanded <=> collapsed, void => collapsed',\n    //     animate(EXPANSION_PANEL_ANIMATION_TIMING),\n    //   ),\n    // ])\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: {\n        type: 7,\n        name: 'bodyExpansion',\n        definitions: [\n            {\n                type: 0,\n                name: 'collapsed, void',\n                styles: { type: 6, styles: { 'height': '0px', 'visibility': 'hidden' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'expanded',\n                styles: { type: 6, styles: { 'height': '*', 'visibility': '' }, offset: null },\n            },\n            {\n                type: 1,\n                expr: 'expanded <=> collapsed, void => collapsed',\n                animation: { type: 4, styles: null, timings: '225ms cubic-bezier(0.4,0.0,0.2,1)' },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, ElementRef, NgZone, ViewContainerRef, afterNextRender, DOCUMENT, Directive, Input, ChangeDetectorRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { createRepositionScrollStrategy, ScrollDispatcher, createFlexibleConnectedPositionStrategy, createOverlayRef, OverlayModule } from '@angular/cdk/overlay';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { NgClass } from '@angular/common';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy', {\n    providedIn: 'root',\n    factory: () => {\n        const injector = inject(Injector);\n        return () => createRepositionScrollStrategy(injector, { scrollThrottle: SCROLL_THROTTLE_MS });\n    },\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(_overlay) {\n    const injector = inject(Injector);\n    return () => createRepositionScrollStrategy(injector, { scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    _elementRef = inject(ElementRef);\n    _ngZone = inject(NgZone);\n    _platform = inject(Platform);\n    _ariaDescriber = inject(AriaDescriber);\n    _focusMonitor = inject(FocusMonitor);\n    _dir = inject(Directionality);\n    _injector = inject(Injector);\n    _viewContainerRef = inject(ViewContainerRef);\n    _animationsDisabled = _animationsDisabled();\n    _defaultOptions = inject(MAT_TOOLTIP_DEFAULT_OPTIONS, {\n        optional: true,\n    });\n    _overlayRef;\n    _tooltipInstance;\n    _overlayPanelClass; // Used for styling internally.\n    _portal;\n    _position = 'below';\n    _positionAtOrigin = false;\n    _disabled = false;\n    _tooltipClass;\n    _viewInitialized = false;\n    _pointerExitEventsInitialized = false;\n    _tooltipComponent = TooltipComponent;\n    _viewportMargin = 8;\n    _currentPosition;\n    _cssClassPrefix = 'mat-mdc';\n    _ariaDescriptionPending;\n    _dirSubscribed = false;\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        const isDisabled = coerceBooleanProperty(value);\n        if (this._disabled !== isDisabled) {\n            this._disabled = isDisabled;\n            // If tooltip is disabled, hide immediately.\n            if (isDisabled) {\n                this.hide(0);\n            }\n            else {\n                this._setupPointerEnterEventsIfNeeded();\n            }\n            this._syncAriaDescription(this.message);\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    _showDelay;\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    _hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     */\n    touchGestures = 'auto';\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        const oldMessage = this._message;\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n        }\n        this._syncAriaDescription(oldMessage);\n    }\n    _message = '';\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /** Manually-bound passive event listeners. */\n    _passiveListeners = [];\n    /** Timer started at the last `touchstart` event. */\n    _touchstartTimeout = null;\n    /** Emits when the component is destroyed. */\n    _destroyed = new Subject();\n    /** Whether ngOnDestroyed has been called. */\n    _isDestroyed = false;\n    constructor() {\n        const defaultOptions = this._defaultOptions;\n        if (defaultOptions) {\n            this._showDelay = defaultOptions.showDelay;\n            this._hideDelay = defaultOptions.hideDelay;\n            if (defaultOptions.position) {\n                this.position = defaultOptions.position;\n            }\n            if (defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = defaultOptions.positionAtOrigin;\n            }\n            if (defaultOptions.touchGestures) {\n                this.touchGestures = defaultOptions.touchGestures;\n            }\n            if (defaultOptions.tooltipClass) {\n                this.tooltipClass = defaultOptions.tooltipClass;\n            }\n        }\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        // Optimization: Do not call clearTimeout unless there is an active timer.\n        if (this._touchstartTimeout) {\n            clearTimeout(this._touchstartTimeout);\n        }\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._injector\n            .get(ScrollDispatcher)\n            .getAncestorScrollContainers(this._elementRef);\n        const panelClass = `${this._cssClassPrefix}-${PANEL_CLASS}`;\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = createFlexibleConnectedPositionStrategy(this._injector, this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = createOverlayRef(this._injector, {\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: this._overlayPanelClass ? [...this._overlayPanelClass, panelClass] : panelClass,\n            scrollStrategy: this._injector.get(MAT_TOOLTIP_SCROLL_STRATEGY)(),\n            disableAnimations: this._animationsDisabled,\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        if (!this._dirSubscribed) {\n            this._dirSubscribed = true;\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._overlayRef) {\n                    this._updatePosition(this._overlayRef);\n                }\n            });\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            afterNextRender(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            }, {\n                injector: this._injector,\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    if (this._touchstartTimeout) {\n                        clearTimeout(this._touchstartTimeout);\n                    }\n                    const DEFAULT_LONGPRESS_DELAY = 500;\n                    this._touchstartTimeout = setTimeout(() => {\n                        this._touchstartTimeout = null;\n                        this.show(undefined, origin);\n                    }, this._defaultOptions?.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                if (this._touchstartTimeout) {\n                    clearTimeout(this._touchstartTimeout);\n                }\n                this.hide(this._defaultOptions?.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._injector\n                .get(DOCUMENT)\n                .elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    /** Updates the tooltip's ARIA description based on it current state. */\n    _syncAriaDescription(oldMessage) {\n        if (this._ariaDescriptionPending) {\n            return;\n        }\n        this._ariaDescriptionPending = true;\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, oldMessage, 'tooltip');\n        // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n        // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n        // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n        // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n        if (!this._isDestroyed) {\n            afterNextRender({\n                write: () => {\n                    this._ariaDescriptionPending = false;\n                    if (this.message && !this.disabled) {\n                        this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                    }\n                },\n            }, { injector: this._injector });\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltip, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatTooltip, isStandalone: true, selector: \"[matTooltip]\", inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, host: { properties: { \"class.mat-mdc-tooltip-disabled\": \"disabled\" }, classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                        '[class.mat-mdc-tooltip-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    /* Whether the tooltip text overflows to multiple lines */\n    _isMultiline = false;\n    /** Message to display in the tooltip */\n    message;\n    /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n    tooltipClass;\n    /** The timeout ID of any current timer set to show the tooltip */\n    _showTimeoutId;\n    /** The timeout ID of any current timer set to hide the tooltip */\n    _hideTimeoutId;\n    /** Element that caused the tooltip to open. */\n    _triggerElement;\n    /** Amount of milliseconds to delay the closing sequence. */\n    _mouseLeaveHideDelay;\n    /** Whether animations are currently disabled. */\n    _animationsDisabled = _animationsDisabled();\n    /** Reference to the internal tooltip element. */\n    _tooltip;\n    /** Whether interactions on the page should close the tooltip */\n    _closeOnInteraction = false;\n    /** Whether the tooltip is currently visible. */\n    _isVisible = false;\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    _onHide = new Subject();\n    /** Name of the show animation and the class that toggles it. */\n    _showAnimation = 'mat-mdc-tooltip-show';\n    /** Name of the hide animation and the class that toggles it. */\n    _hideAnimation = 'mat-mdc-tooltip-hide';\n    constructor() { }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        if (this._isVisible !== isVisible) {\n            this._isVisible = isVisible;\n            this._changeDetectorRef.markForCheck();\n        }\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TooltipComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: TooltipComponent, isStandalone: true, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mat-mdc-tooltip-surface mdc-tooltip__surface\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mat-tooltip-container-color, var(--mat-sys-inverse-surface));color:var(--mat-tooltip-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mat-tooltip-container-shape, var(--mat-sys-corner-extra-small));font-family:var(--mat-tooltip-supporting-text-font, var(--mat-sys-body-small-font));font-size:var(--mat-tooltip-supporting-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-tooltip-supporting-text-weight, var(--mat-sys-body-small-weight));line-height:var(--mat-tooltip-supporting-text-line-height, var(--mat-sys-body-small-line-height));letter-spacing:var(--mat-tooltip-supporting-text-tracking, var(--mat-sys-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel{line-height:normal}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\\n\"], dependencies: [{ kind: \"directive\", type: NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, imports: [NgClass], template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mat-mdc-tooltip-surface mdc-tooltip__surface\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mat-tooltip-container-color, var(--mat-sys-inverse-surface));color:var(--mat-tooltip-supporting-text-color, var(--mat-sys-inverse-on-surface));border-radius:var(--mat-tooltip-container-shape, var(--mat-sys-corner-extra-small));font-family:var(--mat-tooltip-supporting-text-font, var(--mat-sys-body-small-font));font-size:var(--mat-tooltip-supporting-text-size, var(--mat-sys-body-small-size));font-weight:var(--mat-tooltip-supporting-text-weight, var(--mat-sys-body-small-weight));line-height:var(--mat-tooltip-supporting-text-line-height, var(--mat-sys-body-small-line-height));letter-spacing:var(--mat-tooltip-supporting-text-tracking, var(--mat-sys-body-small-tracking))}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel{line-height:normal}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\nclass MatTooltipModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, imports: [A11yModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, OverlayModule, MatCommonModule, MatTooltip, TooltipComponent],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\nexport { MAT_TOOLTIP_SCROLL_STRATEGY as M, SCROLL_THROTTLE_MS as S, TOOLTIP_PANEL_CLASS as T, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY as a, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER as b, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY as c, MAT_TOOLTIP_DEFAULT_OPTIONS as d, MatTooltip as e, TooltipComponent as f, getMatTooltipInvalidPositionError as g, MatTooltipModule as h };\n\n","export { d as MAT_TOOLTIP_DEFAULT_OPTIONS, c as MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, M as MAT_TOOLTIP_SCROLL_STRATEGY, a as MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, b as MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, e as MatTooltip, h as MatTooltipModule, S as SCROLL_THROTTLE_MS, T as TOOLTIP_PANEL_CLASS, f as TooltipComponent, g as getMatTooltipInvalidPositionError } from './module-CWxMD37a.mjs';\nimport '@angular/core';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/overlay';\nimport '@angular/cdk/scrolling';\nimport 'rxjs/operators';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/keycodes';\nimport '@angular/common';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/bidi';\nimport '@angular/cdk/portal';\nimport 'rxjs';\nimport './animation-DfMFjxHu.mjs';\nimport '@angular/cdk/layout';\nimport './common-module-cKSwHniA.mjs';\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n * @deprecated No longer being used, to be removed.\n * @breaking-change 21.0.0\n */\nconst matTooltipAnimations = {\n    // Represents:\n    // trigger('state', [\n    //   state('initial, void, hidden', style({opacity: 0, transform: 'scale(0.8)'})),\n    //   state('visible', style({transform: 'scale(1)'})),\n    //   transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n    //   transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n    // ])\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: {\n        type: 7,\n        name: 'state',\n        definitions: [\n            {\n                type: 0,\n                name: 'initial, void, hidden',\n                styles: { type: 6, styles: { opacity: 0, transform: 'scale(0.8)' }, offset: null },\n            },\n            {\n                type: 0,\n                name: 'visible',\n                styles: { type: 6, styles: { transform: 'scale(1)' }, offset: null },\n            },\n            {\n                type: 1,\n                expr: '* => visible',\n                animation: { type: 4, styles: null, timings: '150ms cubic-bezier(0, 0, 0.2, 1)' },\n                options: null,\n            },\n            {\n                type: 1,\n                expr: '* => hidden',\n                animation: { type: 4, styles: null, timings: '75ms cubic-bezier(0.4, 0, 1, 1)' },\n                options: null,\n            },\n        ],\n        options: {},\n    },\n};\n\nexport { matTooltipAnimations };\n\n","import { S as SelectionModel } from './selection-model-BCgC8uEN.mjs';\nimport { isObservable, Subject, BehaviorSubject, of, combineLatest, EMPTY, concat } from 'rxjs';\nimport { take, filter, takeUntil, startWith, tap, switchMap, map, reduce, concatMap, distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ViewContainerRef, Directive, TemplateRef, IterableDiffers, ChangeDetectorRef, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ViewChild, ContentChildren, EventEmitter, booleanAttribute, Output, numberAttribute, NgModule } from '@angular/core';\nimport { T as TREE_KEY_MANAGER } from './tree-key-manager-KnCoIkIC.mjs';\nimport { D as Directionality } from './directionality-CChdj3az.mjs';\nimport { i as isDataSource } from './data-source-D34wiQZj.mjs';\nimport { coerceObservable } from './coercion/private.mjs';\nimport './typeahead-9ZW4Dtsf.mjs';\nimport './keycodes-CpHkExLC.mjs';\n\n/**\n * Base tree control. It has basic toggle/expand/collapse operations on a single data node.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor. To be removed in a future version.\n * @breaking-change 21.0.0\n */\nclass BaseTreeControl {\n    /** Saved data node for `expandAll` action. */\n    dataNodes;\n    /** A selection model with multi-selection to track expansion status. */\n    expansionModel = new SelectionModel(true);\n    /**\n     * Returns the identifier by which a dataNode should be tracked, should its\n     * reference change.\n     *\n     * Similar to trackBy for *ngFor\n     */\n    trackBy;\n    /** Get depth of a given data node, return the level number. This is for flat tree node. */\n    getLevel;\n    /**\n     * Whether the data node is expandable. Returns true if expandable.\n     * This is for flat tree node.\n     */\n    isExpandable;\n    /** Gets a stream that emits whenever the given data node's children change. */\n    getChildren;\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(dataNode) {\n        this.expansionModel.toggle(this._trackByValue(dataNode));\n    }\n    /** Expands one single data node. */\n    expand(dataNode) {\n        this.expansionModel.select(this._trackByValue(dataNode));\n    }\n    /** Collapses one single data node. */\n    collapse(dataNode) {\n        this.expansionModel.deselect(this._trackByValue(dataNode));\n    }\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(dataNode) {\n        return this.expansionModel.isSelected(this._trackByValue(dataNode));\n    }\n    /** Toggles a subtree rooted at `node` recursively. */\n    toggleDescendants(dataNode) {\n        this.expansionModel.isSelected(this._trackByValue(dataNode))\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n    /** Collapse all dataNodes in the tree. */\n    collapseAll() {\n        this.expansionModel.clear();\n    }\n    /** Expands a subtree rooted at given data node recursively. */\n    expandDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    /** Collapses a subtree rooted at given data node recursively. */\n    collapseDescendants(dataNode) {\n        let toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed.map(value => this._trackByValue(value)));\n    }\n    _trackByValue(value) {\n        return this.trackBy ? this.trackBy(value) : value;\n    }\n}\n\n/**\n * Flat tree control. Able to expand/collapse a subtree recursively for flattened tree.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass FlatTreeControl extends BaseTreeControl {\n    getLevel;\n    isExpandable;\n    options;\n    /** Construct with flat tree data node functions getLevel and isExpandable. */\n    constructor(getLevel, isExpandable, options) {\n        super();\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n    }\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     */\n    getDescendants(dataNode) {\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        const results = [];\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1; i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]); i++) {\n            results.push(this.dataNodes[i]);\n        }\n        return results;\n    }\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.select(...this.dataNodes.map(node => this._trackByValue(node)));\n    }\n}\n\n/**\n * Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass NestedTreeControl extends BaseTreeControl {\n    getChildren;\n    options;\n    /** Construct with nested tree function getChildren. */\n    constructor(getChildren, options) {\n        super();\n        this.getChildren = getChildren;\n        this.options = options;\n        if (this.options) {\n            this.trackBy = this.options.trackBy;\n        }\n        if (this.options?.isExpandable) {\n            this.isExpandable = this.options.isExpandable;\n        }\n    }\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     */\n    expandAll() {\n        this.expansionModel.clear();\n        const allNodes = this.dataNodes.reduce((accumulator, dataNode) => [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n        this.expansionModel.select(...allNodes.map(node => this._trackByValue(node)));\n    }\n    /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n    getDescendants(dataNode) {\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n        // Remove the node itself\n        return descendants.splice(1);\n    }\n    /** A helper function to get descendants recursively. */\n    _getDescendants(descendants, dataNode) {\n        descendants.push(dataNode);\n        const childrenNodes = this.getChildren(dataNode);\n        if (Array.isArray(childrenNodes)) {\n            childrenNodes.forEach((child) => this._getDescendants(descendants, child));\n        }\n        else if (isObservable(childrenNodes)) {\n            // TypeScript as of version 3.5 doesn't seem to treat `Boolean` like a function that\n            // returns a `boolean` specifically in the context of `filter`, so we manually clarify that.\n            childrenNodes.pipe(take(1), filter(Boolean)).subscribe(children => {\n                for (const child of children) {\n                    this._getDescendants(descendants, child);\n                }\n            });\n        }\n    }\n}\n\n/**\n * Injection token used to provide a `CdkTreeNode` to its outlet.\n * Used primarily to avoid circular imports.\n * @docs-private\n */\nconst CDK_TREE_NODE_OUTLET_NODE = new InjectionToken('CDK_TREE_NODE_OUTLET_NODE');\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass CdkTreeNodeOutlet {\n    viewContainer = inject(ViewContainerRef);\n    _node = inject(CDK_TREE_NODE_OUTLET_NODE, { optional: true });\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeNodeOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkTreeNodeOutlet, isStandalone: true, selector: \"[cdkTreeNodeOutlet]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeNodeOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeOutlet]',\n                }]\n        }], ctorParameters: () => [] });\n\n/** Context provided to the tree node component. */\nclass CdkTreeNodeOutletContext {\n    /** Data for the node. */\n    $implicit;\n    /** Depth of the node. */\n    level;\n    /** Index location of the node. */\n    index;\n    /** Length of the number of total dataNodes. */\n    count;\n    constructor(data) {\n        this.$implicit = data;\n    }\n}\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass CdkTreeNodeDef {\n    /** @docs-private */\n    template = inject(TemplateRef);\n    /**\n     * Function that should return true if this node template should be used for the provided node\n     * data and index. If left undefined, this node will be considered the default node template to\n     * use when no other when functions return true for the data.\n     * For every node, there must be at least one when function that passes or an undefined to\n     * default.\n     */\n    when;\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeNodeDef, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkTreeNodeDef, isStandalone: true, selector: \"[cdkTreeNodeDef]\", inputs: { when: [\"cdkTreeNodeDefWhen\", \"when\"] }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeNodeDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeDef]',\n                    inputs: [{ name: 'when', alias: 'cdkTreeNodeDefWhen' }],\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nfunction getTreeNoValidDataSourceError() {\n    return Error(`A valid data source must be provided.`);\n}\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nfunction getTreeMultipleDefaultNodeDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nfunction getTreeMissingMatchingNodeDefError() {\n    return Error(`Could not find a matching node definition for the provided node data.`);\n}\n/**\n * Returns an error to be thrown when there is no tree control.\n * @docs-private\n */\nfunction getTreeControlMissingError() {\n    return Error(`Could not find a tree control, levelAccessor, or childrenAccessor for the tree.`);\n}\n/**\n * Returns an error to be thrown when there are multiple ways of specifying children or level\n * provided to the tree.\n * @docs-private\n */\nfunction getMultipleTreeControlsError() {\n    return Error(`More than one of tree control, levelAccessor, or childrenAccessor were provided.`);\n}\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\nclass CdkTree {\n    _differs = inject(IterableDiffers);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _dir = inject(Directionality);\n    /** Subject that emits when the component has been destroyed. */\n    _onDestroy = new Subject();\n    /** Differ used to find the changes in the data provided by the data source. */\n    _dataDiffer;\n    /** Stores the node definition that does not have a when predicate. */\n    _defaultNodeDef;\n    /** Data subscription */\n    _dataSubscription;\n    /** Level of nodes */\n    _levels = new Map();\n    /** The immediate parents for a node. This is `null` if there is no parent. */\n    _parents = new Map();\n    /**\n     * Nodes grouped into each set, which is a list of nodes displayed together in the DOM.\n     *\n     * Lookup key is the parent of a set. Root nodes have key of null.\n     *\n     * Values is a 'set' of tree nodes. Each tree node maps to a treeitem element. Sets are in the\n     * order that it is rendered. Each set maps directly to aria-posinset and aria-setsize attributes.\n     */\n    _ariaSets = new Map();\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a data array to render.\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    _dataSource;\n    /**\n     * The tree controller\n     *\n     * @deprecated Use one of `levelAccessor` or `childrenAccessor` instead. To be removed in a\n     * future version.\n     * @breaking-change 21.0.0\n     */\n    treeControl;\n    /**\n     * Given a data node, determines what tree level the node is at.\n     *\n     * One of levelAccessor or childrenAccessor must be specified, not both.\n     * This is enforced at run-time.\n     */\n    levelAccessor;\n    /**\n     * Given a data node, determines what the children of that node are.\n     *\n     * One of levelAccessor or childrenAccessor must be specified, not both.\n     * This is enforced at run-time.\n     */\n    childrenAccessor;\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize node operations by identifying a node based on its data\n     * relative to the function to know if a node should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    trackBy;\n    /**\n     * Given a data node, determines the key by which we determine whether or not this node is expanded.\n     */\n    expansionKey;\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    _nodeOutlet;\n    /** The tree node template for the tree */\n    _nodeDefs;\n    // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n    //     Remove the MAX_VALUE in viewChange\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     */\n    viewChange = new BehaviorSubject({\n        start: 0,\n        end: Number.MAX_VALUE,\n    });\n    /** Keep track of which nodes are expanded. */\n    _expansionModel;\n    /**\n     * Maintain a synchronous cache of flattened data nodes. This will only be\n     * populated after initial render, and in certain cases, will be delayed due to\n     * relying on Observable `getChildren` calls.\n     */\n    _flattenedNodes = new BehaviorSubject([]);\n    /** The automatically determined node type for the tree. */\n    _nodeType = new BehaviorSubject(null);\n    /** The mapping between data and the node that is rendered. */\n    _nodes = new BehaviorSubject(new Map());\n    /**\n     * Synchronous cache of nodes for the `TreeKeyManager`. This is separate\n     * from `_flattenedNodes` so they can be independently updated at different\n     * times.\n     */\n    _keyManagerNodes = new BehaviorSubject([]);\n    _keyManagerFactory = inject(TREE_KEY_MANAGER);\n    /** The key manager for this tree. Handles focus and activation based on user keyboard input. */\n    _keyManager;\n    _viewInit = false;\n    constructor() { }\n    ngAfterContentInit() {\n        this._initializeKeyManager();\n    }\n    ngAfterContentChecked() {\n        this._updateDefaultNodeDefinition();\n        this._subscribeToDataChanges();\n    }\n    ngOnDestroy() {\n        this._nodeOutlet.viewContainer.clear();\n        this.viewChange.complete();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // In certain tests, the tree might be destroyed before this is initialized\n        // in `ngAfterContentInit`.\n        this._keyManager?.destroy();\n    }\n    ngOnInit() {\n        this._checkTreeControlUsage();\n        this._initializeDataDiffer();\n    }\n    ngAfterViewInit() {\n        this._viewInit = true;\n    }\n    _updateDefaultNodeDefinition() {\n        const defaultNodeDefs = this._nodeDefs.filter(def => !def.when);\n        if (defaultNodeDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this._defaultNodeDef = defaultNodeDefs[0];\n    }\n    /**\n     * Sets the node type for the tree, if it hasn't been set yet.\n     *\n     * This will be called by the first node that's rendered in order for the tree\n     * to determine what data transformations are required.\n     */\n    _setNodeTypeIfUnset(newType) {\n        const currentType = this._nodeType.value;\n        if (currentType === null) {\n            this._nodeType.next(newType);\n        }\n        else if ((typeof ngDevMode === 'undefined' || ngDevMode) && currentType !== newType) {\n            console.warn(`Tree is using conflicting node types which can cause unexpected behavior. ` +\n                `Please use tree nodes of the same type (e.g. only flat or only nested). ` +\n                `Current node type: \"${currentType}\", new node type \"${newType}\".`);\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        if (this._dataSource && typeof this._dataSource.disconnect === 'function') {\n            this.dataSource.disconnect(this);\n        }\n        if (this._dataSubscription) {\n            this._dataSubscription.unsubscribe();\n            this._dataSubscription = null;\n        }\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) {\n            this._nodeOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n        if (this._nodeDefs) {\n            this._subscribeToDataChanges();\n        }\n    }\n    _getExpansionModel() {\n        if (!this.treeControl) {\n            this._expansionModel ??= new SelectionModel(true);\n            return this._expansionModel;\n        }\n        return this.treeControl.expansionModel;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _subscribeToDataChanges() {\n        if (this._dataSubscription) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this._dataSource)) {\n            dataStream = this._dataSource.connect(this);\n        }\n        else if (isObservable(this._dataSource)) {\n            dataStream = this._dataSource;\n        }\n        else if (Array.isArray(this._dataSource)) {\n            dataStream = of(this._dataSource);\n        }\n        if (!dataStream) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                throw getTreeNoValidDataSourceError();\n            }\n            return;\n        }\n        this._dataSubscription = this._getRenderData(dataStream)\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(renderingData => {\n            this._renderDataChanges(renderingData);\n        });\n    }\n    /** Given an Observable containing a stream of the raw data, returns an Observable containing the RenderingData */\n    _getRenderData(dataStream) {\n        const expansionModel = this._getExpansionModel();\n        return combineLatest([\n            dataStream,\n            this._nodeType,\n            // We don't use the expansion data directly, however we add it here to essentially\n            // trigger data rendering when expansion changes occur.\n            expansionModel.changed.pipe(startWith(null), tap(expansionChanges => {\n                this._emitExpansionChanges(expansionChanges);\n            })),\n        ]).pipe(switchMap(([data, nodeType]) => {\n            if (nodeType === null) {\n                return of({ renderNodes: data, flattenedNodes: null, nodeType });\n            }\n            // If we're here, then we know what our node type is, and therefore can\n            // perform our usual rendering pipeline, which necessitates converting the data\n            return this._computeRenderingData(data, nodeType).pipe(map(convertedData => ({ ...convertedData, nodeType })));\n        }));\n    }\n    _renderDataChanges(data) {\n        if (data.nodeType === null) {\n            this.renderNodeChanges(data.renderNodes);\n            return;\n        }\n        // If we're here, then we know what our node type is, and therefore can\n        // perform our usual rendering pipeline.\n        this._updateCachedData(data.flattenedNodes);\n        this.renderNodeChanges(data.renderNodes);\n        this._updateKeyManagerItems(data.flattenedNodes);\n    }\n    _emitExpansionChanges(expansionChanges) {\n        if (!expansionChanges) {\n            return;\n        }\n        const nodes = this._nodes.value;\n        for (const added of expansionChanges.added) {\n            const node = nodes.get(added);\n            node?._emitExpansionState(true);\n        }\n        for (const removed of expansionChanges.removed) {\n            const node = nodes.get(removed);\n            node?._emitExpansionState(false);\n        }\n    }\n    _initializeKeyManager() {\n        const items = combineLatest([this._keyManagerNodes, this._nodes]).pipe(map(([keyManagerNodes, renderNodes]) => keyManagerNodes.reduce((items, data) => {\n            const node = renderNodes.get(this._getExpansionKey(data));\n            if (node) {\n                items.push(node);\n            }\n            return items;\n        }, [])));\n        const keyManagerOptions = {\n            trackBy: node => this._getExpansionKey(node.data),\n            skipPredicate: node => !!node.isDisabled,\n            typeAheadDebounceInterval: true,\n            horizontalOrientation: this._dir.value,\n        };\n        this._keyManager = this._keyManagerFactory(items, keyManagerOptions);\n    }\n    _initializeDataDiffer() {\n        // Provide a default trackBy based on `_getExpansionKey` if one isn't provided.\n        const trackBy = this.trackBy ?? ((_index, item) => this._getExpansionKey(item));\n        this._dataDiffer = this._differs.find([]).create(trackBy);\n    }\n    _checkTreeControlUsage() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Verify that Tree follows API contract of using one of TreeControl, levelAccessor or\n            // childrenAccessor. Throw an appropriate error if contract is not met.\n            let numTreeControls = 0;\n            if (this.treeControl) {\n                numTreeControls++;\n            }\n            if (this.levelAccessor) {\n                numTreeControls++;\n            }\n            if (this.childrenAccessor) {\n                numTreeControls++;\n            }\n            if (!numTreeControls) {\n                throw getTreeControlMissingError();\n            }\n            else if (numTreeControls > 1) {\n                throw getMultipleTreeControlsError();\n            }\n        }\n    }\n    /** Check for changes made in the data and render each change (node added/removed/moved). */\n    renderNodeChanges(data, dataDiffer = this._dataDiffer, viewContainer = this._nodeOutlet.viewContainer, parentData) {\n        const changes = dataDiffer.diff(data);\n        // Some tree consumers expect change detection to propagate to nodes\n        // even when the array itself hasn't changed; we explicitly detect changes\n        // anyways in order for nodes to update their data.\n        //\n        // However, if change detection is called while the component's view is\n        // still initing, then the order of child views initing will be incorrect;\n        // to prevent this, we only exit early if the view hasn't initialized yet.\n        if (!changes && !this._viewInit) {\n            return;\n        }\n        changes?.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[currentIndex], currentIndex, viewContainer, parentData);\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove(adjustedPreviousIndex);\n            }\n            else {\n                const view = viewContainer.get(adjustedPreviousIndex);\n                viewContainer.move(view, currentIndex);\n            }\n        });\n        // If the data itself changes, but keeps the same trackBy, we need to update the templates'\n        // context to reflect the new object.\n        changes?.forEachIdentityChange((record) => {\n            const newData = record.item;\n            if (record.currentIndex != undefined) {\n                const view = viewContainer.get(record.currentIndex);\n                view.context.$implicit = newData;\n            }\n        });\n        // Note: we only `detectChanges` from a top-level call, otherwise we risk overflowing\n        // the call stack since this method is called recursively (see #29733.)\n        // TODO: change to `this._changeDetectorRef.markForCheck()`,\n        // or just switch this component to use signals.\n        if (parentData) {\n            this._changeDetectorRef.markForCheck();\n        }\n        else {\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     */\n    _getNodeDef(data, i) {\n        if (this._nodeDefs.length === 1) {\n            return this._nodeDefs.first;\n        }\n        const nodeDef = this._nodeDefs.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\n        if (!nodeDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTreeMissingMatchingNodeDefError();\n        }\n        return nodeDef;\n    }\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     */\n    insertNode(nodeData, index, viewContainer, parentData) {\n        const levelAccessor = this._getLevelAccessor();\n        const node = this._getNodeDef(nodeData, index);\n        const key = this._getExpansionKey(nodeData);\n        // Node context that will be provided to created embedded view\n        const context = new CdkTreeNodeOutletContext(nodeData);\n        parentData ??= this._parents.get(key) ?? undefined;\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (levelAccessor) {\n            context.level = levelAccessor(nodeData);\n        }\n        else if (parentData !== undefined && this._levels.has(this._getExpansionKey(parentData))) {\n            context.level = this._levels.get(this._getExpansionKey(parentData)) + 1;\n        }\n        else {\n            context.level = 0;\n        }\n        this._levels.set(key, context.level);\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        const container = viewContainer ? viewContainer : this._nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n    /** Whether the data node is expanded or collapsed. Returns true if it's expanded. */\n    isExpanded(dataNode) {\n        return !!(this.treeControl?.isExpanded(dataNode) ||\n            this._expansionModel?.isSelected(this._getExpansionKey(dataNode)));\n    }\n    /** If the data node is currently expanded, collapse it. Otherwise, expand it. */\n    toggle(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.toggle(dataNode);\n        }\n        else if (this._expansionModel) {\n            this._expansionModel.toggle(this._getExpansionKey(dataNode));\n        }\n    }\n    /** Expand the data node. If it is already expanded, does nothing. */\n    expand(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.expand(dataNode);\n        }\n        else if (this._expansionModel) {\n            this._expansionModel.select(this._getExpansionKey(dataNode));\n        }\n    }\n    /** Collapse the data node. If it is already collapsed, does nothing. */\n    collapse(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.collapse(dataNode);\n        }\n        else if (this._expansionModel) {\n            this._expansionModel.deselect(this._getExpansionKey(dataNode));\n        }\n    }\n    /**\n     * If the data node is currently expanded, collapse it and all its descendants.\n     * Otherwise, expand it and all its descendants.\n     */\n    toggleDescendants(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.toggleDescendants(dataNode);\n        }\n        else if (this._expansionModel) {\n            if (this.isExpanded(dataNode)) {\n                this.collapseDescendants(dataNode);\n            }\n            else {\n                this.expandDescendants(dataNode);\n            }\n        }\n    }\n    /**\n     * Expand the data node and all its descendants. If they are already expanded, does nothing.\n     */\n    expandDescendants(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.expandDescendants(dataNode);\n        }\n        else if (this._expansionModel) {\n            const expansionModel = this._expansionModel;\n            expansionModel.select(this._getExpansionKey(dataNode));\n            this._getDescendants(dataNode)\n                .pipe(take(1), takeUntil(this._onDestroy))\n                .subscribe(children => {\n                expansionModel.select(...children.map(child => this._getExpansionKey(child)));\n            });\n        }\n    }\n    /** Collapse the data node and all its descendants. If it is already collapsed, does nothing. */\n    collapseDescendants(dataNode) {\n        if (this.treeControl) {\n            this.treeControl.collapseDescendants(dataNode);\n        }\n        else if (this._expansionModel) {\n            const expansionModel = this._expansionModel;\n            expansionModel.deselect(this._getExpansionKey(dataNode));\n            this._getDescendants(dataNode)\n                .pipe(take(1), takeUntil(this._onDestroy))\n                .subscribe(children => {\n                expansionModel.deselect(...children.map(child => this._getExpansionKey(child)));\n            });\n        }\n    }\n    /** Expands all data nodes in the tree. */\n    expandAll() {\n        if (this.treeControl) {\n            this.treeControl.expandAll();\n        }\n        else if (this._expansionModel) {\n            this._forEachExpansionKey(keys => this._expansionModel?.select(...keys));\n        }\n    }\n    /** Collapse all data nodes in the tree. */\n    collapseAll() {\n        if (this.treeControl) {\n            this.treeControl.collapseAll();\n        }\n        else if (this._expansionModel) {\n            this._forEachExpansionKey(keys => this._expansionModel?.deselect(...keys));\n        }\n    }\n    /** Level accessor, used for compatibility between the old Tree and new Tree */\n    _getLevelAccessor() {\n        return this.treeControl?.getLevel?.bind(this.treeControl) ?? this.levelAccessor;\n    }\n    /** Children accessor, used for compatibility between the old Tree and new Tree */\n    _getChildrenAccessor() {\n        return this.treeControl?.getChildren?.bind(this.treeControl) ?? this.childrenAccessor;\n    }\n    /**\n     * Gets the direct children of a node; used for compatibility between the old tree and the\n     * new tree.\n     */\n    _getDirectChildren(dataNode) {\n        const levelAccessor = this._getLevelAccessor();\n        const expansionModel = this._expansionModel ?? this.treeControl?.expansionModel;\n        if (!expansionModel) {\n            return of([]);\n        }\n        const key = this._getExpansionKey(dataNode);\n        const isExpanded = expansionModel.changed.pipe(switchMap(changes => {\n            if (changes.added.includes(key)) {\n                return of(true);\n            }\n            else if (changes.removed.includes(key)) {\n                return of(false);\n            }\n            return EMPTY;\n        }), startWith(this.isExpanded(dataNode)));\n        if (levelAccessor) {\n            return combineLatest([isExpanded, this._flattenedNodes]).pipe(map(([expanded, flattenedNodes]) => {\n                if (!expanded) {\n                    return [];\n                }\n                return this._findChildrenByLevel(levelAccessor, flattenedNodes, dataNode, 1);\n            }));\n        }\n        const childrenAccessor = this._getChildrenAccessor();\n        if (childrenAccessor) {\n            return coerceObservable(childrenAccessor(dataNode) ?? []);\n        }\n        throw getTreeControlMissingError();\n    }\n    /**\n     * Given the list of flattened nodes, the level accessor, and the level range within\n     * which to consider children, finds the children for a given node.\n     *\n     * For example, for direct children, `levelDelta` would be 1. For all descendants,\n     * `levelDelta` would be Infinity.\n     */\n    _findChildrenByLevel(levelAccessor, flattenedNodes, dataNode, levelDelta) {\n        const key = this._getExpansionKey(dataNode);\n        const startIndex = flattenedNodes.findIndex(node => this._getExpansionKey(node) === key);\n        const dataNodeLevel = levelAccessor(dataNode);\n        const expectedLevel = dataNodeLevel + levelDelta;\n        const results = [];\n        // Goes through flattened tree nodes in the `flattenedNodes` array, and get all\n        // descendants within a certain level range.\n        //\n        // If we reach a node whose level is equal to or less than the level of the tree node,\n        // we hit a sibling or parent's sibling, and should stop.\n        for (let i = startIndex + 1; i < flattenedNodes.length; i++) {\n            const currentLevel = levelAccessor(flattenedNodes[i]);\n            if (currentLevel <= dataNodeLevel) {\n                break;\n            }\n            if (currentLevel <= expectedLevel) {\n                results.push(flattenedNodes[i]);\n            }\n        }\n        return results;\n    }\n    /**\n     * Adds the specified node component to the tree's internal registry.\n     *\n     * This primarily facilitates keyboard navigation.\n     */\n    _registerNode(node) {\n        this._nodes.value.set(this._getExpansionKey(node.data), node);\n        this._nodes.next(this._nodes.value);\n    }\n    /** Removes the specified node component from the tree's internal registry. */\n    _unregisterNode(node) {\n        this._nodes.value.delete(this._getExpansionKey(node.data));\n        this._nodes.next(this._nodes.value);\n    }\n    /**\n     * For the given node, determine the level where this node appears in the tree.\n     *\n     * This is intended to be used for `aria-level` but is 0-indexed.\n     */\n    _getLevel(node) {\n        return this._levels.get(this._getExpansionKey(node));\n    }\n    /**\n     * For the given node, determine the size of the parent's child set.\n     *\n     * This is intended to be used for `aria-setsize`.\n     */\n    _getSetSize(dataNode) {\n        const set = this._getAriaSet(dataNode);\n        return set.length;\n    }\n    /**\n     * For the given node, determine the index (starting from 1) of the node in its parent's child set.\n     *\n     * This is intended to be used for `aria-posinset`.\n     */\n    _getPositionInSet(dataNode) {\n        const set = this._getAriaSet(dataNode);\n        const key = this._getExpansionKey(dataNode);\n        return set.findIndex(node => this._getExpansionKey(node) === key) + 1;\n    }\n    /** Given a CdkTreeNode, gets the node that renders that node's parent's data. */\n    _getNodeParent(node) {\n        const parent = this._parents.get(this._getExpansionKey(node.data));\n        return parent && this._nodes.value.get(this._getExpansionKey(parent));\n    }\n    /** Given a CdkTreeNode, gets the nodes that renders that node's child data. */\n    _getNodeChildren(node) {\n        return this._getDirectChildren(node.data).pipe(map(children => children.reduce((nodes, child) => {\n            const value = this._nodes.value.get(this._getExpansionKey(child));\n            if (value) {\n                nodes.push(value);\n            }\n            return nodes;\n        }, [])));\n    }\n    /** `keydown` event handler; this just passes the event to the `TreeKeyManager`. */\n    _sendKeydownToKeyManager(event) {\n        // Only handle events directly on the tree or directly on one of the nodes, otherwise\n        // we risk interfering with events in the projected content (see #29828).\n        if (event.target === this._elementRef.nativeElement) {\n            this._keyManager.onKeydown(event);\n        }\n        else {\n            const nodes = this._nodes.getValue();\n            for (const [, node] of nodes) {\n                if (event.target === node._elementRef.nativeElement) {\n                    this._keyManager.onKeydown(event);\n                    break;\n                }\n            }\n        }\n    }\n    /** Gets all nested descendants of a given node. */\n    _getDescendants(dataNode) {\n        if (this.treeControl) {\n            return of(this.treeControl.getDescendants(dataNode));\n        }\n        if (this.levelAccessor) {\n            const results = this._findChildrenByLevel(this.levelAccessor, this._flattenedNodes.value, dataNode, Infinity);\n            return of(results);\n        }\n        if (this.childrenAccessor) {\n            return this._getAllChildrenRecursively(dataNode).pipe(reduce((allChildren, nextChildren) => {\n                allChildren.push(...nextChildren);\n                return allChildren;\n            }, []));\n        }\n        throw getTreeControlMissingError();\n    }\n    /**\n     * Gets all children and sub-children of the provided node.\n     *\n     * This will emit multiple times, in the order that the children will appear\n     * in the tree, and can be combined with a `reduce` operator.\n     */\n    _getAllChildrenRecursively(dataNode) {\n        if (!this.childrenAccessor) {\n            return of([]);\n        }\n        return coerceObservable(this.childrenAccessor(dataNode)).pipe(take(1), switchMap(children => {\n            // Here, we cache the parents of a particular child so that we can compute the levels.\n            for (const child of children) {\n                this._parents.set(this._getExpansionKey(child), dataNode);\n            }\n            return of(...children).pipe(concatMap(child => concat(of([child]), this._getAllChildrenRecursively(child))));\n        }));\n    }\n    _getExpansionKey(dataNode) {\n        // In the case that a key accessor function was not provided by the\n        // tree user, we'll default to using the node object itself as the key.\n        //\n        // This cast is safe since:\n        // - if an expansionKey is provided, TS will infer the type of K to be\n        //   the return type.\n        // - if it's not, then K will be defaulted to T.\n        return this.expansionKey?.(dataNode) ?? dataNode;\n    }\n    _getAriaSet(node) {\n        const key = this._getExpansionKey(node);\n        const parent = this._parents.get(key);\n        const parentKey = parent ? this._getExpansionKey(parent) : null;\n        const set = this._ariaSets.get(parentKey);\n        return set ?? [node];\n    }\n    /**\n     * Finds the parent for the given node. If this is a root node, this\n     * returns null. If we're unable to determine the parent, for example,\n     * if we don't have cached node data, this returns undefined.\n     */\n    _findParentForNode(node, index, cachedNodes) {\n        // In all cases, we have a mapping from node to level; all we need to do here is backtrack in\n        // our flattened list of nodes to determine the first node that's of a level lower than the\n        // provided node.\n        if (!cachedNodes.length) {\n            return null;\n        }\n        const currentLevel = this._levels.get(this._getExpansionKey(node)) ?? 0;\n        for (let parentIndex = index - 1; parentIndex >= 0; parentIndex--) {\n            const parentNode = cachedNodes[parentIndex];\n            const parentLevel = this._levels.get(this._getExpansionKey(parentNode)) ?? 0;\n            if (parentLevel < currentLevel) {\n                return parentNode;\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a set of root nodes and the current node level, flattens any nested\n     * nodes into a single array.\n     *\n     * If any nodes are not expanded, then their children will not be added into the array.\n     * This will still traverse all nested children in order to build up our internal data\n     * models, but will not include them in the returned array.\n     */\n    _flattenNestedNodesWithExpansion(nodes, level = 0) {\n        const childrenAccessor = this._getChildrenAccessor();\n        // If we're using a level accessor, we don't need to flatten anything.\n        if (!childrenAccessor) {\n            return of([...nodes]);\n        }\n        return of(...nodes).pipe(concatMap(node => {\n            const parentKey = this._getExpansionKey(node);\n            if (!this._parents.has(parentKey)) {\n                this._parents.set(parentKey, null);\n            }\n            this._levels.set(parentKey, level);\n            const children = coerceObservable(childrenAccessor(node));\n            return concat(of([node]), children.pipe(take(1), tap(childNodes => {\n                this._ariaSets.set(parentKey, [...(childNodes ?? [])]);\n                for (const child of childNodes ?? []) {\n                    const childKey = this._getExpansionKey(child);\n                    this._parents.set(childKey, node);\n                    this._levels.set(childKey, level + 1);\n                }\n            }), switchMap(childNodes => {\n                if (!childNodes) {\n                    return of([]);\n                }\n                return this._flattenNestedNodesWithExpansion(childNodes, level + 1).pipe(map(nestedNodes => (this.isExpanded(node) ? nestedNodes : [])));\n            })));\n        }), reduce((results, children) => {\n            results.push(...children);\n            return results;\n        }, []));\n    }\n    /**\n     * Converts children for certain tree configurations.\n     *\n     * This also computes parent, level, and group data.\n     */\n    _computeRenderingData(nodes, nodeType) {\n        // The only situations where we have to convert children types is when\n        // they're mismatched; i.e. if the tree is using a childrenAccessor and the\n        // nodes are flat, or if the tree is using a levelAccessor and the nodes are\n        // nested.\n        if (this.childrenAccessor && nodeType === 'flat') {\n            // clear previously generated data so we don't keep end up retaining data overtime causing\n            // memory leaks.\n            this._clearPreviousCache();\n            // This flattens children into a single array.\n            this._ariaSets.set(null, [...nodes]);\n            return this._flattenNestedNodesWithExpansion(nodes).pipe(map(flattenedNodes => ({\n                renderNodes: flattenedNodes,\n                flattenedNodes,\n            })));\n        }\n        else if (this.levelAccessor && nodeType === 'nested') {\n            // In the nested case, we only look for root nodes. The CdkNestedNode\n            // itself will handle rendering each individual node's children.\n            const levelAccessor = this.levelAccessor;\n            return of(nodes.filter(node => levelAccessor(node) === 0)).pipe(map(rootNodes => ({\n                renderNodes: rootNodes,\n                flattenedNodes: nodes,\n            })), tap(({ flattenedNodes }) => {\n                this._calculateParents(flattenedNodes);\n            }));\n        }\n        else if (nodeType === 'flat') {\n            // In the case of a TreeControl, we know that the node type matches up\n            // with the TreeControl, and so no conversions are necessary. Otherwise,\n            // we've already confirmed that the data model matches up with the\n            // desired node type here.\n            return of({ renderNodes: nodes, flattenedNodes: nodes }).pipe(tap(({ flattenedNodes }) => {\n                this._calculateParents(flattenedNodes);\n            }));\n        }\n        else {\n            // clear previously generated data so we don't keep end up retaining data overtime causing\n            // memory leaks.\n            this._clearPreviousCache();\n            // For nested nodes, we still need to perform the node flattening in order\n            // to maintain our caches for various tree operations.\n            this._ariaSets.set(null, [...nodes]);\n            return this._flattenNestedNodesWithExpansion(nodes).pipe(map(flattenedNodes => ({\n                renderNodes: nodes,\n                flattenedNodes,\n            })));\n        }\n    }\n    _updateCachedData(flattenedNodes) {\n        this._flattenedNodes.next(flattenedNodes);\n    }\n    _updateKeyManagerItems(flattenedNodes) {\n        this._keyManagerNodes.next(flattenedNodes);\n    }\n    /** Traverse the flattened node data and compute parents, levels, and group data. */\n    _calculateParents(flattenedNodes) {\n        const levelAccessor = this._getLevelAccessor();\n        if (!levelAccessor) {\n            return;\n        }\n        // clear previously generated data so we don't keep end up retaining data overtime causing\n        // memory leaks.\n        this._clearPreviousCache();\n        for (let index = 0; index < flattenedNodes.length; index++) {\n            const dataNode = flattenedNodes[index];\n            const key = this._getExpansionKey(dataNode);\n            this._levels.set(key, levelAccessor(dataNode));\n            const parent = this._findParentForNode(dataNode, index, flattenedNodes);\n            this._parents.set(key, parent);\n            const parentKey = parent ? this._getExpansionKey(parent) : null;\n            const group = this._ariaSets.get(parentKey) ?? [];\n            group.splice(index, 0, dataNode);\n            this._ariaSets.set(parentKey, group);\n        }\n    }\n    /** Invokes a callback with all node expansion keys. */\n    _forEachExpansionKey(callback) {\n        const toToggle = [];\n        const observables = [];\n        this._nodes.value.forEach(node => {\n            toToggle.push(this._getExpansionKey(node.data));\n            observables.push(this._getDescendants(node.data));\n        });\n        if (observables.length > 0) {\n            combineLatest(observables)\n                .pipe(take(1), takeUntil(this._onDestroy))\n                .subscribe(results => {\n                results.forEach(inner => inner.forEach(r => toToggle.push(this._getExpansionKey(r))));\n                callback(toToggle);\n            });\n        }\n        else {\n            callback(toToggle);\n        }\n    }\n    /** Clears the maps we use to store parents, level & aria-sets in. */\n    _clearPreviousCache() {\n        this._parents.clear();\n        this._levels.clear();\n        this._ariaSets.clear();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTree, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkTree, isStandalone: true, selector: \"cdk-tree\", inputs: { dataSource: \"dataSource\", treeControl: \"treeControl\", levelAccessor: \"levelAccessor\", childrenAccessor: \"childrenAccessor\", trackBy: \"trackBy\", expansionKey: \"expansionKey\" }, host: { attributes: { \"role\": \"tree\" }, listeners: { \"keydown\": \"_sendKeydownToKeyManager($event)\" }, classAttribute: \"cdk-tree\" }, queries: [{ propertyName: \"_nodeDefs\", predicate: CdkTreeNodeDef, descendants: true }], viewQueries: [{ propertyName: \"_nodeOutlet\", first: true, predicate: CdkTreeNodeOutlet, descendants: true, static: true }], exportAs: [\"cdkTree\"], ngImport: i0, template: `<ng-container cdkTreeNodeOutlet></ng-container>`, isInline: true, dependencies: [{ kind: \"directive\", type: CdkTreeNodeOutlet, selector: \"[cdkTreeNodeOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTree, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-tree',\n                    exportAs: 'cdkTree',\n                    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n                    host: {\n                        'class': 'cdk-tree',\n                        'role': 'tree',\n                        '(keydown)': '_sendKeydownToKeyManager($event)',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    // The \"OnPush\" status for the `CdkTree` component is effectively a noop, so we are removing it.\n                    // The view for `CdkTree` consists entirely of templates declared in other views. As they are\n                    // declared elsewhere, they are checked when their declaration points are checked.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    imports: [CdkTreeNodeOutlet],\n                }]\n        }], ctorParameters: () => [], propDecorators: { dataSource: [{\n                type: Input\n            }], treeControl: [{\n                type: Input\n            }], levelAccessor: [{\n                type: Input\n            }], childrenAccessor: [{\n                type: Input\n            }], trackBy: [{\n                type: Input\n            }], expansionKey: [{\n                type: Input\n            }], _nodeOutlet: [{\n                type: ViewChild,\n                args: [CdkTreeNodeOutlet, { static: true }]\n            }], _nodeDefs: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeDef, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\nclass CdkTreeNode {\n    _elementRef = inject(ElementRef);\n    _tree = inject(CdkTree);\n    _tabindex = -1;\n    _type = 'flat';\n    /**\n     * The role of the tree node.\n     *\n     * @deprecated This will be ignored; the tree will automatically determine the appropriate role\n     * for tree node. This input will be removed in a future version.\n     * @breaking-change 21.0.0\n     */\n    get role() {\n        return 'treeitem';\n    }\n    set role(_role) {\n        // ignore any role setting, we handle this internally.\n    }\n    /**\n     * Whether or not this node is expandable.\n     *\n     * If not using `FlatTreeControl`, or if `isExpandable` is not provided to\n     * `NestedTreeControl`, this should be provided for correct node a11y.\n     */\n    get isExpandable() {\n        return this._isExpandable();\n    }\n    set isExpandable(isExpandable) {\n        this._inputIsExpandable = isExpandable;\n        if ((this.data && !this._isExpandable) || !this._inputIsExpandable) {\n            return;\n        }\n        // If the node is being set to expandable, ensure that the status of the\n        // node is propagated\n        if (this._inputIsExpanded) {\n            this.expand();\n        }\n        else if (this._inputIsExpanded === false) {\n            this.collapse();\n        }\n    }\n    get isExpanded() {\n        return this._tree.isExpanded(this._data);\n    }\n    set isExpanded(isExpanded) {\n        this._inputIsExpanded = isExpanded;\n        if (isExpanded) {\n            this.expand();\n        }\n        else {\n            this.collapse();\n        }\n    }\n    /**\n     * Whether or not this node is disabled. If it's disabled, then the user won't be able to focus\n     * or activate this node.\n     */\n    isDisabled;\n    /**\n     * The text used to locate this item during typeahead. If not specified, the `textContent` will\n     * will be used.\n     */\n    typeaheadLabel;\n    getLabel() {\n        return this.typeaheadLabel || this._elementRef.nativeElement.textContent?.trim() || '';\n    }\n    /** This emits when the node has been programatically activated or activated by keyboard. */\n    activation = new EventEmitter();\n    /** This emits when the node's expansion status has been changed. */\n    expandedChange = new EventEmitter();\n    /**\n     * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n     * in `CdkTree` and set the data to it.\n     */\n    static mostRecentTreeNode = null;\n    /** Subject that emits when the component has been destroyed. */\n    _destroyed = new Subject();\n    /** Emits when the node's data has changed. */\n    _dataChanges = new Subject();\n    _inputIsExpandable = false;\n    _inputIsExpanded = undefined;\n    /**\n     * Flag used to determine whether or not we should be focusing the actual element based on\n     * some user interaction (click or focus). On click, we don't forcibly focus the element\n     * since the click could trigger some other component that wants to grab its own focus\n     * (e.g. menu, dialog).\n     */\n    _shouldFocus = true;\n    _parentNodeAriaLevel;\n    /** The tree node's data. */\n    get data() {\n        return this._data;\n    }\n    set data(value) {\n        if (value !== this._data) {\n            this._data = value;\n            this._dataChanges.next();\n        }\n    }\n    _data;\n    /* If leaf node, return true to not assign aria-expanded attribute */\n    get isLeafNode() {\n        // If flat tree node data returns false for expandable property, it's a leaf node\n        if (this._tree.treeControl?.isExpandable !== undefined &&\n            !this._tree.treeControl.isExpandable(this._data)) {\n            return true;\n            // If nested tree node data returns 0 descendants, it's a leaf node\n        }\n        else if (this._tree.treeControl?.isExpandable === undefined &&\n            this._tree.treeControl?.getDescendants(this._data).length === 0) {\n            return true;\n        }\n        return false;\n    }\n    get level() {\n        // If the tree has a levelAccessor, use it to get the level. Otherwise read the\n        // aria-level off the parent node and use it as the level for this node (note aria-level is\n        // 1-indexed, while this property is 0-indexed, so we don't need to increment).\n        return this._tree._getLevel(this._data) ?? this._parentNodeAriaLevel;\n    }\n    /** Determines if the tree node is expandable. */\n    _isExpandable() {\n        if (this._tree.treeControl) {\n            if (this.isLeafNode) {\n                return false;\n            }\n            // For compatibility with trees created using TreeControl before we added\n            // CdkTreeNode#isExpandable.\n            return true;\n        }\n        return this._inputIsExpandable;\n    }\n    /**\n     * Determines the value for `aria-expanded`.\n     *\n     * For non-expandable nodes, this is `null`.\n     */\n    _getAriaExpanded() {\n        if (!this._isExpandable()) {\n            return null;\n        }\n        return String(this.isExpanded);\n    }\n    /**\n     * Determines the size of this node's parent's child set.\n     *\n     * This is intended to be used for `aria-setsize`.\n     */\n    _getSetSize() {\n        return this._tree._getSetSize(this._data);\n    }\n    /**\n     * Determines the index (starting from 1) of this node in its parent's child set.\n     *\n     * This is intended to be used for `aria-posinset`.\n     */\n    _getPositionInSet() {\n        return this._tree._getPositionInSet(this._data);\n    }\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    constructor() {\n        CdkTreeNode.mostRecentTreeNode = this;\n    }\n    ngOnInit() {\n        this._parentNodeAriaLevel = getParentNodeAriaLevel(this._elementRef.nativeElement);\n        this._tree\n            ._getExpansionModel()\n            .changed.pipe(map(() => this.isExpanded), distinctUntilChanged(), takeUntil(this._destroyed))\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n        this._tree._setNodeTypeIfUnset(this._type);\n        this._tree._registerNode(this);\n    }\n    ngOnDestroy() {\n        // If this is the last tree node being destroyed,\n        // clear out the reference to avoid leaking memory.\n        if (CdkTreeNode.mostRecentTreeNode === this) {\n            CdkTreeNode.mostRecentTreeNode = null;\n        }\n        this._dataChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    getParent() {\n        return this._tree._getNodeParent(this) ?? null;\n    }\n    getChildren() {\n        return this._tree._getNodeChildren(this);\n    }\n    /** Focuses this data node. Implemented for TreeKeyManagerItem. */\n    focus() {\n        this._tabindex = 0;\n        if (this._shouldFocus) {\n            this._elementRef.nativeElement.focus();\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Defocus this data node. */\n    unfocus() {\n        this._tabindex = -1;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an activation event. Implemented for TreeKeyManagerItem. */\n    activate() {\n        if (this.isDisabled) {\n            return;\n        }\n        this.activation.next(this._data);\n    }\n    /** Collapses this data node. Implemented for TreeKeyManagerItem. */\n    collapse() {\n        if (this.isExpandable) {\n            this._tree.collapse(this._data);\n        }\n    }\n    /** Expands this data node. Implemented for TreeKeyManagerItem. */\n    expand() {\n        if (this.isExpandable) {\n            this._tree.expand(this._data);\n        }\n    }\n    /** Makes the node focusable. Implemented for TreeKeyManagerItem. */\n    makeFocusable() {\n        this._tabindex = 0;\n        this._changeDetectorRef.markForCheck();\n    }\n    _focusItem() {\n        if (this.isDisabled) {\n            return;\n        }\n        this._tree._keyManager.focusItem(this);\n    }\n    _setActiveItem() {\n        if (this.isDisabled) {\n            return;\n        }\n        this._shouldFocus = false;\n        this._tree._keyManager.focusItem(this);\n        this._shouldFocus = true;\n    }\n    _emitExpansionState(expanded) {\n        this.expandedChange.emit(expanded);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeNode, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkTreeNode, isStandalone: true, selector: \"cdk-tree-node\", inputs: { role: \"role\", isExpandable: [\"isExpandable\", \"isExpandable\", booleanAttribute], isExpanded: \"isExpanded\", isDisabled: [\"isDisabled\", \"isDisabled\", booleanAttribute], typeaheadLabel: [\"cdkTreeNodeTypeaheadLabel\", \"typeaheadLabel\"] }, outputs: { activation: \"activation\", expandedChange: \"expandedChange\" }, host: { attributes: { \"role\": \"treeitem\" }, listeners: { \"click\": \"_setActiveItem()\", \"focus\": \"_focusItem()\" }, properties: { \"attr.aria-expanded\": \"_getAriaExpanded()\", \"attr.aria-level\": \"level + 1\", \"attr.aria-posinset\": \"_getPositionInSet()\", \"attr.aria-setsize\": \"_getSetSize()\", \"tabindex\": \"_tabindex\" }, classAttribute: \"cdk-tree-node\" }, exportAs: [\"cdkTreeNode\"], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-tree-node',\n                    exportAs: 'cdkTreeNode',\n                    host: {\n                        'class': 'cdk-tree-node',\n                        '[attr.aria-expanded]': '_getAriaExpanded()',\n                        '[attr.aria-level]': 'level + 1',\n                        '[attr.aria-posinset]': '_getPositionInSet()',\n                        '[attr.aria-setsize]': '_getSetSize()',\n                        '[tabindex]': '_tabindex',\n                        'role': 'treeitem',\n                        '(click)': '_setActiveItem()',\n                        '(focus)': '_focusItem()',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { role: [{\n                type: Input\n            }], isExpandable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], isExpanded: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], typeaheadLabel: [{\n                type: Input,\n                args: ['cdkTreeNodeTypeaheadLabel']\n            }], activation: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }] } });\nfunction getParentNodeAriaLevel(nodeElement) {\n    let parent = nodeElement.parentElement;\n    while (parent && !isNodeElement(parent)) {\n        parent = parent.parentElement;\n    }\n    if (!parent) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw Error('Incorrect tree structure containing detached node.');\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (parent.classList.contains('cdk-nested-tree-node')) {\n        return numberAttribute(parent.getAttribute('aria-level'));\n    }\n    else {\n        // The ancestor element is the cdk-tree itself\n        return 0;\n    }\n}\nfunction isNodeElement(element) {\n    const classList = element.classList;\n    return !!(classList?.contains('cdk-nested-tree-node') || classList?.contains('cdk-tree'));\n}\n\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * The children of node will be automatically added to `cdkTreeNodeOutlet`.\n */\nclass CdkNestedTreeNode extends CdkTreeNode {\n    _type = 'nested';\n    _differs = inject(IterableDiffers);\n    /** Differ used to find the changes in the data provided by the data source. */\n    _dataDiffer;\n    /** The children data dataNodes of current node. They will be placed in `CdkTreeNodeOutlet`. */\n    _children;\n    /** The children node placeholder. */\n    nodeOutlet;\n    constructor() {\n        super();\n    }\n    ngAfterContentInit() {\n        this._dataDiffer = this._differs.find([]).create(this._tree.trackBy);\n        this._tree\n            ._getDirectChildren(this.data)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(result => this.updateChildrenNodes(result));\n        this.nodeOutlet.changes\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateChildrenNodes());\n    }\n    ngOnDestroy() {\n        this._clear();\n        super.ngOnDestroy();\n    }\n    /** Add children dataNodes to the NodeOutlet */\n    updateChildrenNodes(children) {\n        const outlet = this._getNodeOutlet();\n        if (children) {\n            this._children = children;\n        }\n        if (outlet && this._children) {\n            const viewContainer = outlet.viewContainer;\n            this._tree.renderNodeChanges(this._children, this._dataDiffer, viewContainer, this._data);\n        }\n        else {\n            // Reset the data differ if there's no children nodes displayed\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Clear the children dataNodes. */\n    _clear() {\n        const outlet = this._getNodeOutlet();\n        if (outlet) {\n            outlet.viewContainer.clear();\n            this._dataDiffer.diff([]);\n        }\n    }\n    /** Gets the outlet for the current node. */\n    _getNodeOutlet() {\n        const outlets = this.nodeOutlet;\n        // Note that since we use `descendants: true` on the query, we have to ensure\n        // that we don't pick up the outlet of a child node by accident.\n        return outlets && outlets.find(outlet => !outlet._node || outlet._node === this);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkNestedTreeNode, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: CdkNestedTreeNode, isStandalone: true, selector: \"cdk-nested-tree-node\", host: { classAttribute: \"cdk-nested-tree-node\" }, providers: [\n            { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n        ], queries: [{ propertyName: \"nodeOutlet\", predicate: CdkTreeNodeOutlet, descendants: true }], exportAs: [\"cdkNestedTreeNode\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkNestedTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-nested-tree-node',\n                    exportAs: 'cdkNestedTreeNode',\n                    providers: [\n                        { provide: CdkTreeNode, useExisting: CdkNestedTreeNode },\n                        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: CdkNestedTreeNode },\n                    ],\n                    host: {\n                        'class': 'cdk-nested-tree-node',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { nodeOutlet: [{\n                type: ContentChildren,\n                args: [CdkTreeNodeOutlet, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\nclass CdkTreeNodePadding {\n    _treeNode = inject(CdkTreeNode);\n    _tree = inject(CdkTree);\n    _element = inject(ElementRef);\n    _dir = inject(Directionality, { optional: true });\n    /** Current padding value applied to the element. Used to avoid unnecessarily hitting the DOM. */\n    _currentPadding;\n    /** Subject that emits when the component has been destroyed. */\n    _destroyed = new Subject();\n    /** CSS units used for the indentation value. */\n    indentUnits = 'px';\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() {\n        return this._level;\n    }\n    set level(value) {\n        this._setLevelInput(value);\n    }\n    _level;\n    /**\n     * The indent for each level. Can be a number or a CSS string.\n     * Default number 40px from material design menu sub-menu spec.\n     */\n    get indent() {\n        return this._indent;\n    }\n    set indent(indent) {\n        this._setIndentInput(indent);\n    }\n    _indent = 40;\n    constructor() {\n        this._setPadding();\n        this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding(true));\n        // In Ivy the indentation binding might be set before the tree node's data has been added,\n        // which means that we'll miss the first render. We have to subscribe to changes in the\n        // data to ensure that everything is up to date.\n        this._treeNode._dataChanges.subscribe(() => this._setPadding());\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n    _paddingIndent() {\n        const nodeLevel = (this._treeNode.data && this._tree._getLevel(this._treeNode.data)) ?? null;\n        const level = this._level == null ? nodeLevel : this._level;\n        return typeof level === 'number' ? `${level * this._indent}${this.indentUnits}` : null;\n    }\n    _setPadding(forceChange = false) {\n        const padding = this._paddingIndent();\n        if (padding !== this._currentPadding || forceChange) {\n            const element = this._element.nativeElement;\n            const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n            const resetProp = paddingProp === 'paddingLeft' ? 'paddingRight' : 'paddingLeft';\n            element.style[paddingProp] = padding || '';\n            element.style[resetProp] = '';\n            this._currentPadding = padding;\n        }\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setLevelInput(value) {\n        // Set to null as the fallback value so that _setPadding can fall back to the node level if the\n        // consumer set the directive as `cdkTreeNodePadding=\"\"`. We still want to take this value if\n        // they set 0 explicitly.\n        this._level = isNaN(value) ? null : value;\n        this._setPadding();\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setIndentInput(indent) {\n        let value = indent;\n        let units = 'px';\n        if (typeof indent === 'string') {\n            const parts = indent.split(cssUnitPattern);\n            value = parts[0];\n            units = parts[1] || units;\n        }\n        this.indentUnits = units;\n        this._indent = numberAttribute(value);\n        this._setPadding();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeNodePadding, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkTreeNodePadding, isStandalone: true, selector: \"[cdkTreeNodePadding]\", inputs: { level: [\"cdkTreeNodePadding\", \"level\", numberAttribute], indent: [\"cdkTreeNodePaddingIndent\", \"indent\"] }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeNodePadding, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodePadding]',\n                }]\n        }], ctorParameters: () => [], propDecorators: { level: [{\n                type: Input,\n                args: [{ alias: 'cdkTreeNodePadding', transform: numberAttribute }]\n            }], indent: [{\n                type: Input,\n                args: ['cdkTreeNodePaddingIndent']\n            }] } });\n\n/**\n * Node toggle to expand and collapse the node.\n */\nclass CdkTreeNodeToggle {\n    _tree = inject(CdkTree);\n    _treeNode = inject(CdkTreeNode);\n    /** Whether expand/collapse the node recursively. */\n    recursive = false;\n    constructor() { }\n    // Toggle the expanded or collapsed state of this node.\n    //\n    // Focus this node with expanding or collapsing it. This ensures that the active node will always\n    // be visible when expanding and collapsing.\n    _toggle() {\n        this.recursive\n            ? this._tree.toggleDescendants(this._treeNode.data)\n            : this._tree.toggle(this._treeNode.data);\n        this._tree._keyManager.focusItem(this._treeNode);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeNodeToggle, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: CdkTreeNodeToggle, isStandalone: true, selector: \"[cdkTreeNodeToggle]\", inputs: { recursive: [\"cdkTreeNodeToggleRecursive\", \"recursive\", booleanAttribute] }, host: { attributes: { \"tabindex\": \"-1\" }, listeners: { \"click\": \"_toggle(); $event.stopPropagation();\", \"keydown.Enter\": \"_toggle(); $event.preventDefault();\", \"keydown.Space\": \"_toggle(); $event.preventDefault();\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeNodeToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTreeNodeToggle]',\n                    host: {\n                        '(click)': '_toggle(); $event.stopPropagation();',\n                        '(keydown.Enter)': '_toggle(); $event.preventDefault();',\n                        '(keydown.Space)': '_toggle(); $event.preventDefault();',\n                        'tabindex': '-1',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { recursive: [{\n                type: Input,\n                args: [{ alias: 'cdkTreeNodeToggleRecursive', transform: booleanAttribute }]\n            }] } });\n\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet,\n];\nclass CdkTreeModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeModule, imports: [CdkNestedTreeNode,\n            CdkTreeNodeDef,\n            CdkTreeNodePadding,\n            CdkTreeNodeToggle,\n            CdkTree,\n            CdkTreeNode,\n            CdkTreeNodeOutlet], exports: [CdkNestedTreeNode,\n            CdkTreeNodeDef,\n            CdkTreeNodePadding,\n            CdkTreeNodeToggle,\n            CdkTree,\n            CdkTreeNode,\n            CdkTreeNodeOutlet] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeModule });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: CdkTreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: EXPORTED_DECLARATIONS,\n                    exports: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\nexport { BaseTreeControl, CDK_TREE_NODE_OUTLET_NODE, CdkNestedTreeNode, CdkTree, CdkTreeModule, CdkTreeNode, CdkTreeNodeDef, CdkTreeNodeOutlet, CdkTreeNodeOutletContext, CdkTreeNodePadding, CdkTreeNodeToggle, FlatTreeControl, NestedTreeControl, getMultipleTreeControlsError, getTreeControlMissingError, getTreeMissingMatchingNodeDefError, getTreeMultipleDefaultNodeDefsError, getTreeNoValidDataSourceError };\n\n","import { CdkTreeNode, CdkTreeNodeDef, CdkNestedTreeNode, CDK_TREE_NODE_OUTLET_NODE, CdkTreeNodePadding, CdkTreeNodeOutlet, CdkTree, CdkTreeNodeToggle, CdkTreeModule } from '@angular/cdk/tree';\nimport * as i0 from '@angular/core';\nimport { inject, HostAttributeToken, numberAttribute, booleanAttribute, Directive, Input, ViewContainerRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/**\n * Determinte if argument TreeKeyManager is the NoopTreeKeyManager. This function is safe to use with SSR.\n */\nfunction isNoopTreeKeyManager(keyManager) {\n    return !!keyManager._isNoopTreeKeyManager;\n}\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\nclass MatTreeNode extends CdkTreeNode {\n    /**\n     * The tabindex of the tree node.\n     *\n     * @deprecated By default MatTreeNode manages focus using TreeKeyManager instead of tabIndex.\n     *   Recommend to avoid setting tabIndex directly to prevent TreeKeyManager form getting into\n     *   an unexpected state. Tabindex to be removed in a future version.\n     * @breaking-change 21.0.0 Remove this attribute.\n     */\n    get tabIndexInputBinding() {\n        return this._tabIndexInputBinding;\n    }\n    set tabIndexInputBinding(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndexInputBinding = value;\n    }\n    _tabIndexInputBinding;\n    /**\n     * The default tabindex of the tree node.\n     *\n     * @deprecated By default MatTreeNode manages focus using TreeKeyManager instead of tabIndex.\n     *   Recommend to avoid setting tabIndex directly to prevent TreeKeyManager form getting into\n     *   an unexpected state. Tabindex to be removed in a future version.\n     * @breaking-change 21.0.0 Remove this attribute.\n     */\n    defaultTabIndex = 0;\n    _getTabindexAttribute() {\n        if (isNoopTreeKeyManager(this._tree._keyManager)) {\n            return this.tabIndexInputBinding;\n        }\n        return this._tabindex;\n    }\n    /**\n     * Whether the component is disabled.\n     *\n     * @deprecated This is an alias for `isDisabled`.\n     * @breaking-change 21.0.0 Remove this input\n     */\n    get disabled() {\n        return this.isDisabled;\n    }\n    set disabled(value) {\n        this.isDisabled = value;\n    }\n    constructor() {\n        super();\n        const tabIndex = inject(new HostAttributeToken('tabindex'), { optional: true });\n        this.tabIndexInputBinding = Number(tabIndex) || this.defaultTabIndex;\n    }\n    // This is a workaround for https://github.com/angular/angular/issues/23091\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeNode, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatTreeNode, isStandalone: true, selector: \"mat-tree-node\", inputs: { tabIndexInputBinding: [\"tabIndex\", \"tabIndexInputBinding\", (value) => (value == null ? 0 : numberAttribute(value))], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { activation: \"activation\", expandedChange: \"expandedChange\" }, host: { listeners: { \"click\": \"_focusItem()\" }, properties: { \"attr.aria-expanded\": \"_getAriaExpanded()\", \"attr.aria-level\": \"level + 1\", \"attr.aria-posinset\": \"_getPositionInSet()\", \"attr.aria-setsize\": \"_getSetSize()\", \"tabindex\": \"_getTabindexAttribute()\" }, classAttribute: \"mat-tree-node\" }, providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }], exportAs: [\"matTreeNode\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-tree-node',\n                    exportAs: 'matTreeNode',\n                    outputs: ['activation', 'expandedChange'],\n                    providers: [{ provide: CdkTreeNode, useExisting: MatTreeNode }],\n                    host: {\n                        'class': 'mat-tree-node',\n                        '[attr.aria-expanded]': '_getAriaExpanded()',\n                        '[attr.aria-level]': 'level + 1',\n                        '[attr.aria-posinset]': '_getPositionInSet()',\n                        '[attr.aria-setsize]': '_getSetSize()',\n                        '(click)': '_focusItem()',\n                        '[tabindex]': '_getTabindexAttribute()',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { tabIndexInputBinding: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                        alias: 'tabIndex',\n                    }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n/**\n * Wrapper for the CdkTree node definition with Material design styles.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\nclass MatTreeNodeDef extends CdkTreeNodeDef {\n    data;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeNodeDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatTreeNodeDef, isStandalone: true, selector: \"[matTreeNodeDef]\", inputs: { when: [\"matTreeNodeDefWhen\", \"when\"], data: [\"matTreeNode\", \"data\"] }, providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeNodeDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeDef]',\n                    inputs: [{ name: 'when', alias: 'matTreeNodeDefWhen' }],\n                    providers: [{ provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef }],\n                }]\n        }], propDecorators: { data: [{\n                type: Input,\n                args: ['matTreeNode']\n            }] } });\n/**\n * Wrapper for the CdkTree nested node with Material design styles.\n */\nclass MatNestedTreeNode extends CdkNestedTreeNode {\n    node;\n    /**\n     * Whether the node is disabled.\n     *\n     * @deprecated This is an alias for `isDisabled`.\n     * @breaking-change 21.0.0 Remove this input\n     */\n    get disabled() {\n        return this.isDisabled;\n    }\n    set disabled(value) {\n        this.isDisabled = value;\n    }\n    /** Tabindex of the node. */\n    get tabIndex() {\n        return this.isDisabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value;\n    }\n    _tabIndex;\n    // This is a workaround for https://github.com/angular/angular/issues/19145\n    // In aot mode, the lifecycle hooks from parent class are not called.\n    // TODO(tinayuangao): Remove when the angular issue #19145 is fixed\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatNestedTreeNode, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatNestedTreeNode, isStandalone: true, selector: \"mat-nested-tree-node\", inputs: { node: [\"matNestedTreeNode\", \"node\"], disabled: [\"disabled\", \"disabled\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, outputs: { activation: \"activation\", expandedChange: \"expandedChange\" }, host: { classAttribute: \"mat-nested-tree-node\" }, providers: [\n            { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n            { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode },\n        ], exportAs: [\"matNestedTreeNode\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatNestedTreeNode, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-nested-tree-node',\n                    exportAs: 'matNestedTreeNode',\n                    outputs: ['activation', 'expandedChange'],\n                    providers: [\n                        { provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode },\n                        { provide: CdkTreeNode, useExisting: MatNestedTreeNode },\n                        { provide: CDK_TREE_NODE_OUTLET_NODE, useExisting: MatNestedTreeNode },\n                    ],\n                    host: {\n                        'class': 'mat-nested-tree-node',\n                    },\n                }]\n        }], propDecorators: { node: [{\n                type: Input,\n                args: ['matNestedTreeNode']\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }] } });\n\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\nclass MatTreeNodePadding extends CdkTreeNodePadding {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    get level() {\n        return this._level;\n    }\n    set level(value) {\n        this._setLevelInput(value);\n    }\n    /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n    get indent() {\n        return this._indent;\n    }\n    set indent(indent) {\n        this._setIndentInput(indent);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeNodePadding, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatTreeNodePadding, isStandalone: true, selector: \"[matTreeNodePadding]\", inputs: { level: [\"matTreeNodePadding\", \"level\", numberAttribute], indent: [\"matTreeNodePaddingIndent\", \"indent\"] }, providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeNodePadding, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodePadding]',\n                    providers: [{ provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding }],\n                }]\n        }], propDecorators: { level: [{\n                type: Input,\n                args: [{ alias: 'matTreeNodePadding', transform: numberAttribute }]\n            }], indent: [{\n                type: Input,\n                args: ['matTreeNodePaddingIndent']\n            }] } });\n\n/**\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\nclass MatTreeNodeOutlet {\n    viewContainer = inject(ViewContainerRef);\n    _node = inject(CDK_TREE_NODE_OUTLET_NODE, { optional: true });\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeNodeOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatTreeNodeOutlet, isStandalone: true, selector: \"[matTreeNodeOutlet]\", providers: [\n            {\n                provide: CdkTreeNodeOutlet,\n                useExisting: MatTreeNodeOutlet,\n            },\n        ], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeNodeOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeOutlet]',\n                    providers: [\n                        {\n                            provide: CdkTreeNodeOutlet,\n                            useExisting: MatTreeNodeOutlet,\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTree extends CdkTree {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    // We need an initializer here to avoid a TS error. The value will be set in `ngAfterViewInit`.\n    _nodeOutlet = undefined;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTree, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatTree, isStandalone: true, selector: \"mat-tree\", host: { classAttribute: \"mat-tree\" }, providers: [{ provide: CdkTree, useExisting: MatTree }], viewQueries: [{ propertyName: \"_nodeOutlet\", first: true, predicate: MatTreeNodeOutlet, descendants: true, static: true }], exportAs: [\"matTree\"], usesInheritance: true, ngImport: i0, template: `<ng-container matTreeNodeOutlet></ng-container>`, isInline: true, styles: [\".mat-tree{display:block;background-color:var(--mat-tree-container-background-color, var(--mat-sys-surface))}.mat-tree-node,.mat-nested-tree-node{color:var(--mat-tree-node-text-color, var(--mat-sys-on-surface));font-family:var(--mat-tree-node-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-tree-node-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-tree-node-text-weight, var(--mat-sys-body-large-weight))}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word;min-height:var(--mat-tree-node-min-height, 48px)}.mat-nested-tree-node{border-bottom-width:0}\\n\"], dependencies: [{ kind: \"directive\", type: MatTreeNodeOutlet, selector: \"[matTreeNodeOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTree, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tree', exportAs: 'matTree', template: `<ng-container matTreeNodeOutlet></ng-container>`, host: {\n                        'class': 'mat-tree',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [{ provide: CdkTree, useExisting: MatTree }], imports: [MatTreeNodeOutlet], styles: [\".mat-tree{display:block;background-color:var(--mat-tree-container-background-color, var(--mat-sys-surface))}.mat-tree-node,.mat-nested-tree-node{color:var(--mat-tree-node-text-color, var(--mat-sys-on-surface));font-family:var(--mat-tree-node-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-tree-node-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-tree-node-text-weight, var(--mat-sys-body-large-weight))}.mat-tree-node{display:flex;align-items:center;flex:1;word-wrap:break-word;min-height:var(--mat-tree-node-min-height, 48px)}.mat-nested-tree-node{border-bottom-width:0}\\n\"] }]\n        }], propDecorators: { _nodeOutlet: [{\n                type: ViewChild,\n                args: [MatTreeNodeOutlet, { static: true }]\n            }] } });\n\n/**\n * Wrapper for the CdkTree's toggle with Material design styles.\n */\nclass MatTreeNodeToggle extends CdkTreeNodeToggle {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeNodeToggle, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatTreeNodeToggle, isStandalone: true, selector: \"[matTreeNodeToggle]\", inputs: { recursive: [\"matTreeNodeToggleRecursive\", \"recursive\"] }, providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeNodeToggle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTreeNodeToggle]',\n                    providers: [{ provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle }],\n                    inputs: [{ name: 'recursive', alias: 'matTreeNodeToggleRecursive' }],\n                }]\n        }] });\n\nconst MAT_TREE_DIRECTIVES = [\n    MatNestedTreeNode,\n    MatTreeNodeDef,\n    MatTreeNodePadding,\n    MatTreeNodeToggle,\n    MatTree,\n    MatTreeNode,\n    MatTreeNodeOutlet,\n];\nclass MatTreeModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeModule, imports: [CdkTreeModule, MatCommonModule, MatNestedTreeNode,\n            MatTreeNodeDef,\n            MatTreeNodePadding,\n            MatTreeNodeToggle,\n            MatTree,\n            MatTreeNode,\n            MatTreeNodeOutlet], exports: [MatCommonModule, MatNestedTreeNode,\n            MatTreeNodeDef,\n            MatTreeNodePadding,\n            MatTreeNodeToggle,\n            MatTree,\n            MatTreeNode,\n            MatTreeNodeOutlet] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeModule, imports: [CdkTreeModule, MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatTreeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTreeModule, MatCommonModule, ...MAT_TREE_DIRECTIVES],\n                    exports: [MatCommonModule, MAT_TREE_DIRECTIVES],\n                }]\n        }] });\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n *\n * @deprecated Use MatTree#childrenAccessor and MatTreeNode#isExpandable\n * instead. To be removed in a future version.\n * @breaking-change 21.0.0\n */\nclass MatTreeFlattener {\n    transformFunction;\n    getLevel;\n    isExpandable;\n    getChildren;\n    constructor(transformFunction, getLevel, isExpandable, getChildren) {\n        this.transformFunction = transformFunction;\n        this.getLevel = getLevel;\n        this.isExpandable = isExpandable;\n        this.getChildren = getChildren;\n    }\n    _flattenNode(node, level, resultNodes, parentMap) {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\n                }\n                else {\n                    childrenNodes.pipe(take(1)).subscribe(children => {\n                        this._flattenChildren(children, level, resultNodes, parentMap);\n                    });\n                }\n            }\n        }\n        return resultNodes;\n    }\n    _flattenChildren(children, level, resultNodes, parentMap) {\n        children.forEach((child, index) => {\n            let childParentMap = parentMap.slice();\n            childParentMap.push(index != children.length - 1);\n            this._flattenNode(child, level + 1, resultNodes, childParentMap);\n        });\n    }\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData) {\n        let resultNodes = [];\n        structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\n        return resultNodes;\n    }\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes, treeControl) {\n        let results = [];\n        let currentExpand = [];\n        currentExpand[0] = true;\n        nodes.forEach(node => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n            if (expand) {\n                results.push(node);\n            }\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n        return results;\n    }\n}\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `MatTree`.\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\n * to type `F` for `MatTree` to consume.\n *\n * @deprecated Use one of levelAccessor or childrenAccessor instead. To be removed in a future\n * version.\n * @breaking-change 21.0.0\n */\nclass MatTreeFlatDataSource extends DataSource {\n    _treeControl;\n    _treeFlattener;\n    _flattenedData = new BehaviorSubject([]);\n    _expandedData = new BehaviorSubject([]);\n    get data() {\n        return this._data.value;\n    }\n    set data(value) {\n        this._data.next(value);\n        this._flattenedData.next(this._treeFlattener.flattenNodes(this.data));\n        this._treeControl.dataNodes = this._flattenedData.value;\n    }\n    _data = new BehaviorSubject([]);\n    constructor(_treeControl, _treeFlattener, initialData) {\n        super();\n        this._treeControl = _treeControl;\n        this._treeFlattener = _treeFlattener;\n        if (initialData) {\n            // Assign the data through the constructor to ensure that all of the logic is executed.\n            this.data = initialData;\n        }\n    }\n    connect(collectionViewer) {\n        return merge(collectionViewer.viewChange, this._treeControl.expansionModel.changed, this._flattenedData).pipe(map(() => {\n            this._expandedData.next(this._treeFlattener.expandFlattenedNodes(this._flattenedData.value, this._treeControl));\n            return this._expandedData.value;\n        }));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nclass MatTreeNestedDataSource extends DataSource {\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n    set data(value) {\n        this._data.next(value);\n    }\n    _data = new BehaviorSubject([]);\n    connect(collectionViewer) {\n        return merge(...[collectionViewer.viewChange, this._data]).pipe(map(() => this.data));\n    }\n    disconnect() {\n        // no op\n    }\n}\n\nexport { MatNestedTreeNode, MatTree, MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule, MatTreeNestedDataSource, MatTreeNode, MatTreeNodeDef, MatTreeNodeOutlet, MatTreeNodePadding, MatTreeNodeToggle };\n\n","import { FocusMonitor, _IdGenerator, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, booleanAttribute, numberAttribute, Directive, Input, ChangeDetectorRef, HOST_TAG_NAME, NgZone, DOCUMENT, EventEmitter, Injector, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, Output, ContentChild, ViewChild, afterNextRender, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Subject, merge } from 'rxjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { a as MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple-BYgV4oZC.mjs';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { M as MatRippleLoader } from './ripple-loader-BnMiRtmT.mjs';\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR, NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { E as ErrorStateMatcher } from './error-options-DCNQlTOA.mjs';\nimport { _ as _ErrorStateTracker } from './error-state-Dtb1IHM-.mjs';\nimport { k as MatFormFieldControl, h as MAT_FORM_FIELD } from './form-field-CFbrnFED.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport { M as MatRippleModule } from './index-BFRo2fUq.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\nimport '@angular/common';\nimport '@angular/cdk/observers/private';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options', {\n    providedIn: 'root',\n    factory: () => ({\n        separatorKeyCodes: [ENTER],\n    }),\n});\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipEdit`. It serves as\n * alternative token to the actual `MatChipEdit` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_EDIT = new InjectionToken('MatChipEdit');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction {\n    _elementRef = inject(ElementRef);\n    _parentChip = inject(MAT_CHIP);\n    /** Whether the action is interactive. */\n    isInteractive = true;\n    /** Whether this is the primary action in the chip. */\n    _isPrimary = true;\n    /** Whether this is the leading action in the chip. */\n    _isLeading = false; // TODO(adolgachev): consolidate usage to secondary css class\n    /** Whether the action is disabled. */\n    get disabled() {\n        return this._disabled || this._parentChip?.disabled || false;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Tab index of the action. */\n    tabIndex = -1;\n    /**\n     * Private API to allow focusing this chip when it is disabled.\n     */\n    _allowFocusWhenDisabled = false;\n    /**\n     * Determine the value of the disabled attribute for this chip action.\n     */\n    _getDisabledAttribute() {\n        // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n        // string to indicate that disabled attribute should be included.\n        return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n    }\n    /**\n     * Determine the value of the tabindex attribute for this chip action.\n     */\n    _getTabindex() {\n        return (this.disabled && !this._allowFocusWhenDisabled) || !this.isInteractive\n            ? null\n            : this.tabIndex.toString();\n    }\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        if (this._elementRef.nativeElement.nodeName === 'BUTTON') {\n            this._elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    _handleClick(event) {\n        if (!this.disabled && this.isInteractive && this._isPrimary) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n            !this.disabled &&\n            this.isInteractive &&\n            this._isPrimary &&\n            !this._parentChip._isEditing) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAction, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipAction, isStandalone: true, selector: \"[matChipAction]\", inputs: { isInteractive: \"isInteractive\", disabled: [\"disabled\", \"disabled\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? -1 : numberAttribute(value))], _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip__action--primary\": \"_isPrimary\", \"class.mdc-evolution-chip__action--presentational\": \"!isInteractive\", \"class.mdc-evolution-chip__action--secondary\": \"!_isPrimary\", \"class.mdc-evolution-chip__action--trailing\": \"!_isPrimary && !_isLeading\", \"attr.tabindex\": \"_getTabindex()\", \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"disabled\" }, classAttribute: \"mdc-evolution-chip__action mat-mdc-chip-action\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipAction]',\n                    host: {\n                        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n                        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n                        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n                        '[class.mdc-evolution-chip__action--secondary]': '!_isPrimary',\n                        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary && !_isLeading',\n                        '[attr.tabindex]': '_getTabindex()',\n                        '[attr.disabled]': '_getDisabledAttribute()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '(click)': '_handleClick($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { isInteractive: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? -1 : numberAttribute(value)),\n                    }]\n            }], _allowFocusWhenDisabled: [{\n                type: Input\n            }] } });\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipAvatar, isStandalone: true, selector: \"mat-chip-avatar, [matChipAvatar]\", host: { attributes: { \"role\": \"img\" }, classAttribute: \"mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-avatar, [matChipAvatar]',\n                    host: {\n                        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n                        'role': 'img',\n                    },\n                    providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }],\n                }]\n        }] });\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n    /**\n     * MDC considers all trailing actions as a remove icon,\n     * but we support non-interactive trailing icons.\n     */\n    isInteractive = false;\n    _isPrimary = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipTrailingIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipTrailingIcon, isStandalone: true, selector: \"mat-chip-trailing-icon, [matChipTrailingIcon]\", host: { attributes: { \"aria-hidden\": \"true\" }, classAttribute: \"mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipTrailingIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                    host: {\n                        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'aria-hidden': 'true',\n                    },\n                    providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }],\n                }]\n        }] });\n/**\n * Directive to edit the parent chip when the leading action icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"edit\" icon\n * available at https://material.io/icons/#ic_edit.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <button matChipEdit aria-label=\"Edit\">\n *     <mat-icon>edit</mat-icon>\n *   </button>\n * </mat-chip>\n * ```\n */\nclass MatChipEdit extends MatChipAction {\n    _isPrimary = false;\n    _isLeading = true;\n    _handleClick(event) {\n        if (!this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip._edit();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip._edit();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipEdit, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipEdit, isStandalone: true, selector: \"[matChipEdit]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-edit mat-mdc-chip-avatar mat-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_EDIT, useExisting: MatChipEdit }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipEdit, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipEdit]',\n                    host: {\n                        'class': 'mat-mdc-chip-edit mat-mdc-chip-avatar mat-focus-indicator ' +\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n                        'role': 'button',\n                        '[attr.aria-hidden]': 'null',\n                    },\n                    providers: [{ provide: MAT_CHIP_EDIT, useExisting: MatChipEdit }],\n                }]\n        }] });\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n    _isPrimary = false;\n    _handleClick(event) {\n        if (!this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRemove, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipRemove, isStandalone: true, selector: \"[matChipRemove]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRemove, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipRemove]',\n                    host: {\n                        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator ' +\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'role': 'button',\n                        '[attr.aria-hidden]': 'null',\n                    },\n                    providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }],\n                }]\n        }] });\n\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip {\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _tagName = inject(HOST_TAG_NAME);\n    _ngZone = inject(NgZone);\n    _focusMonitor = inject(FocusMonitor);\n    _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n        optional: true,\n    });\n    _document = inject(DOCUMENT);\n    /** Emits when the chip is focused. */\n    _onFocus = new Subject();\n    /** Emits when the chip is blurred. */\n    _onBlur = new Subject();\n    /** Whether this chip is a basic (unstyled) chip. */\n    _isBasicChip;\n    /** Role for the root of the chip. */\n    role = null;\n    /** Whether the chip has focus. */\n    _hasFocusInternal = false;\n    /** Whether moving focus into the chip is pending. */\n    _pendingFocus;\n    /** Subscription to changes in the chip's actions. */\n    _actionChanges;\n    /** Whether animations for the chip are enabled. */\n    _animationsDisabled = _animationsDisabled();\n    /** All avatars present in the chip. */\n    _allLeadingIcons;\n    /** All trailing icons present in the chip. */\n    _allTrailingIcons;\n    /** All edit icons present in the chip. */\n    _allEditIcons;\n    /** All remove icons present in the chip. */\n    _allRemoveIcons;\n    _hasFocus() {\n        return this._hasFocusInternal;\n    }\n    /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n    id = inject(_IdGenerator).getId('mat-mdc-chip-');\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA label for the content of the chip. */\n    ariaLabel = null;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA description for the content of the chip. */\n    ariaDescription = null;\n    /** Id of a span that contains this chip's aria description. */\n    _ariaDescriptionId = `${this.id}-aria-description`;\n    /** Whether the chip list is disabled. */\n    _chipListDisabled = false;\n    _textElement;\n    /**\n     * The value of the chip. Defaults to the content inside\n     * the `mat-mdc-chip-action-label` element.\n     */\n    get value() {\n        return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n    }\n    set value(value) {\n        this._value = value;\n    }\n    _value;\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the chip. This API is supported in M2 themes only, it has no\n     * effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/chips/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    removable = true;\n    /**\n     * Colors the chip for emphasis as if it were selected.\n     */\n    highlighted = false;\n    /** Whether the ripple effect is disabled or not. */\n    disableRipple = false;\n    /** Whether the chip is disabled. */\n    get disabled() {\n        return this._disabled || this._chipListDisabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Emitted when a chip is to be removed. */\n    removed = new EventEmitter();\n    /** Emitted when the chip is destroyed. */\n    destroyed = new EventEmitter();\n    /** The unstyled chip selector for this component. */\n    basicChipAttrName = 'mat-basic-chip';\n    /** The chip's leading icon. */\n    leadingIcon;\n    /** The chip's leading edit icon. */\n    editIcon;\n    /** The chip's trailing icon. */\n    trailingIcon;\n    /** The chip's trailing remove icon. */\n    removeIcon;\n    /** Action receiving the primary set of user interactions. */\n    primaryAction;\n    /**\n     * Handles the lazy creation of the MatChip ripple.\n     * Used to improve initial load time of large applications.\n     */\n    _rippleLoader = inject(MatRippleLoader);\n    _injector = inject(Injector);\n    constructor() {\n        const styleLoader = inject(_CdkPrivateStyleLoader);\n        styleLoader.load(_StructuralStylesLoader);\n        styleLoader.load(_VisuallyHiddenLoader);\n        this._monitorFocus();\n        this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n            className: 'mat-mdc-chip-ripple',\n            disabled: this._isRippleDisabled(),\n        });\n    }\n    ngOnInit() {\n        // This check needs to happen in `ngOnInit` so the overridden value of\n        // `basicChipAttrName` coming from base classes can be picked up.\n        this._isBasicChip =\n            this._elementRef.nativeElement.hasAttribute(this.basicChipAttrName) ||\n                this._tagName.toLowerCase() === this.basicChipAttrName;\n    }\n    ngAfterViewInit() {\n        this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n        if (this._pendingFocus) {\n            this._pendingFocus = false;\n            this.focus();\n        }\n    }\n    ngAfterContentInit() {\n        // Since the styling depends on the presence of some\n        // actions, we have to mark for check on changes.\n        this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allEditIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    ngDoCheck() {\n        this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n        this._actionChanges?.unsubscribe();\n        this.destroyed.emit({ chip: this });\n        this.destroyed.complete();\n    }\n    /**\n     * Allows for programmatic removal of the chip.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Whether or not the ripple should be disabled. */\n    _isRippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._animationsDisabled ||\n            this._isBasicChip ||\n            !!this._globalRippleOptions?.disabled);\n    }\n    /** Returns whether the chip has a trailing icon. */\n    _hasTrailingIcon() {\n        return !!(this.trailingIcon || this.removeIcon);\n    }\n    /** Handles keyboard events on the chip. */\n    _handleKeydown(event) {\n        // Ignore backspace events where the user is holding down the key\n        // so that we don't accidentally remove too many chips.\n        if ((event.keyCode === BACKSPACE && !event.repeat) || event.keyCode === DELETE) {\n            event.preventDefault();\n            this.remove();\n        }\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this.disabled) {\n            // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n            // This can happen if the consumer tries to focus a chip immediately after it is added.\n            // Queue the method to be called again on init.\n            if (this.primaryAction) {\n                this.primaryAction.focus();\n            }\n            else {\n                this._pendingFocus = true;\n            }\n        }\n    }\n    /** Gets the action that contains a specific target node. */\n    _getSourceAction(target) {\n        return this._getActions().find(action => {\n            const element = action._elementRef.nativeElement;\n            return element === target || element.contains(target);\n        });\n    }\n    /** Gets all of the actions within the chip. */\n    _getActions() {\n        const result = [];\n        if (this.editIcon) {\n            result.push(this.editIcon);\n        }\n        if (this.primaryAction) {\n            result.push(this.primaryAction);\n        }\n        if (this.removeIcon) {\n            result.push(this.removeIcon);\n        }\n        if (this.trailingIcon) {\n            result.push(this.trailingIcon);\n        }\n        return result;\n    }\n    /** Handles interactions with the primary action of the chip. */\n    _handlePrimaryActionInteraction() {\n        // Empty here, but is overwritten in child classes.\n    }\n    /** Handles interactions with the edit action of the chip. */\n    _edit(event) {\n        // Empty here, but is overwritten in child classes.\n    }\n    /** Starts the focus monitoring process on the chip. */\n    _monitorFocus() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const hasFocus = origin !== null;\n            if (hasFocus !== this._hasFocusInternal) {\n                this._hasFocusInternal = hasFocus;\n                if (hasFocus) {\n                    this._onFocus.next({ chip: this });\n                }\n                else {\n                    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n                    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n                    // that moves focus to the next item. To work around the issue, we defer marking the chip\n                    // as not focused until after the next render.\n                    this._changeDetectorRef.markForCheck();\n                    setTimeout(() => this._ngZone.run(() => this._onBlur.next({ chip: this })));\n                }\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChip, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatChip, isStandalone: true, selector: \"mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]\", inputs: { role: \"role\", id: \"id\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaDescription: [\"aria-description\", \"ariaDescription\"], value: \"value\", color: \"color\", removable: [\"removable\", \"removable\", booleanAttribute], highlighted: [\"highlighted\", \"highlighted\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { removed: \"removed\", destroyed: \"destroyed\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class\": \"\\\"mat-\\\" + (color || \\\"primary\\\")\", \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-basic-chip\": \"_isBasicChip\", \"class.mat-mdc-standard-chip\": \"!_isBasicChip\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"id\": \"id\", \"attr.role\": \"role\", \"attr.aria-label\": \"ariaLabel\" }, classAttribute: \"mat-mdc-chip\" }, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], queries: [{ propertyName: \"leadingIcon\", first: true, predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"editIcon\", first: true, predicate: MAT_CHIP_EDIT, descendants: true }, { propertyName: \"trailingIcon\", first: true, predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"removeIcon\", first: true, predicate: MAT_CHIP_REMOVE, descendants: true }, { propertyName: \"_allLeadingIcons\", predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"_allTrailingIcons\", predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"_allEditIcons\", predicate: MAT_CHIP_EDIT, descendants: true }, { propertyName: \"_allRemoveIcons\", predicate: MAT_CHIP_REMOVE, descendants: true }], viewQueries: [{ propertyName: \"primaryAction\", first: true, predicate: MatChipAction, descendants: true }], exportAs: [\"matChip\"], ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChip, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]', exportAs: 'matChip', host: {\n                        'class': 'mat-mdc-chip',\n                        '[class]': '\"mat-\" + (color || \"primary\")',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n                        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[id]': 'id',\n                        '[attr.role]': 'role',\n                        '[attr.aria-label]': 'ariaLabel',\n                        '(keydown)': '_handleKeydown($event)',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { role: [{\n                type: Input\n            }], _allLeadingIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_AVATAR, { descendants: true }]\n            }], _allTrailingIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_TRAILING_ICON, { descendants: true }]\n            }], _allEditIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_EDIT, { descendants: true }]\n            }], _allRemoveIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_REMOVE, { descendants: true }]\n            }], id: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaDescription: [{\n                type: Input,\n                args: ['aria-description']\n            }], value: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], removable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], highlighted: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], removed: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], leadingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_AVATAR]\n            }], editIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_EDIT]\n            }], trailingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_TRAILING_ICON]\n            }], removeIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_REMOVE]\n            }], primaryAction: [{\n                type: ViewChild,\n                args: [MatChipAction]\n            }] } });\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n    source;\n    selected;\n    isUserInput;\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n    /** Default chip options. */\n    _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\n    /** Whether the chip list is selectable. */\n    chipListSelectable = true;\n    /** Whether the chip list is in multi-selection mode. */\n    _chipListMultiple = false;\n    /** Whether the chip list hides single-selection indicator. */\n    _chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /**\n     * Whether or not the chip is selectable.\n     *\n     * When a chip is not selectable, changes to its selected state are always\n     * ignored. By default an option chip is selectable, and it becomes\n     * non-selectable if its parent chip list is not selectable.\n     */\n    get selectable() {\n        return this._selectable && this.chipListSelectable;\n    }\n    set selectable(value) {\n        this._selectable = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    _selectable = true;\n    /** Whether the chip is selected. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        this._setSelectedState(value, false, true);\n    }\n    _selected = false;\n    /**\n     * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n     * interaction patterns.\n     *\n     * From [WAI ARIA Listbox authoring practices guide](\n     * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n     *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n     *  set to true. All options that are selectable but not selected have either aria-selected or\n     *  aria-checked set to false.\"\n     *\n     * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n     * VoiceOver reading every option as \"selected\" (#25736).\n     */\n    get ariaSelected() {\n        return this.selectable ? this.selected.toString() : null;\n    }\n    /** The unstyled chip selector for this component. */\n    basicChipAttrName = 'mat-basic-chip-option';\n    /** Emitted when the chip is selected or deselected. */\n    selectionChange = new EventEmitter();\n    ngOnInit() {\n        super.ngOnInit();\n        this.role = 'presentation';\n    }\n    /** Selects the chip. */\n    select() {\n        this._setSelectedState(true, false, true);\n    }\n    /** Deselects the chip. */\n    deselect() {\n        this._setSelectedState(false, false, true);\n    }\n    /** Selects this chip and emits userInputSelection event */\n    selectViaInteraction() {\n        this._setSelectedState(true, true, true);\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._setSelectedState(!this.selected, isUserInput, true);\n        return this.selected;\n    }\n    _handlePrimaryActionInteraction() {\n        if (!this.disabled) {\n            // Interacting with the primary action implies that the chip already has focus, however\n            // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n            // We work around it by explicitly focusing the primary action of the current chip.\n            this.focus();\n            if (this.selectable) {\n                this.toggleSelected(true);\n            }\n        }\n    }\n    _hasLeadingGraphic() {\n        if (this.leadingIcon) {\n            return true;\n        }\n        // The checkmark graphic communicates selected state for both single-select and multi-select.\n        // Include checkmark in single-select to fix a11y issue where selected state is communicated\n        // visually only using color (#25886).\n        return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n    }\n    _setSelectedState(isSelected, isUserInput, emitEvent) {\n        if (isSelected !== this.selected) {\n            this._selected = isSelected;\n            if (emitEvent) {\n                this.selectionChange.emit({\n                    source: this,\n                    isUserInput,\n                    selected: this.selected,\n                });\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipOption, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatChipOption, isStandalone: true, selector: \"mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]\", inputs: { selectable: [\"selectable\", \"selectable\", booleanAttribute], selected: [\"selected\", \"selected\", booleanAttribute] }, outputs: { selectionChange: \"selectionChange\" }, host: { properties: { \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--filter\": \"!_isBasicChip\", \"class.mdc-evolution-chip--selectable\": \"!_isBasicChip\", \"class.mat-mdc-chip-selected\": \"selected\", \"class.mat-mdc-chip-multiple\": \"_chipListMultiple\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--selected\": \"selected\", \"class.mdc-evolution-chip--selecting\": \"!_animationsDisabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-graphic\": \"_hasLeadingGraphic()\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\", \"id\": \"id\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-option\" }, providers: [\n            { provide: MatChip, useExisting: MatChipOption },\n            { provide: MAT_CHIP, useExisting: MatChipOption },\n        ], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]', host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-option',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-selected]': 'selected',\n                        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--selected]': 'selected',\n                        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n                        // starts and removes it once the animation is finished. We don't need to go through all\n                        // the trouble, because we only care about the selection animation. MDC needs to do it,\n                        // because they also have an exit animation that we don't care about.\n                        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '[id]': 'id',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipOption },\n                        { provide: MAT_CHIP, useExisting: MatChipOption },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], propDecorators: { selectable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selected: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectionChange: [{\n                type: Output\n            }] } });\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n    _elementRef = inject(ElementRef);\n    _document = inject(DOCUMENT);\n    constructor() { }\n    initialize(initialValue) {\n        this.getNativeElement().focus();\n        this.setValue(initialValue);\n    }\n    getNativeElement() {\n        return this._elementRef.nativeElement;\n    }\n    setValue(value) {\n        this.getNativeElement().textContent = value;\n        this._moveCursorToEndOfInput();\n    }\n    getValue() {\n        return this.getNativeElement().textContent || '';\n    }\n    _moveCursorToEndOfInput() {\n        const range = this._document.createRange();\n        range.selectNodeContents(this.getNativeElement());\n        range.collapse(false);\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipEditInput, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.0.0\", type: MatChipEditInput, isStandalone: true, selector: \"span[matChipEditInput]\", host: { attributes: { \"role\": \"textbox\", \"tabindex\": \"-1\", \"contenteditable\": \"true\" }, classAttribute: \"mat-chip-edit-input\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipEditInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'span[matChipEditInput]',\n                    host: {\n                        'class': 'mat-chip-edit-input',\n                        'role': 'textbox',\n                        'tabindex': '-1',\n                        'contenteditable': 'true',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n    basicChipAttrName = 'mat-basic-chip-row';\n    /**\n     * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n     * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n     * while the editing action is being initialized.\n     */\n    _editStartPending = false;\n    editable = false;\n    /** Emitted when the chip is edited. */\n    edited = new EventEmitter();\n    /** The default chip edit input that is used if none is projected into this chip row. */\n    defaultEditInput;\n    /** The projected chip edit input. */\n    contentEditInput;\n    /**\n     * Set on a mousedown when the chip is already focused via mouse or keyboard.\n     *\n     * This allows us to ensure chip is already focused when deciding whether to enter the\n     * edit mode on a subsequent click. Otherwise, the chip appears focused when handling the\n     * first click event.\n     */\n    _alreadyFocused = false;\n    _isEditing = false;\n    constructor() {\n        super();\n        this.role = 'row';\n        this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n            if (this._isEditing && !this._editStartPending) {\n                this._onEditFinish();\n            }\n            this._alreadyFocused = false;\n        });\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        // Sets _alreadyFocused (ahead of click) when chip already has focus.\n        this._ngZone.runOutsideAngular(() => {\n            this._elementRef.nativeElement.addEventListener('mousedown', () => (this._alreadyFocused = this._hasFocus()));\n        });\n    }\n    _hasLeadingActionIcon() {\n        // The leading action (edit) icon is hidden while editing.\n        return !this._isEditing && !!this.editIcon;\n    }\n    _hasTrailingIcon() {\n        // The trailing icon is hidden while editing.\n        return !this._isEditing && super._hasTrailingIcon();\n    }\n    /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n    _handleFocus() {\n        if (!this._isEditing && !this.disabled) {\n            this.focus();\n        }\n    }\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER && !this.disabled) {\n            if (this._isEditing) {\n                event.preventDefault();\n                this._onEditFinish();\n            }\n            else if (this.editable) {\n                this._startEditing(event);\n            }\n        }\n        else if (this._isEditing) {\n            // Stop the event from reaching the chip set in order to avoid navigating.\n            event.stopPropagation();\n        }\n        else {\n            super._handleKeydown(event);\n        }\n    }\n    _handleClick(event) {\n        if (!this.disabled && this.editable && !this._isEditing && this._alreadyFocused) {\n            // Ensure click event not picked up unintentionally by other listeners, as\n            // once editing starts, the source element is detached from DOM.\n            event.preventDefault();\n            event.stopPropagation();\n            this._startEditing(event);\n        }\n    }\n    _handleDoubleclick(event) {\n        if (!this.disabled && this.editable) {\n            this._startEditing(event);\n        }\n    }\n    _edit() {\n        // markForCheck necessary for edit input to be rendered\n        this._changeDetectorRef.markForCheck();\n        this._startEditing();\n    }\n    _startEditing(event) {\n        if (!this.primaryAction ||\n            (this.removeIcon &&\n                !!event &&\n                this._getSourceAction(event.target) === this.removeIcon)) {\n            return;\n        }\n        // The value depends on the DOM so we need to extract it before we flip the flag.\n        const value = this.value;\n        this._isEditing = this._editStartPending = true;\n        // Defer initializing the input until after it has been added to the DOM.\n        afterNextRender(() => {\n            this._getEditInput().initialize(value);\n            // Necessary when using edit icon to prevent edit from aborting\n            setTimeout(() => this._ngZone.run(() => (this._editStartPending = false)));\n        }, { injector: this._injector });\n    }\n    _onEditFinish() {\n        this._isEditing = this._editStartPending = false;\n        this.edited.emit({ chip: this, value: this._getEditInput().getValue() });\n        // If the edit input is still focused or focus was returned to the body after it was destroyed,\n        // return focus to the chip contents.\n        if (this._document.activeElement === this._getEditInput().getNativeElement() ||\n            this._document.activeElement === this._document.body) {\n            this.primaryAction.focus();\n        }\n    }\n    _isRippleDisabled() {\n        return super._isRippleDisabled() || this._isEditing;\n    }\n    /**\n     * Gets the projected chip edit input, or the default input if none is projected in. One of these\n     * two values is guaranteed to be defined.\n     */\n    _getEditInput() {\n        return this.contentEditInput || this.defaultEditInput;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatChipRow, isStandalone: true, selector: \"mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]\", inputs: { editable: \"editable\" }, outputs: { edited: \"edited\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"click\": \"_handleClick($event)\", \"dblclick\": \"_handleDoubleclick($event)\" }, properties: { \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-editing\": \"_isEditing\", \"class.mat-mdc-chip-editable\": \"editable\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-leading-action\": \"_hasLeadingActionIcon()\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"id\": \"id\", \"attr.tabindex\": \"disabled ? null : -1\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip\" }, providers: [\n            { provide: MatChip, useExisting: MatChipRow },\n            { provide: MAT_CHIP, useExisting: MatChipRow },\n        ], queries: [{ propertyName: \"contentEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], viewQueries: [{ propertyName: \"defaultEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], usesInheritance: true, ngImport: i0, template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n@if (_hasLeadingActionIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--leading\\\" role=\\\"gridcell\\\">\\n    <ng-content select=\\\"[matChipEdit]\\\"></ng-content>\\n  </span>\\n}\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }, { kind: \"directive\", type: MatChipEditInput, selector: \"span[matChipEditInput]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipRow, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]', host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-editing]': '_isEditing',\n                        '[class.mat-mdc-chip-editable]': 'editable',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-leading-action]': '_hasLeadingActionIcon()',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[id]': 'id',\n                        // Has to have a negative tabindex in order to capture\n                        // focus and redirect it to the primary action.\n                        '[attr.tabindex]': 'disabled ? null : -1',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '(focus)': '_handleFocus()',\n                        '(click)': '_handleClick($event)',\n                        '(dblclick)': '_handleDoubleclick($event)',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipRow },\n                        { provide: MAT_CHIP, useExisting: MatChipRow },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatChipAction, MatChipEditInput], template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n@if (_hasLeadingActionIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--leading\\\" role=\\\"gridcell\\\">\\n    <ng-content select=\\\"[matChipEdit]\\\"></ng-content>\\n  </span>\\n}\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-describedby]=\\\"_ariaDescriptionId\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\\n<span class=\\\"cdk-visually-hidden\\\" [id]=\\\"_ariaDescriptionId\\\">{{ariaDescription}}</span>\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { editable: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }], defaultEditInput: [{\n                type: ViewChild,\n                args: [MatChipEditInput]\n            }], contentEditInput: [{\n                type: ContentChild,\n                args: [MatChipEditInput]\n            }] } });\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _dir = inject(Directionality, { optional: true });\n    /** Index of the last destroyed chip that had focus. */\n    _lastDestroyedFocusedChipIndex = null;\n    /** Used to manage focus within the chip list. */\n    _keyManager;\n    /** Subject that emits when the component has been destroyed. */\n    _destroyed = new Subject();\n    /** Role to use if it hasn't been overwritten by the user. */\n    _defaultRole = 'presentation';\n    /** Combined stream of all of the child chips' focus events. */\n    get chipFocusChanges() {\n        return this._getChipStream(chip => chip._onFocus);\n    }\n    /** Combined stream of all of the child chips' destroy events. */\n    get chipDestroyedChanges() {\n        return this._getChipStream(chip => chip.destroyed);\n    }\n    /** Combined stream of all of the child chips' remove events. */\n    get chipRemovedChanges() {\n        return this._getChipStream(chip => chip.removed);\n    }\n    /** Whether the chip set is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._syncChipsState();\n    }\n    _disabled = false;\n    /** Whether the chip list contains chips or not. */\n    get empty() {\n        return !this._chips || this._chips.length === 0;\n    }\n    /** The ARIA role applied to the chip set. */\n    get role() {\n        if (this._explicitRole) {\n            return this._explicitRole;\n        }\n        return this.empty ? null : this._defaultRole;\n    }\n    /** Tabindex of the chip set. */\n    tabIndex = 0;\n    set role(value) {\n        this._explicitRole = value;\n    }\n    _explicitRole = null;\n    /** Whether any of the chips inside of this chip-set has focus. */\n    get focused() {\n        return this._hasFocusedChip();\n    }\n    /** The chips that are part of this chip set. */\n    _chips;\n    /** Flat list of all the actions contained within the chips. */\n    _chipActions = new QueryList();\n    constructor() { }\n    ngAfterViewInit() {\n        this._setUpFocusManagement();\n        this._trackChipSetChanges();\n        this._trackDestroyedFocusedChip();\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._chipActions.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this._chips && this._chips.some(chip => chip._hasFocus());\n    }\n    /** Syncs the chip-set's state with the individual chips. */\n    _syncChipsState() {\n        this._chips?.forEach(chip => {\n            chip._chipListDisabled = this._disabled;\n            chip._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n    focus() { }\n    /** Handles keyboard events on the chip set. */\n    _handleKeydown(event) {\n        if (this._originatesFromChip(event)) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this._chips.length;\n    }\n    /**\n     * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the set from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        const previous = this._elementRef.nativeElement.tabIndex;\n        if (previous !== -1) {\n            // Set the tabindex directly on the element, instead of going through\n            // the data binding, because we aren't guaranteed that change detection\n            // will run quickly enough to allow focus to escape.\n            this._elementRef.nativeElement.tabIndex = -1;\n            // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n            // doesn't allow enough time for the focus to escape.\n            setTimeout(() => (this._elementRef.nativeElement.tabIndex = previous));\n        }\n    }\n    /**\n     * Gets a stream of events from all the chips within the set.\n     * The stream will automatically incorporate any newly-added chips.\n     */\n    _getChipStream(mappingFunction) {\n        return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-mdc-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Sets up the chip set's focus management logic. */\n    _setUpFocusManagement() {\n        // Create a flat `QueryList` containing the actions of all of the chips.\n        // This allows us to navigate both within the chip and move to the next/previous\n        // one using the existing `ListKeyManager`.\n        this._chips.changes.pipe(startWith(this._chips)).subscribe((chips) => {\n            const actions = [];\n            chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n            this._chipActions.reset(actions);\n            this._chipActions.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._chipActions)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr')\n            .withHomeAndEnd()\n            .skipPredicate(action => this._skipPredicate(action));\n        // Keep the manager active index in sync so that navigation picks\n        // up from the current chip if the user clicks into the list directly.\n        this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({ chip }) => {\n            const action = chip._getSourceAction(document.activeElement);\n            if (action) {\n                this._keyManager.updateActiveItem(action);\n            }\n        });\n        this._dir?.change\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive and disabled actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n        // chips.\n        return !action.isInteractive || action.disabled;\n    }\n    /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n    _trackChipSetChanges() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => this._syncChipsState());\n            }\n            this._redirectDestroyedChipFocus();\n        });\n    }\n    /** Starts tracking the destroyed chips in order to capture the focused one. */\n    _trackDestroyedFocusedChip() {\n        this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe((event) => {\n            const chipArray = this._chips.toArray();\n            const chipIndex = chipArray.indexOf(event.chip);\n            // If the focused chip is destroyed, save its index so that we can move focus to the next\n            // chip. We only save the index here, rather than move the focus immediately, because we want\n            // to wait until the chip is removed from the chip list before focusing the next one. This\n            // allows us to keep focus on the same index if the chip gets swapped out.\n            if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n                this._lastDestroyedFocusedChipIndex = chipIndex;\n            }\n        });\n    }\n    /**\n     * Finds the next appropriate chip to move focus to,\n     * if the currently-focused chip is destroyed.\n     */\n    _redirectDestroyedChipFocus() {\n        if (this._lastDestroyedFocusedChipIndex == null) {\n            return;\n        }\n        if (this._chips.length) {\n            const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n            const chipToFocus = this._chips.toArray()[newIndex];\n            if (chipToFocus.disabled) {\n                // If we're down to one disabled chip, move focus back to the set.\n                if (this._chips.length === 1) {\n                    this.focus();\n                }\n                else {\n                    this._keyManager.setPreviousItemActive();\n                }\n            }\n            else {\n                chipToFocus.focus();\n            }\n        }\n        else {\n            this.focus();\n        }\n        this._lastDestroyedFocusedChipIndex = null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipSet, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipSet, isStandalone: true, selector: \"mat-chip-set\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], role: \"role\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip-set mdc-evolution-chip-set\" }, queries: [{ propertyName: \"_chips\", predicate: MatChip, descendants: true }], ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipSet, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-set', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n                        '(keydown)': '_handleKeydown($event)',\n                        '[attr.role]': 'role',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], role: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChip, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n    source;\n    value;\n    constructor(\n    /** Chip listbox that emitted the event. */\n    source, \n    /** Value of the chip listbox when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatChipListbox),\n    multi: true,\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onTouched = () => { };\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onChange = () => { };\n    // TODO: MDC uses `grid` here\n    _defaultRole = 'listbox';\n    /** Default chip options. */\n    _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = value;\n        this._syncListboxProperties();\n    }\n    _multiple = false;\n    /** The array of selected chips inside the chip listbox. */\n    get selected() {\n        const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n        return this.multiple ? selectedChips : selectedChips[0];\n    }\n    /** Orientation of the chip list. */\n    ariaOrientation = 'horizontal';\n    /**\n     * Whether or not this chip listbox is selectable.\n     *\n     * When a chip listbox is not selectable, the selected states for all\n     * the chips inside the chip listbox are always ignored.\n     */\n    get selectable() {\n        return this._selectable;\n    }\n    set selectable(value) {\n        this._selectable = value;\n        this._syncListboxProperties();\n    }\n    _selectable = true;\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    compareWith = (o1, o2) => o1 === o2;\n    /** Whether this chip listbox is required. */\n    required = false;\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = value;\n        this._syncListboxProperties();\n    }\n    _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return this._getChipStream(chip => chip.selectionChange);\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** The value of the listbox, which is the combined value of the selected chips. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (this._chips && this._chips.length) {\n            this._setSelectionByValue(value, false);\n        }\n        this._value = value;\n    }\n    _value;\n    /** Event emitted when the selected chip listbox value has been changed by the user. */\n    change = new EventEmitter();\n    _chips = undefined;\n    ngAfterContentInit() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.value !== undefined) {\n                Promise.resolve().then(() => {\n                    this._setSelectionByValue(this.value, false);\n                });\n            }\n            // Update listbox selectable/multiple properties on chips\n            this._syncListboxProperties();\n        });\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n        this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (!this.multiple) {\n                this._chips.forEach(chip => {\n                    if (chip !== event.source) {\n                        chip._setSelectedState(false, false, false);\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /**\n     * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n     * are no selected chips.\n     */\n    focus() {\n        if (this.disabled) {\n            return;\n        }\n        const firstSelectedChip = this._getFirstSelectedChip();\n        if (firstSelectedChip && !firstSelectedChip.disabled) {\n            firstSelectedChip.focus();\n        }\n        else if (this._chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        if (value != null) {\n            this.value = value;\n        }\n        else {\n            this.value = undefined;\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Selects all chips with value. */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n        }\n        else {\n            this._selectValue(value, isUserInput);\n        }\n    }\n    /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n    _blur() {\n        if (!this.disabled) {\n            // Wait to see if focus moves to an individual chip.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    _keydown(event) {\n        if (event.keyCode === TAB) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Marks the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : undefined;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListboxChange(this, valueToEmit));\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Deselects every chip in the listbox.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput) {\n        const correspondingChip = this._chips.find(chip => {\n            return chip.value != null && this.compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n        }\n        return correspondingChip;\n    }\n    /** Syncs the chip-listbox selection state with the individual chips. */\n    _syncListboxProperties() {\n        if (this._chips) {\n            // Defer setting the value in order to avoid the \"Expression\n            // has changed after it was checked\" errors from Angular.\n            Promise.resolve().then(() => {\n                this._chips.forEach(chip => {\n                    chip._chipListMultiple = this.multiple;\n                    chip.chipListSelectable = this._selectable;\n                    chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n                    chip._changeDetectorRef.markForCheck();\n                });\n            });\n        }\n    }\n    /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n    _getFirstSelectedChip() {\n        if (Array.isArray(this.selected)) {\n            return this.selected.length ? this.selected[0] : undefined;\n        }\n        else {\n            return this.selected;\n        }\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n        // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n        // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n        // exceptions for compound widgets.\n        //\n        // From [Developing a Keyboard Interface](\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n        //   Listbox...\"\n        return !action.isInteractive;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipListbox, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipListbox, isStandalone: true, selector: \"mat-chip-listbox\", inputs: { multiple: [\"multiple\", \"multiple\", booleanAttribute], ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], selectable: [\"selectable\", \"selectable\", booleanAttribute], compareWith: \"compareWith\", required: [\"required\", \"required\", booleanAttribute], hideSingleSelectionIndicator: [\"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute], value: \"value\" }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"(disabled || empty) ? -1 : tabIndex\", \"attr.aria-required\": \"role ? required : null\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-orientation\": \"ariaOrientation\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mdc-evolution-chip-set mat-mdc-chip-listbox\" }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], queries: [{ propertyName: \"_chips\", predicate: MatChipOption, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipListbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-listbox', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n                        '[attr.role]': 'role',\n                        '[tabIndex]': '(disabled || empty) ? -1 : tabIndex',\n                        '[attr.aria-required]': 'role ? required : null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-orientation]': 'ariaOrientation',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                        '(keydown)': '_keydown($event)',\n                    }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], propDecorators: { multiple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], ariaOrientation: [{\n                type: Input,\n                args: ['aria-orientation']\n            }], selectable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], compareWith: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hideSingleSelectionIndicator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipOption, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n    source;\n    value;\n    constructor(\n    /** Chip grid that emitted the event. */\n    source, \n    /** Value of the chip grid when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends MatChipSet {\n    ngControl = inject(NgControl, { optional: true, self: true });\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    controlType = 'mat-chip-grid';\n    /** The chip input to add more chips */\n    _chipInput;\n    _defaultRole = 'grid';\n    _errorStateTracker;\n    /**\n     * List of element ids to propagate to the chipInput's aria-describedby attribute.\n     */\n    _ariaDescribedbyIds = [];\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onTouched = () => { };\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onChange = () => { };\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._syncChipsState();\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput.id;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return ((!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0));\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    _placeholder;\n    /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n    get focused() {\n        return this._chipInput.focused || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = value;\n        this.stateChanges.next();\n    }\n    _required;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return !this.empty || this.focused;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    _value = [];\n    /** An object used to control when error messages are shown. */\n    get errorStateMatcher() {\n        return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n        this._errorStateTracker.matcher = value;\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** Emits when the chip grid value has been changed by the user. */\n    change = new EventEmitter();\n    /**\n     * Emits whenever the raw value of the chip-grid changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    valueChange = new EventEmitter();\n    _chips = undefined;\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    stateChanges = new Subject();\n    /** Whether the chip grid is in an error state. */\n    get errorState() {\n        return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n        this._errorStateTracker.errorState = value;\n    }\n    constructor() {\n        super();\n        const parentForm = inject(NgForm, { optional: true });\n        const parentFormGroup = inject(FormGroupDirective, { optional: true });\n        const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n        this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n    }\n    ngAfterContentInit() {\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n        merge(this.chipFocusChanges, this._chips.changes)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.stateChanges.next());\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.stateChanges.complete();\n    }\n    /** Associates an HTML input element with this chip grid. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this.disabled && !this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first chip in this chip grid, or the associated input when there\n     * are no eligible chips.\n     */\n    focus() {\n        if (this.disabled || this._chipInput.focused) {\n            return;\n        }\n        if (!this._chips.length || this._chips.first.disabled) {\n            // Delay until the next tick, because this can cause a \"changed after checked\"\n            // error if the input does something on focus (e.g. opens an autocomplete).\n            Promise.resolve().then(() => this._chipInput.focus());\n        }\n        else {\n            const activeItem = this._keyManager.activeItem;\n            if (activeItem) {\n                activeItem.focus();\n            }\n            else {\n                this._keyManager.setFirstItemActive();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get describedByIds() {\n        return this._chipInput?.describedByIds || [];\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        // We must keep this up to date to handle the case where ids are set\n        // before the chip input is registered.\n        this._ariaDescribedbyIds = ids;\n        this._chipInput?.setDescribedByIds(ids);\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        // The user is responsible for creating the child chips, so we just store the value.\n        this._value = value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /** Refreshes the error state of the chip grid. */\n    updateErrorState() {\n        this._errorStateTracker.updateErrorState();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n    _blur() {\n        if (!this.disabled) {\n            // Check whether the focus moved to chip input.\n            // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n            // to chip input, do nothing.\n            // Timeout is needed to wait for the focus() event trigger on chip input.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._propagateChanges();\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    /**\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (!this._chipInput.focused) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Handles custom keyboard events. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const activeItem = this._keyManager.activeItem;\n        if (keyCode === TAB) {\n            if (this._chipInput.focused &&\n                hasModifierKey(event, 'shiftKey') &&\n                this._chips.length &&\n                !this._chips.last.disabled) {\n                event.preventDefault();\n                if (activeItem) {\n                    this._keyManager.setActiveItem(activeItem);\n                }\n                else {\n                    this._focusLastChip();\n                }\n            }\n            else {\n                // Use the super method here since it doesn't check for the input\n                // focused state. This allows focus to escape if there's only one\n                // disabled chip left in the list.\n                super._allowFocusEscape();\n            }\n        }\n        else if (!this._chipInput.focused) {\n            // The up and down arrows are supposed to navigate between the individual rows in the grid.\n            // We do this by filtering the actions down to the ones that have the same `_isPrimary`\n            // flag as the active action and moving focus between them ourseles instead of delegating\n            // to the key manager. For more information, see #29359 and:\n            // https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label\n            if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && activeItem) {\n                const eligibleActions = this._chipActions.filter(action => action._isPrimary === activeItem._isPrimary && !this._skipPredicate(action));\n                const currentIndex = eligibleActions.indexOf(activeItem);\n                const delta = event.keyCode === UP_ARROW ? -1 : 1;\n                event.preventDefault();\n                if (currentIndex > -1 && this._isValidIndex(currentIndex + delta)) {\n                    this._keyManager.setActiveItem(eligibleActions[currentIndex + delta]);\n                }\n            }\n            else {\n                super._handleKeydown(event);\n            }\n        }\n        this.stateChanges.next();\n    }\n    _focusLastChip() {\n        if (this._chips.length) {\n            this._chips.last.focus();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n        this._value = valueToEmit;\n        this.change.emit(new MatChipGridChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipGrid, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipGrid, isStandalone: true, selector: \"mat-chip-grid\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], placeholder: \"placeholder\", required: [\"required\", \"required\", booleanAttribute], value: \"value\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\" }, properties: { \"attr.role\": \"role\", \"attr.tabindex\": \"(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-invalid\": \"errorState\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], queries: [{ propertyName: \"_chips\", predicate: MatChipRow, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipGrid, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-grid', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n                        '[attr.role]': 'role',\n                        '[attr.tabindex]': '(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                    }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipRow, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n    _elementRef = inject(ElementRef);\n    /** Whether the control is focused. */\n    focused = false;\n    /** Register input for chip list */\n    get chipGrid() {\n        return this._chipGrid;\n    }\n    set chipGrid(value) {\n        if (value) {\n            this._chipGrid = value;\n            this._chipGrid.registerInput(this);\n        }\n    }\n    _chipGrid;\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    addOnBlur = false;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     */\n    separatorKeyCodes;\n    /** Emitted when a chip is to be added. */\n    chipEnd = new EventEmitter();\n    /** The input's placeholder text. */\n    placeholder = '';\n    /** Unique id for the input. */\n    id = inject(_IdGenerator).getId('mat-mdc-chip-list-input-');\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._disabled || (this._chipGrid && this._chipGrid.disabled);\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Whether the input is readonly. */\n    readonly = false;\n    /** Whether the input should remain interactive when it is disabled. */\n    disabledInteractive;\n    /** Whether the input is empty. */\n    get empty() {\n        return !this.inputElement.value;\n    }\n    /** The native input element to which this directive is attached. */\n    inputElement;\n    constructor() {\n        const defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS);\n        const formField = inject(MAT_FORM_FIELD, { optional: true });\n        this.inputElement = this._elementRef.nativeElement;\n        this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n        this.disabledInteractive = defaultOptions.inputDisabledInteractive ?? false;\n        if (formField) {\n            this.inputElement.classList.add('mat-mdc-form-field-input-control');\n        }\n    }\n    ngOnChanges() {\n        this._chipGrid.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.chipEnd.complete();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        if (this.empty && event.keyCode === BACKSPACE) {\n            // Ignore events where the user is holding down backspace\n            // so that we don't accidentally remove too many chips.\n            if (!event.repeat) {\n                this._chipGrid._focusLastChip();\n            }\n            event.preventDefault();\n        }\n        else {\n            this._emitChipEnd(event);\n        }\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipGrid.focused) {\n            this._chipGrid._blur();\n        }\n        this._chipGrid.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipGrid.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!event || (this._isSeparatorKey(event) && !event.repeat)) {\n            this.chipEnd.emit({\n                input: this.inputElement,\n                value: this.inputElement.value,\n                chipInput: this,\n            });\n            event?.preventDefault();\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipGrid.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus() {\n        this.inputElement.focus();\n    }\n    /** Clears the input */\n    clear() {\n        this.inputElement.value = '';\n    }\n    /**\n     * Implemented as part of MatChipTextControl.\n     * @docs-private\n     */\n    get describedByIds() {\n        const element = this._elementRef.nativeElement;\n        const existingDescribedBy = element.getAttribute('aria-describedby');\n        return existingDescribedBy?.split(' ') || [];\n    }\n    setDescribedByIds(ids) {\n        const element = this._elementRef.nativeElement;\n        // Set the value directly in the DOM since this binding\n        // is prone to \"changed after checked\" errors.\n        if (ids.length) {\n            element.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            element.removeAttribute('aria-describedby');\n        }\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n    /** Gets the value to set on the `readonly` attribute. */\n    _getReadonlyAttribute() {\n        return this.readonly || (this.disabled && this.disabledInteractive) ? 'true' : null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipInput, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.0.0\", type: MatChipInput, isStandalone: true, selector: \"input[matChipInputFor]\", inputs: { chipGrid: [\"matChipInputFor\", \"chipGrid\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute], separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", disabled: [\"disabled\", \"disabled\", booleanAttribute], readonly: [\"readonly\", \"readonly\", booleanAttribute], disabledInteractive: [\"matChipInputDisabledInteractive\", \"disabledInteractive\", booleanAttribute] }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, host: { listeners: { \"keydown\": \"_keydown($event)\", \"blur\": \"_blur()\", \"focus\": \"_focus()\", \"input\": \"_onInput()\" }, properties: { \"id\": \"id\", \"attr.disabled\": \"disabled && !disabledInteractive ? \\\"\\\" : null\", \"attr.placeholder\": \"placeholder || null\", \"attr.aria-invalid\": \"_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null\", \"attr.aria-required\": \"_chipGrid && _chipGrid.required || null\", \"attr.aria-disabled\": \"disabled && disabledInteractive ? \\\"true\\\" : null\", \"attr.readonly\": \"_getReadonlyAttribute()\", \"attr.required\": \"_chipGrid && _chipGrid.required || null\" }, classAttribute: \"mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matChipInputFor]',\n                    exportAs: 'matChipInput, matChipInputFor',\n                    host: {\n                        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n                        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n                        // the MDC chips were landed initially with it.\n                        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n                        '(keydown)': '_keydown($event)',\n                        '(blur)': '_blur()',\n                        '(focus)': '_focus()',\n                        '(input)': '_onInput()',\n                        '[id]': 'id',\n                        '[attr.disabled]': 'disabled && !disabledInteractive ? \"\" : null',\n                        '[attr.placeholder]': 'placeholder || null',\n                        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n                        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n                        '[attr.aria-disabled]': 'disabled && disabledInteractive ? \"true\" : null',\n                        '[attr.readonly]': '_getReadonlyAttribute()',\n                        '[attr.required]': '_chipGrid && _chipGrid.required || null',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { chipGrid: [{\n                type: Input,\n                args: ['matChipInputFor']\n            }], addOnBlur: [{\n                type: Input,\n                args: [{ alias: 'matChipInputAddOnBlur', transform: booleanAttribute }]\n            }], separatorKeyCodes: [{\n                type: Input,\n                args: ['matChipInputSeparatorKeyCodes']\n            }], chipEnd: [{\n                type: Output,\n                args: ['matChipInputTokenEnd']\n            }], placeholder: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], readonly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ alias: 'matChipInputDisabledInteractive', transform: booleanAttribute }]\n            }] } });\n\nconst CHIP_DECLARATIONS = [\n    MatChip,\n    MatChipAvatar,\n    MatChipEdit,\n    MatChipEditInput,\n    MatChipGrid,\n    MatChipInput,\n    MatChipListbox,\n    MatChipOption,\n    MatChipRemove,\n    MatChipRow,\n    MatChipSet,\n    MatChipTrailingIcon,\n];\nclass MatChipsModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, imports: [MatCommonModule, MatRippleModule, MatChipAction, MatChip,\n            MatChipAvatar,\n            MatChipEdit,\n            MatChipEditInput,\n            MatChipGrid,\n            MatChipInput,\n            MatChipListbox,\n            MatChipOption,\n            MatChipRemove,\n            MatChipRow,\n            MatChipSet,\n            MatChipTrailingIcon], exports: [MatCommonModule, MatChip,\n            MatChipAvatar,\n            MatChipEdit,\n            MatChipEditInput,\n            MatChipGrid,\n            MatChipInput,\n            MatChipListbox,\n            MatChipOption,\n            MatChipRemove,\n            MatChipRow,\n            MatChipSet,\n            MatChipTrailingIcon] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, providers: [\n            ErrorStateMatcher,\n            {\n                provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                useValue: {\n                    separatorKeyCodes: [ENTER],\n                },\n            },\n        ], imports: [MatCommonModule, MatRippleModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatChipsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule, MatChipAction, CHIP_DECLARATIONS],\n                    exports: [MatCommonModule, CHIP_DECLARATIONS],\n                    providers: [\n                        ErrorStateMatcher,\n                        {\n                            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                            useValue: {\n                                separatorKeyCodes: [ENTER],\n                            },\n                        },\n                    ],\n                }]\n        }] });\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_EDIT, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEdit, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\n\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, ChangeDetectorRef, EventEmitter, HostAttributeToken, booleanAttribute, numberAttribute, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { FocusMonitor, _IdGenerator } from '@angular/cdk/a11y';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _ as _animationsDisabled } from './animation-DfMFjxHu.mjs';\nimport { _ as _StructuralStylesLoader } from './structural-styles-CObeNzjn.mjs';\nimport { M as MatRipple } from './ripple-BYgV4oZC.mjs';\nimport { _ as _MatInternalFormField } from './internal-form-field-D5iFxU6d.mjs';\nimport { M as MatCommonModule } from './common-module-cKSwHniA.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false, hideIcon: false, disabledInteractive: false }),\n});\n\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n    source;\n    checked;\n    constructor(\n    /** The source slide toggle of the event. */\n    source, \n    /** The new `checked` value of the slide toggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\nclass MatSlideToggle {\n    _elementRef = inject(ElementRef);\n    _focusMonitor = inject(FocusMonitor);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    defaults = inject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS);\n    _onChange = (_) => { };\n    _onTouched = () => { };\n    _validatorOnChange = () => { };\n    _uniqueId;\n    _checked = false;\n    _createChangeEvent(isChecked) {\n        return new MatSlideToggleChange(this, isChecked);\n    }\n    /** Unique ID for the label element. */\n    _labelId;\n    /** Returns the unique id for the visual hidden button. */\n    get buttonId() {\n        return `${this.id || this._uniqueId}-button`;\n    }\n    /** Reference to the MDC switch element. */\n    _switchElement;\n    /** Focuses the slide-toggle. */\n    focus() {\n        this._switchElement.nativeElement.focus();\n    }\n    /** Whether noop animations are enabled. */\n    _noopAnimations = _animationsDisabled();\n    /** Whether the slide toggle is currently focused. */\n    _focused;\n    /** Name value will be applied to the input element if present. */\n    name = null;\n    /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n    id;\n    /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n    labelPosition = 'after';\n    /** Used to set the aria-label attribute on the underlying input element. */\n    ariaLabel = null;\n    /** Used to set the aria-labelledby attribute on the underlying input element. */\n    ariaLabelledby = null;\n    /** Used to set the aria-describedby attribute on the underlying input element. */\n    ariaDescribedby;\n    /** Whether the slide-toggle is required. */\n    required;\n    // TODO(crisbeto): this should be a ThemePalette, but some internal apps were abusing\n    // the lack of type checking previously and assigning random strings.\n    /**\n     * Theme color of the slide toggle. This API is supported in M2 themes only,\n     * it has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/slide-toggle/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /** Whether the slide toggle is disabled. */\n    disabled = false;\n    /** Whether the slide toggle has a ripple. */\n    disableRipple = false;\n    /** Tabindex of slide toggle. */\n    tabIndex = 0;\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        this._checked = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether to hide the icon inside of the slide toggle. */\n    hideIcon;\n    /** Whether the slide toggle should remain interactive when it is disabled. */\n    disabledInteractive;\n    /** An event will be dispatched each time the slide-toggle changes its value. */\n    change = new EventEmitter();\n    /**\n     * An event will be dispatched each time the slide-toggle input is toggled.\n     * This event is always emitted when the user toggles the slide toggle, but this does not mean\n     * the slide toggle's value has changed.\n     */\n    toggleChange = new EventEmitter();\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        const tabIndex = inject(new HostAttributeToken('tabindex'), { optional: true });\n        const defaults = this.defaults;\n        this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n        this.color = defaults.color || 'accent';\n        this.id = this._uniqueId = inject(_IdGenerator).getId('mat-mdc-slide-toggle-');\n        this.hideIcon = defaults.hideIcon ?? false;\n        this.disabledInteractive = defaults.disabledInteractive ?? false;\n        this._labelId = this._uniqueId + '-label';\n    }\n    ngAfterContentInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._focused = true;\n                this._changeDetectorRef.markForCheck();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._focused = false;\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes['required']) {\n            this._validatorOnChange();\n        }\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of Validator. */\n    validate(control) {\n        return this.required && control.value !== true ? { 'required': true } : null;\n    }\n    /** Implemented as a part of Validator. */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(this._createChangeEvent(this.checked));\n    }\n    /** Method being called whenever the underlying button is clicked. */\n    _handleClick() {\n        if (!this.disabled) {\n            this.toggleChange.emit();\n            if (!this.defaults.disableToggleValue) {\n                this.checked = !this.checked;\n                this._onChange(this.checked);\n                this.change.emit(new MatSlideToggleChange(this, this.checked));\n            }\n        }\n    }\n    _getAriaLabelledBy() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Even though we have a `label` element with a `for` pointing to the button, we need the\n        // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n        return this.ariaLabel ? null : this._labelId;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggle, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.0.0\", type: MatSlideToggle, isStandalone: true, selector: \"mat-slide-toggle\", inputs: { name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], required: [\"required\", \"required\", booleanAttribute], color: \"color\", disabled: [\"disabled\", \"disabled\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))], checked: [\"checked\", \"checked\", booleanAttribute], hideIcon: [\"hideIcon\", \"hideIcon\", booleanAttribute], disabledInteractive: [\"disabledInteractive\", \"disabledInteractive\", booleanAttribute] }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.name\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-mdc-slide-toggle-focused\": \"_focused\", \"class.mat-mdc-slide-toggle-checked\": \"checked\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class\": \"color ? \\\"mat-\\\" + color : \\\"\\\"\" }, classAttribute: \"mat-mdc-slide-toggle\" }, providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => MatSlideToggle),\n                multi: true,\n            },\n            {\n                provide: NG_VALIDATORS,\n                useExisting: MatSlideToggle,\n                multi: true,\n            },\n        ], viewQueries: [{ propertyName: \"_switchElement\", first: true, predicate: [\"switch\"], descendants: true }], exportAs: [\"matSlideToggle\"], usesOnChanges: true, ngImport: i0, template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [class.mat-mdc-slide-toggle-disabled-interactive]=\\\"disabledInteractive\\\"\\n    [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n    [disabled]=\\\"disabled && !disabledInteractive\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <span class=\\\"mdc-switch__track\\\"></span>\\n    <span class=\\\"mdc-switch__handle-track\\\">\\n      <span class=\\\"mdc-switch__handle\\\">\\n        <span class=\\\"mdc-switch__shadow\\\">\\n          <span class=\\\"mdc-elevation-overlay\\\"></span>\\n        </span>\\n        <span class=\\\"mdc-switch__ripple\\\">\\n          <span class=\\\"mat-mdc-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></span>\\n        </span>\\n        @if (!hideIcon) {\\n          <span class=\\\"mdc-switch__icons\\\">\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--on\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n            </svg>\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--off\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n            </svg>\\n          </span>\\n        }\\n      </span>\\n    </span>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative;width:var(--mat-slide-toggle-track-width, 52px)}.mdc-switch.mdc-switch--disabled{cursor:default;pointer-events:none}.mdc-switch.mat-mdc-slide-toggle-disabled-interactive{pointer-events:auto}.mdc-switch__track{overflow:hidden;position:relative;width:100%;height:var(--mat-slide-toggle-track-height, 32px);border-radius:var(--mat-slide-toggle-track-shape, var(--mat-sys-corner-full))}.mdc-switch--disabled.mdc-switch .mdc-switch__track{opacity:var(--mat-slide-toggle-disabled-track-opacity, 0.12)}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%;border-width:var(--mat-slide-toggle-track-outline-width, 2px);border-color:var(--mat-slide-toggle-track-outline-color, var(--mat-sys-outline))}.mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track::after{border-width:var(--mat-slide-toggle-selected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-selected-track-outline-color, transparent)}.mdc-switch--disabled .mdc-switch__track::before,.mdc-switch--disabled .mdc-switch__track::after{border-width:var(--mat-slide-toggle-disabled-unselected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-disabled-unselected-track-outline-color, var(--mat-sys-on-surface))}@media(forced-colors: active){.mdc-switch__track{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0);background:var(--mat-slide-toggle-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch--selected .mdc-switch__track::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-hover-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-focus-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-pressed-track-color, var(--mat-sys-surface-variant))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::before,.mdc-switch.mdc-switch--disabled .mdc-switch__track::before{background:var(--mat-slide-toggle-disabled-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch__track::after{transform:translateX(-100%);background:var(--mat-slide-toggle-selected-track-color, var(--mat-sys-primary))}[dir=rtl] .mdc-switch__track::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::after{transform:translateX(0)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-hover-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-focus-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-pressed-track-color, var(--mat-sys-primary))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::after,.mdc-switch.mdc-switch--disabled .mdc-switch__track::after{background:var(--mat-slide-toggle-disabled-selected-track-color, var(--mat-sys-on-surface))}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0);width:calc(100% - var(--mat-slide-toggle-handle-width))}[dir=rtl] .mdc-switch__handle-track{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto;transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1);width:var(--mat-slide-toggle-handle-width);height:var(--mat-slide-toggle-handle-height);border-radius:var(--mat-slide-toggle-handle-shape, var(--mat-sys-corner-full))}[dir=rtl] .mdc-switch__handle{left:auto;right:0}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-slide-toggle-unselected-handle-size, 16px);height:var(--mat-slide-toggle-unselected-handle-size, 16px);margin:var(--mat-slide-toggle-unselected-handle-horizontal-margin, 0 8px)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-unselected-with-icon-handle-horizontal-margin, 0 4px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-slide-toggle-selected-handle-size, 24px);height:var(--mat-slide-toggle-selected-handle-size, 24px);margin:var(--mat-slide-toggle-selected-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-selected-with-icon-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-slide-toggle-with-icon-handle-size, 24px);height:var(--mat-slide-toggle-with-icon-handle-size, 24px)}.mat-mdc-slide-toggle .mdc-switch:active:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-slide-toggle-pressed-handle-size, 28px);height:var(--mat-slide-toggle-pressed-handle-size, 28px)}.mat-mdc-slide-toggle .mdc-switch--selected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-selected-pressed-handle-horizontal-margin, 0 22px)}.mat-mdc-slide-toggle .mdc-switch--unselected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-unselected-pressed-handle-horizontal-margin, 0 2px)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-selected-handle-opacity, 1)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-unselected-handle-opacity, 0.38)}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media(forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-handle-color, var(--mat-sys-on-primary))}.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-hover-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-focus-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-pressed-handle-color, var(--mat-sys-primary-container))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:hover:not(:focus):not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:focus:not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:active .mdc-switch__handle::after,.mdc-switch--selected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-selected-handle-color, var(--mat-sys-surface))}.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-handle-color, var(--mat-sys-outline))}.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-hover-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-focus-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-pressed-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-unselected-handle-color, var(--mat-sys-on-surface))}.mdc-switch__handle::before{background:var(--mat-slide-toggle-handle-surface-color)}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-handle-elevation-shadow)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__shadow,.mdc-switch.mdc-switch--disabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-disabled-handle-elevation-shadow)}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1;width:var(--mat-slide-toggle-state-layer-size, 40px);height:var(--mat-slide-toggle-state-layer-size, 40px)}.mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mdc-switch--disabled .mdc-switch__ripple::after{display:none}.mat-mdc-slide-toggle-disabled-interactive .mdc-switch__ripple::after{display:block}.mdc-switch:hover .mdc-switch__ripple::after{transition:75ms opacity cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:focus .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:active .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:hover:not(:focus) .mdc-switch__ripple::after,.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-pressed-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-hover-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-focus-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-pressed-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch__icons{position:relative;height:100%;width:100%;z-index:1;transform:translateZ(0)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-unselected-icon-opacity, 0.38)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-selected-icon-opacity, 0.38)}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--unselected .mdc-switch__icon{width:var(--mat-slide-toggle-unselected-icon-size, 16px);height:var(--mat-slide-toggle-unselected-icon-size, 16px);fill:var(--mat-slide-toggle-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__icon{width:var(--mat-slide-toggle-selected-icon-size, 16px);height:var(--mat-slide-toggle-selected-icon-size, 16px);fill:var(--mat-slide-toggle-selected-icon-color, var(--mat-sys-on-primary-container))}.mdc-switch--selected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-selected-icon-color, var(--mat-sys-on-surface))}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{-webkit-user-select:none;user-select:none;display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-internal-form-field{color:var(--mat-slide-toggle-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-slide-toggle-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-slide-toggle-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-slide-toggle-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-slide-toggle-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-slide-toggle-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mat-slide-toggle-disabled-label-text-color, var(--mat-sys-on-surface))}\\n\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"component\", type: _MatInternalFormField, selector: \"div[mat-internal-form-field]\", inputs: [\"labelPosition\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slide-toggle', host: {\n                        'class': 'mat-mdc-slide-toggle',\n                        '[id]': 'id',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.name]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-mdc-slide-toggle-focused]': '_focused',\n                        '[class.mat-mdc-slide-toggle-checked]': 'checked',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[class]': 'color ? \"mat-\" + color : \"\"',\n                    }, exportAs: 'matSlideToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => MatSlideToggle),\n                            multi: true,\n                        },\n                        {\n                            provide: NG_VALIDATORS,\n                            useExisting: MatSlideToggle,\n                            multi: true,\n                        },\n                    ], imports: [MatRipple, _MatInternalFormField], template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\">\\n  <button\\n    class=\\\"mdc-switch\\\"\\n    role=\\\"switch\\\"\\n    type=\\\"button\\\"\\n    [class.mdc-switch--selected]=\\\"checked\\\"\\n    [class.mdc-switch--unselected]=\\\"!checked\\\"\\n    [class.mdc-switch--checked]=\\\"checked\\\"\\n    [class.mdc-switch--disabled]=\\\"disabled\\\"\\n    [class.mat-mdc-slide-toggle-disabled-interactive]=\\\"disabledInteractive\\\"\\n    [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n    [disabled]=\\\"disabled && !disabledInteractive\\\"\\n    [attr.id]=\\\"buttonId\\\"\\n    [attr.name]=\\\"name\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-labelledby]=\\\"_getAriaLabelledBy()\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n    [attr.aria-required]=\\\"required || null\\\"\\n    [attr.aria-checked]=\\\"checked\\\"\\n    [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n    (click)=\\\"_handleClick()\\\"\\n    #switch>\\n    <span class=\\\"mdc-switch__track\\\"></span>\\n    <span class=\\\"mdc-switch__handle-track\\\">\\n      <span class=\\\"mdc-switch__handle\\\">\\n        <span class=\\\"mdc-switch__shadow\\\">\\n          <span class=\\\"mdc-elevation-overlay\\\"></span>\\n        </span>\\n        <span class=\\\"mdc-switch__ripple\\\">\\n          <span class=\\\"mat-mdc-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n            [matRippleTrigger]=\\\"switch\\\"\\n            [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n            [matRippleCentered]=\\\"true\\\"></span>\\n        </span>\\n        @if (!hideIcon) {\\n          <span class=\\\"mdc-switch__icons\\\">\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--on\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\\\" />\\n            </svg>\\n            <svg\\n              class=\\\"mdc-switch__icon mdc-switch__icon--off\\\"\\n              viewBox=\\\"0 0 24 24\\\"\\n              aria-hidden=\\\"true\\\">\\n              <path d=\\\"M20 13H4v-2h16v2z\\\" />\\n            </svg>\\n          </span>\\n        }\\n      </span>\\n    </span>\\n  </button>\\n\\n  <!--\\n    Clicking on the label will trigger another click event from the button.\\n    Stop propagation here so other listeners further up in the DOM don't execute twice.\\n  -->\\n  <label class=\\\"mdc-label\\\" [for]=\\\"buttonId\\\" [attr.id]=\\\"_labelId\\\" (click)=\\\"$event.stopPropagation()\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\", styles: [\".mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative;width:var(--mat-slide-toggle-track-width, 52px)}.mdc-switch.mdc-switch--disabled{cursor:default;pointer-events:none}.mdc-switch.mat-mdc-slide-toggle-disabled-interactive{pointer-events:auto}.mdc-switch__track{overflow:hidden;position:relative;width:100%;height:var(--mat-slide-toggle-track-height, 32px);border-radius:var(--mat-slide-toggle-track-shape, var(--mat-sys-corner-full))}.mdc-switch--disabled.mdc-switch .mdc-switch__track{opacity:var(--mat-slide-toggle-disabled-track-opacity, 0.12)}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%;border-width:var(--mat-slide-toggle-track-outline-width, 2px);border-color:var(--mat-slide-toggle-track-outline-color, var(--mat-sys-outline))}.mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track::after{border-width:var(--mat-slide-toggle-selected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-selected-track-outline-color, transparent)}.mdc-switch--disabled .mdc-switch__track::before,.mdc-switch--disabled .mdc-switch__track::after{border-width:var(--mat-slide-toggle-disabled-unselected-track-outline-width, 2px);border-color:var(--mat-slide-toggle-disabled-unselected-track-outline-color, var(--mat-sys-on-surface))}@media(forced-colors: active){.mdc-switch__track{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0);background:var(--mat-slide-toggle-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch--selected .mdc-switch__track::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-hover-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-focus-track-color, var(--mat-sys-surface-variant))}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mat-slide-toggle-unselected-pressed-track-color, var(--mat-sys-surface-variant))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::before,.mdc-switch.mdc-switch--disabled .mdc-switch__track::before{background:var(--mat-slide-toggle-disabled-unselected-track-color, var(--mat-sys-surface-variant))}.mdc-switch__track::after{transform:translateX(-100%);background:var(--mat-slide-toggle-selected-track-color, var(--mat-sys-primary))}[dir=rtl] .mdc-switch__track::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::after{transform:translateX(0)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-visible-track-opacity, 1);transition:var(--mat-slide-toggle-visible-track-transition, opacity 75ms)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-slide-toggle-hidden-track-opacity, 0);transition:var(--mat-slide-toggle-hidden-track-transition, opacity 75ms)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-hover-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-focus-track-color, var(--mat-sys-primary))}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mat-slide-toggle-selected-pressed-track-color, var(--mat-sys-primary))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::after,.mdc-switch.mdc-switch--disabled .mdc-switch__track::after{background:var(--mat-slide-toggle-disabled-selected-track-color, var(--mat-sys-on-surface))}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0);width:calc(100% - var(--mat-slide-toggle-handle-width))}[dir=rtl] .mdc-switch__handle-track{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto;transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1);width:var(--mat-slide-toggle-handle-width);height:var(--mat-slide-toggle-handle-height);border-radius:var(--mat-slide-toggle-handle-shape, var(--mat-sys-corner-full))}[dir=rtl] .mdc-switch__handle{left:auto;right:0}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-slide-toggle-unselected-handle-size, 16px);height:var(--mat-slide-toggle-unselected-handle-size, 16px);margin:var(--mat-slide-toggle-unselected-handle-horizontal-margin, 0 8px)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-unselected-with-icon-handle-horizontal-margin, 0 4px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-slide-toggle-selected-handle-size, 24px);height:var(--mat-slide-toggle-selected-handle-size, 24px);margin:var(--mat-slide-toggle-selected-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-slide-toggle-selected-with-icon-handle-horizontal-margin, 0 24px)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-slide-toggle-with-icon-handle-size, 24px);height:var(--mat-slide-toggle-with-icon-handle-size, 24px)}.mat-mdc-slide-toggle .mdc-switch:active:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-slide-toggle-pressed-handle-size, 28px);height:var(--mat-slide-toggle-pressed-handle-size, 28px)}.mat-mdc-slide-toggle .mdc-switch--selected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-selected-pressed-handle-horizontal-margin, 0 22px)}.mat-mdc-slide-toggle .mdc-switch--unselected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-slide-toggle-unselected-pressed-handle-horizontal-margin, 0 2px)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-selected-handle-opacity, 1)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-slide-toggle-disabled-unselected-handle-opacity, 0.38)}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media(forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-handle-color, var(--mat-sys-on-primary))}.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-hover-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-focus-handle-color, var(--mat-sys-primary-container))}.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-selected-pressed-handle-color, var(--mat-sys-primary-container))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:hover:not(:focus):not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:focus:not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:active .mdc-switch__handle::after,.mdc-switch--selected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-selected-handle-color, var(--mat-sys-surface))}.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-handle-color, var(--mat-sys-outline))}.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-hover-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-focus-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mat-slide-toggle-unselected-pressed-handle-color, var(--mat-sys-on-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mat-slide-toggle-disabled-unselected-handle-color, var(--mat-sys-on-surface))}.mdc-switch__handle::before{background:var(--mat-slide-toggle-handle-surface-color)}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-handle-elevation-shadow)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__shadow,.mdc-switch.mdc-switch--disabled .mdc-switch__shadow{box-shadow:var(--mat-slide-toggle-disabled-handle-elevation-shadow)}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1;width:var(--mat-slide-toggle-state-layer-size, 40px);height:var(--mat-slide-toggle-state-layer-size, 40px)}.mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mdc-switch--disabled .mdc-switch__ripple::after{display:none}.mat-mdc-slide-toggle-disabled-interactive .mdc-switch__ripple::after{display:block}.mdc-switch:hover .mdc-switch__ripple::after{transition:75ms opacity cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:focus .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:active .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:hover:not(:focus) .mdc-switch__ripple::after,.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-hover-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-focus-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-unselected-pressed-state-layer-color, var(--mat-sys-on-surface));opacity:var(--mat-slide-toggle-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-hover-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-focus-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background:var(--mat-slide-toggle-selected-pressed-state-layer-color, var(--mat-sys-primary));opacity:var(--mat-slide-toggle-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch__icons{position:relative;height:100%;width:100%;z-index:1;transform:translateZ(0)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-unselected-icon-opacity, 0.38)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__icons{opacity:var(--mat-slide-toggle-disabled-selected-icon-opacity, 0.38)}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--unselected .mdc-switch__icon{width:var(--mat-slide-toggle-unselected-icon-size, 16px);height:var(--mat-slide-toggle-unselected-icon-size, 16px);fill:var(--mat-slide-toggle-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-unselected-icon-color, var(--mat-sys-surface-variant))}.mdc-switch--selected .mdc-switch__icon{width:var(--mat-slide-toggle-selected-icon-size, 16px);height:var(--mat-slide-toggle-selected-icon-size, 16px);fill:var(--mat-slide-toggle-selected-icon-color, var(--mat-sys-on-primary-container))}.mdc-switch--selected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mat-slide-toggle-disabled-selected-icon-color, var(--mat-sys-on-surface))}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{-webkit-user-select:none;user-select:none;display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-internal-form-field{color:var(--mat-slide-toggle-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-slide-toggle-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-slide-toggle-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-slide-toggle-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-slide-toggle-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-slide-toggle-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mat-slide-toggle-disabled-label-text-color, var(--mat-sys-on-surface))}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { _switchElement: [{\n                type: ViewChild,\n                args: ['switch']\n            }], name: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], color: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{ transform: (value) => (value == null ? 0 : numberAttribute(value)) }]\n            }], checked: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hideIcon: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], change: [{\n                type: Output\n            }], toggleChange: [{\n                type: Output\n            }] } });\n\nclass MatSlideToggleModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggleModule, imports: [MatSlideToggle, MatCommonModule], exports: [MatSlideToggle, MatCommonModule] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggleModule, imports: [MatSlideToggle, MatCommonModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.0.0\", ngImport: i0, type: MatSlideToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatSlideToggle, MatCommonModule],\n                    exports: [MatSlideToggle, MatCommonModule],\n                }]\n        }] });\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule };\n\n","import { Component, inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators, FormsModule, ReactiveFormsModule, FormGroup } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { Application } from '../../features/application/service/application';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { Customer } from '../../features/customer/customer/customer';\r\n\r\n@Component({\r\n  selector: 'app-stepper',\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatStepperModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonToggleModule,\r\n    MatCheckboxModule,\r\n    MatListModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    MatIconModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatChipsModule,\r\n    MatSlideToggleModule\r\n  ],\r\n  standalone: true,\r\n  templateUrl: './stepper.html',\r\n  styleUrl: './stepper.css'\r\n})\r\nexport class Stepper implements OnInit {\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.applicationConfigFormGroup.get('customer')?.valueChanges.subscribe(value => {\r\n      const orgEntityControl = this.applicationConfigFormGroup.get('OrgEntity');\r\n      if (value) {\r\n        orgEntityControl?.enable();\r\n      } else {\r\n        orgEntityControl?.disable();\r\n      }\r\n    });\r\n\r\n    this.applicationConfigFormGroup.get('OrgEntity')?.valueChanges.subscribe(value => {\r\n      const applicationControl = this.applicationConfigFormGroup.get('application');\r\n      if (value) {\r\n        applicationControl?.enable();\r\n      } else {\r\n        applicationControl?.disable();\r\n      }\r\n    });\r\n\r\n    this.applicationConfigFormGroup.get('application')?.valueChanges.subscribe(value => {\r\n      const oidcProvidersnControl = this.applicationConfigFormGroup.get('oidcProviders');\r\n      if (value) {\r\n        this.selectedApplication = value;\r\n        oidcProvidersnControl?.enable();\r\n      } else {\r\n        oidcProvidersnControl?.disable();\r\n      }\r\n    });\r\n\r\n    this.applicationConfigFormGroup.get('oidcProviders')?.valueChanges.subscribe(value => {\r\n      const oidcProvidersnControl = this.applicationConfigFormGroup.get('instrospecionEndpoint');\r\n      if (value) {\r\n        this.getIntrospecionEndpoint(value);\r\n        oidcProvidersnControl?.enable();\r\n      } else {\r\n        oidcProvidersnControl?.disable();\r\n      }\r\n    });\r\n\r\n    this.applicationConfigFormGroup.get('instrospecionEndpoint')?.valueChanges.subscribe(value => {\r\n      const oidcProvidersnControl = this.applicationConfigFormGroup.get('storageRegion');\r\n      if (value) {\r\n        this.getIntrospecionEndpoint(value);\r\n        oidcProvidersnControl?.enable();\r\n      } else {\r\n        oidcProvidersnControl?.disable();\r\n      }\r\n    });\r\n\r\n    this.applicationConfigFormGroup.get('storageRegion')?.valueChanges.subscribe(value => {\r\n      const oidcProvidersnControl = this.applicationConfigFormGroup.get('status');\r\n      const enabled = this.applicationConfigFormGroup.get('enabled');\r\n      if (value) {\r\n        this.getIntrospecionEndpoint(value);\r\n        oidcProvidersnControl?.enable();\r\n        enabled?.enable();\r\n      } else {\r\n        oidcProvidersnControl?.disable();\r\n        enabled?.disable();\r\n      }\r\n    });\r\n  }\r\n\r\n  childrenAccessor = (node: any) => node.children ?? [];\r\n\r\n  hasChild = (_: number, node: any) => !!node.children && node.children.length > 0;\r\n\r\n  isLinear = true;\r\n  orgEntities: any[] = [];\r\n  customers: any[] = [];\r\n  applications: any[] = [];\r\n  oidcProviders: any[] = ['IDP', 'CUSTOM']\r\n  loading = false;\r\n  configurations: any = []\r\n  creatingApplication = false;\r\n  selectedApplication: any = { name: '', description: '' };\r\n  selected = 'CUSTOM';\r\n  fileTypesForm!: FormGroup;\r\n  selectedConfiguration: any = null;\r\n  configurationId = 1;\r\n  private _formBuilder = inject(FormBuilder);\r\n\r\n  roles: any[] = [\r\n    { value: 'Role 1', viewValue: 'Role 1' },\r\n    { value: 'Role 2', viewValue: 'Role 2' },\r\n  ];\r\n\r\n  action: any[] = [\r\n    { value: 'SCAN', viewValue: 'Scan' },\r\n    { value: 'SCAN AND REPAIR', viewValue: 'Scan and repair' },\r\n  ];\r\n\r\n  foods: any[] = [\r\n    { value: 'CSV', viewValue: 'CSV File' },\r\n    { value: 'PDF', viewValue: 'PDF File' },\r\n    { value: 'TXT', viewValue: 'TXT File' },\r\n  ];\r\n\r\n  constructor(private customerSrv: Customer, private applicationSrv: Application) {\r\n    this.orgEntities = this.customerSrv.getAllOe();\r\n    this.customers = this.customerSrv.getAllCustomers();\r\n    this.applications = this.applicationSrv.getapplications();\r\n    this.fileTypesForm = this._formBuilder.group({\r\n      action: ['', Validators.required],\r\n      type: ['', Validators.required],\r\n      size: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n\r\n  addConfiguration(flowName: any) {\r\n    if (this.fileTypesForm.valid) {\r\n      const config = { ...this.fileTypesForm.value, id: this.configurationId, flowName, }\r\n      this.configurations.push(config);\r\n      this.fileTypesForm.reset();\r\n      this.configurationId++;\r\n    }\r\n  }\r\n\r\n  deleteConfiguration(index: number) {\r\n    this.configurations.splice(index, 1);\r\n  }\r\n\r\n  consfigurationSelected(configurationId: any) {\r\n    return this.selectedConfiguration && this.selectedConfiguration.id === configurationId;\r\n  }\r\n\r\n  selectConfiguration(config: any) {\r\n    this.selectedConfiguration = config;\r\n  }\r\n\r\n  filterConfigurations(flowName: any) {\r\n    return this.configurations.filter((config: any) => config.flowName === flowName);\r\n  }\r\n\r\n  selectapplication(app: any) {\r\n    this.selectedApplication = app;\r\n  }\r\n\r\n  hasConfiguration(flowName: string) {\r\n    return this.configurations.some((config: any) => config.flowName === flowName);\r\n  }\r\n\r\n  copyConfiguration(flowName: string) {\r\n    if (this.selectedConfiguration) {\r\n      const config = { ...this.selectedConfiguration };\r\n      config.flowName = flowName;\r\n      config.id = this.configurationId;\r\n      console.log(config);\r\n      this.configurations.push(config);\r\n      this.configurationId++;\r\n    }\r\n  }\r\n\r\n\r\n  applicationConfigFormGroup = this._formBuilder.group({\r\n    customer: ['' as any, Validators.required],\r\n    OrgEntity: [{ value: '', disabled: true } as any, Validators.required],\r\n    application: [{ value: '', disabled: true } as any, Validators.required],\r\n    oidcProviders: [{ value: '', disabled: true }, Validators.required],\r\n    instrospecionEndpoint: [{ value: '', disabled: true }, Validators.required],\r\n    storageRegion: [{ value: '', disabled: true }, Validators.required],\r\n    status: [{ value: true, disabled: true }, Validators.required],\r\n    enabled: [{ value: false, disabled: true }, Validators.required],\r\n  })\r\n\r\n  roleConfigFormGroup = this._formBuilder.group({\r\n    roles: ['', Validators.required],\r\n  });\r\n\r\n  instros = ''\r\n\r\n  getIntrospecionEndpoint(value: string) {\r\n    this.selected = value;\r\n    if (value === 'IDP') {\r\n      this.instros = 'https://OIDC.AZ/instrospect';\r\n      this.applicationConfigFormGroup.patchValue({ instrospecionEndpoint: this.instros });\r\n    } else if (value === 'CUSTOM') {\r\n      this.instros = '';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n"],"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","names":["stepper_default","init_stepper","init_stepper","init_stepper","TransitionCheckState","init_private","items","init_tree","defaults","init_stepper","init_tree","Stepper"],"x_google_ignoreList":[2,3,4,5,6,7,8,9,10,11,12,13]}