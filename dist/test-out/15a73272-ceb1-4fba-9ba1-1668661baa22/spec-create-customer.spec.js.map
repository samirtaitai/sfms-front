{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\features\\customer\\create-customer\\create-customer.html", "angular:jit:style:src\\app\\features\\customer\\create-customer\\create-customer.css", "src/app/features/customer/create-customer/create-customer.ts", "src/app/features/customer/create-customer/create-customer.spec.ts"],
  "sourcesContent": ["<app-nav-bar></app-nav-bar>\r\n\r\n<div class=\"page-container\">\r\n    <mat-card class=\"application-card\" appearance=\"outlined\">\r\n        <mat-card-header>\r\n            <mat-icon mat-card-avatar>web</mat-icon>\r\n            <mat-card-title>Create Customer</mat-card-title>\r\n            <mat-card-subtitle>Create a new customer to the platform</mat-card-subtitle>\r\n        </mat-card-header>\r\n        <mat-card-content style=\"padding: 20px; display:flex; flex-direction: column;\">\r\n            <p>To create a new customer, please provide the following details:</p>\r\n            <form [formGroup]=\"customerFormGroup\" style=\"padding: 20px; display:flex; flex-direction: column;\">\r\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n                    <mat-label>Customer Name</mat-label>\r\n                    <input formControlName=\"name\" matInput placeholder=\"Enter the customer name\">\r\n                </mat-form-field>\r\n                <mat-form-field appearance=\"fill\" class=\"full-width\">\r\n                    <mat-label>Customer Description</mat-label>\r\n                    <input formControlName=\"description\" matInput placeholder=\"Enter the customer descripton\">\r\n                </mat-form-field>\r\n                <mat-button-toggle-group formControlName=\"type\" [hideSingleSelectionIndicator]=\"false\">\r\n                    <mat-button-toggle value=\"PRODUCT OWNER\">Product owner</mat-button-toggle>\r\n                    <mat-button-toggle value=\"ORG ENTITY\">Org Entity</mat-button-toggle>\r\n                </mat-button-toggle-group>\r\n            </form>\r\n                    <button matButton=\"filled\" style=\"display: flex; margin-left: auto; border-radius: 5px; height: 25px;\"\r\n            (click)=\"createCustomer()\">\r\n            <mat-icon>post_add</mat-icon>\r\n            Add Flow\r\n        </button>\r\n        </mat-card-content>\r\n\r\n    </mat-card>\r\n</div>", "/* src/app/features/customer/create-customer/create-customer.css */\n.page-container {\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n}\n.application-card {\n  width: 420px;\n  color: #006192;\n  background-color: white;\n}\n/*# sourceMappingURL=create-customer.css.map */\n", "import { Component, inject } from '@angular/core';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { CUSTOMER_TYPE } from '../../../core/interfaces/customer-type';\r\nimport { NavBar } from \"../../../components/nav-bar/nav-bar\";\r\nimport { MatCard, MatCardModule } from \"@angular/material/card\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { Customer } from '../customer/customer';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-customer',\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatButtonToggleModule,\r\n    MatInputModule,\r\n    MatButton,\r\n    NavBar,\r\n    MatCard,\r\n    MatCardModule,\r\n    MatIconModule\r\n  ],\r\n  standalone: true,\r\n  templateUrl: './create-customer.html',\r\n  styleUrl: './create-customer.css'\r\n})\r\nexport class CreateCustomer {\r\n  private _formBuilder = inject(FormBuilder);\r\n  customerFormGroup: any\r\n  backHistory() {\r\n    history.back();\r\n  }\r\n  constructor(private customerSrv: Customer) {\r\n    this.customerFormGroup = this._formBuilder.group({\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      type: ['', Validators.required] as unknown as CUSTOMER_TYPE\r\n    });\r\n  }\r\n\r\n\r\n  createCustomer() {\r\n    const { name, description, type } = this.customerFormGroup.value;\r\n    if (name && description && type) {\r\n      this.customerSrv.setCustomerData(name, description, type)\r\n      this.customerSrv.createCustomer();\r\n      this.customerFormGroup.reset();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\nimport { CreateCustomer } from './create-customer';\r\n\r\ndescribe('CreateCustomer', () => {\r\n  let component: CreateCustomer;\r\n  let fixture: ComponentFixture<CreateCustomer>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      imports: [CreateCustomer]\r\n    })\r\n    .compileComponents();\r\n\r\n    fixture = TestBed.createComponent(CreateCustomer);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,wBAAA;AAAA;AAAA,IAAAD,2BAAA;AAAA;AAAA;;;IC8Ba;;;;;;;AA9Bb;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAoBO,IAAM,iBAAN,MAAME,gBAAc;MAML;MALZ,eAAe,OAAO,WAAW;MACzC;MACA,cAAW;AACT,gBAAQ,KAAI;MACd;MACA,YAAoB,aAAqB;AAArB,aAAA,cAAA;AAClB,aAAK,oBAAoB,KAAK,aAAa,MAAM;UAC/C,MAAM,CAAC,IAAI,WAAW,QAAQ;UAC9B,aAAa,CAAC,IAAI,WAAW,QAAQ;UACrC,MAAM,CAAC,IAAI,WAAW,QAAQ;SAC/B;MACH;MAGA,iBAAc;AACZ,cAAM,EAAE,MAAM,aAAa,KAAI,IAAK,KAAK,kBAAkB;AAC3D,YAAI,QAAQ,eAAe,MAAM;AAC/B,eAAK,YAAY,gBAAgB,MAAM,aAAa,IAAI;AACxD,eAAK,YAAY,eAAc;AAC/B,eAAK,kBAAkB,MAAK;QAC9B;MACF;;;;;AAtBW,qBAAc,WAAA;MAjB1B,UAAU;QACT,UAAU;QACV,SAAS;UACP;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;QAEF,YAAY;QACZ,UAAA;;OAED;OACY,cAAc;;;;;AC9B3B;;;AAEA,IAAAC;AAEA,aAAS,kBAAkB,MAAK;AAC9B,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,cAAc;SACzB,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,cAAc;AAChD,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["create_customer_default", "init_create_customer", "CreateCustomer", "init_create_customer"]
}
