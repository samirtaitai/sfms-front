{
  "version": 3,
  "sources": ["__mocks__/login.ts", "src/app/core/models/User.ts", "src/app/core/auth.ts"],
  "sourcesContent": ["import { linkedSignal } from \"@angular/core\";\r\nimport { delay, Observable, of } from \"rxjs\";\r\n\r\nconst users = [\r\n    { userName: 'admin', password: 'admin', rol: 'admin' },\r\n    { userName: 'user', password: 'user', rol: 'agent' }\r\n]\r\nexport async function loginMock(userName: string, password: string): Promise<Observable<any>> {\r\n    const filtredUsers = of(users.filter(user => (user.userName == userName && user.password == password))).pipe(delay(2000));\r\n    return filtredUsers;\r\n}\r\n", "export class User {\r\n    userName: string;\r\n    rol: string;\r\n    constructor(userName: string, rol: string) {\r\n        this.userName = userName;\r\n        this.rol = rol;\r\n    }\r\n}", "import { inject, Injectable } from '@angular/core';\r\nimport { loginMock } from '../../../__mocks__/login';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { User } from './models/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Auth {\r\n  private router = inject(Router);\r\n  user: User = {\r\n    userName: '',\r\n    rol: ''\r\n  };\r\n  loadingLogin = new Subject<boolean>();\r\n\r\n  subscribeToLoading(): Observable<boolean> {\r\n    return this.loadingLogin.asObservable();\r\n  }\r\n\r\n  logOut() {\r\n    this.user = {\r\n      userName: '',\r\n      rol: ''\r\n    };\r\n    this.router.navigate(['/login'])\r\n  }\r\n\r\n  async login(userName: string, password: string) {\r\n    this.loadingLogin.next(true);\r\n    (await loginMock(userName, password)).subscribe(\r\n      {\r\n        next: (response) => {\r\n          if (response.length) {\r\n            const { userName, rol } = response[0];\r\n            this.user = new User(userName, rol);\r\n            switch (this.user.rol) {\r\n              case 'admin':\r\n                this.router.navigate(['/admin-distributive']);\r\n                break;\r\n              case 'agent':\r\n                this.router.navigate(['/home']);\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n          this.loadingLogin.next(false);\r\n        }\r\n      }\r\n    )\r\n\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAOA,SAAsB,UAAU,UAAkB,UAAgB;;AAC9D,UAAM,eAAe,GAAG,MAAM,OAAO,UAAS,KAAK,YAAY,YAAY,KAAK,YAAY,QAAS,CAAC,EAAE,KAAK,MAAM,GAAI,CAAC;AACxH,WAAO;EACX;;AATA,IAEM;AAFN;;;;AAEA,IAAM,QAAQ;MACV,EAAE,UAAU,SAAS,UAAU,SAAS,KAAK,QAAO;MACpD,EAAE,UAAU,QAAQ,UAAU,QAAQ,KAAK,QAAO;;;;;;ACLtD,IAAa;AAAb;;;AAAM,IAAO,OAAP,MAAW;MACb;MACA;MACA,YAAY,UAAkB,KAAW;AACrC,aAAK,WAAW;AAChB,aAAK,MAAM;MACf;;;;;;ICGS;;;;;AATb;AACA;AACA;AACA;AACA;AAKO,IAAM,OAAN,MAAMA,MAAI;MACP,SAAS,OAAO,MAAM;MAC9B,OAAa;QACX,UAAU;QACV,KAAK;;MAEP,eAAe,IAAI,QAAO;MAE1B,qBAAkB;AAChB,eAAO,KAAK,aAAa,aAAY;MACvC;MAEA,SAAM;AACJ,aAAK,OAAO;UACV,UAAU;UACV,KAAK;;AAEP,aAAK,OAAO,SAAS,CAAC,QAAQ,CAAC;MACjC;MAEM,MAAM,UAAkB,UAAgB;;AAC5C,eAAK,aAAa,KAAK,IAAI;AAC3B,WAAC,MAAM,UAAU,UAAU,QAAQ,GAAG,UACpC;YACE,MAAM,CAAC,aAAY;AACjB,kBAAI,SAAS,QAAQ;AACnB,sBAAM,EAAE,UAAAC,WAAU,IAAG,IAAK,SAAS,CAAC;AACpC,qBAAK,OAAO,IAAI,KAAKA,WAAU,GAAG;AAClC,wBAAQ,KAAK,KAAK,KAAK;kBACrB,KAAK;AACH,yBAAK,OAAO,SAAS,CAAC,qBAAqB,CAAC;AAC5C;kBACF,KAAK;AACH,yBAAK,OAAO,SAAS,CAAC,OAAO,CAAC;AAC9B;kBACF;AACE;gBACJ;cACF;AACA,mBAAK,aAAa,KAAK,KAAK;YAC9B;WACD;QAGL;;;AA5CW,WAAI,WAAA;MAHhB,WAAW;QACV,YAAY;OACb;OACY,IAAI;;;",
  "names": ["Auth", "userName"]
}
